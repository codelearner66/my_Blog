/*
 Navicat MySQL Data Transfer

 Source Server         : sql1
 Source Server Type    : MySQL
 Source Server Version : 80019
 Source Host           : localhost:3306
 Source Schema         : my_blog

 Target Server Type    : MySQL
 Target Server Version : 80019
 File Encoding         : 65001

 Date: 29/08/2022 04:42:48
*/

SET NAMES utf8mb4;
SET FOREIGN_KEY_CHECKS = 0;

-- ----------------------------
-- Table structure for my_article
-- ----------------------------
DROP TABLE IF EXISTS `my_article`;
CREATE TABLE `my_article`  (
  `id` bigint NOT NULL AUTO_INCREMENT,
  `title` varchar(256) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '标题',
  `content` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL COMMENT '文章内容',
  `summary` varchar(1024) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '文章摘要',
  `category_id` bigint NULL DEFAULT NULL COMMENT '所属分类id',
  `thumbnail` varchar(256) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '缩略图',
  `is_top` char(1) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT '0' COMMENT '是否置顶（0否，1是）',
  `status` char(1) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT '1' COMMENT '状态（0已发布，1草稿）',
  `view_count` bigint NULL DEFAULT 0 COMMENT '访问量',
  `is_comment` char(1) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT '1' COMMENT '是否允许评论 1是，0否',
  `create_by` bigint NULL DEFAULT NULL,
  `create_time` datetime NULL DEFAULT NULL,
  `update_by` bigint NULL DEFAULT NULL,
  `update_time` datetime NULL DEFAULT NULL,
  `del_flag` int NULL DEFAULT 0 COMMENT '删除标志（0代表未删除，1代表已删除）',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 23 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci COMMENT = '文章表' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of my_article
-- ----------------------------
INSERT INTO `my_article` VALUES (1, 'SpringSecurity从入门到精通', '<p style=\"padding-left:2em;\">亲爱的同学们：</p><p style=\"padding-left:2em;\">近期全国部分省市已进入汛期，暴雨频发，特别是河南省多地遭受洪涝灾害影响，汛情十分严峻。</p><p style=\"padding-left:2em;\">为更好地帮助因遭受洪涝灾害致困难同学渡过难关，学校启动临时困难补助申请工作，如同学们（含2021级新生）家庭突遇重大自然灾害造成人员伤害或经济损失，导致家庭经济出现临时困难，请及时与班主任和辅导员联系，向二级学院提交临时困难补助申请及相关证明材料，经二级学院审核上报学校学生资助管理中心，学校将酌情对受影响的学生进行一次性补助。我们将及时为大家提供帮助，保障同学们的学习生活，解决现实困难。</p><p style=\"padding-left:2em;\">同学们如有因紧急灾害遇到经济困难可与学校学生资助管理中心联系。学校始终是大家坚强的后盾，风雨一起扛！</p><p>联系电话：魏老师 18777890717</p><p>方老师 15878670191</p><p>梁老师 18278883225</p><p><br/></p><p>河池学院学生资助管理中心</p><p>2021年7月21日</p>', 'SpringSecurity框架教程-Spring Security+JWT实现项目级前端分离认证授权', 1, 'http:r8o5f106d.hn-bkt.clouddn.com/myblog/00.jpg', '1', '0', 208, '0', 1, '2022-04-22 06:36:57', NULL, NULL, 0);
INSERT INTO `my_article` VALUES (2, 'weq', '<p style=\"padding-left:2em;\">亲爱的同学们：</p><p style=\"padding-left:2em;\">近期全国部分省市已进入汛期，暴雨频发，特别是河南省多地遭受洪涝灾害影响，汛情十分严峻。</p><p style=\"padding-left:2em;\">为更好地帮助因遭受洪涝灾害致困难同学渡过难关，学校启动临时困难补助申请工作，如同学们（含2021级新生）家庭突遇重大自然灾害造成人员伤害或经济损失，导致家庭经济出现临时困难，请及时与班主任和辅导员联系，向二级学院提交临时困难补助申请及相关证明材料，经二级学院审核上报学校学生资助管理中心，学校将酌情对受影响的学生进行一次性补助。我们将及时为大家提供帮助，保障同学们的学习生活，解决现实困难。</p><p style=\"padding-left:2em;\">同学们如有因紧急灾害遇到经济困难可与学校学生资助管理中心联系。学校始终是大家坚强的后盾，风雨一起扛！</p><p>联系电话：魏老师 18777890717</p><p>方老师 15878670191</p><p>梁老师 18278883225</p><p><br/></p><p>河池学院学生资助管理中心</p><p></p><p>2021年7月21日</p>', 'adad', 2, 'http:r8o5f106d.hn-bkt.clouddn.com/myblog/0c.jpg', '1', '0', 22, '0', 1, '2022-01-21 14:58:30', NULL, NULL, 1);
INSERT INTO `my_article` VALUES (3, '汛情通知', '<p style=\"padding-left:2em;\">亲爱的同学们：</p><p style=\"padding-left:2em;\">近期全国部分省市已进入汛期，暴雨频发，特别是河南省多地遭受洪涝灾害影响，汛情十分严峻。</p><p style=\"padding-left:2em;\">为更好地帮助因遭受洪涝灾害致困难同学渡过难关，学校启动临时困难补助申请工作，如同学们（含2021级新生）家庭突遇重大自然灾害造成人员伤害或经济损失，导致家庭经济出现临时困难，请及时与班主任和辅导员联系，向二级学院提交临时困难补助申请及相关证明材料，经二级学院审核上报学校学生资助管理中心，学校将酌情对受影响的学生进行一次性补助。我们将及时为大家提供帮助，保障同学们的学习生活，解决现实困难。</p><p style=\"padding-left:2em;\">同学们如有因紧急灾害遇到经济困难可与学校学生资助管理中心联系。学校始终是大家坚强的后盾，风雨一起扛！</p><p>联系电话：魏老师 18777890717</p><p>方老师 15878670191</p><p>梁老师 18278883225</p><p><br/></p><p>河池学院学生资助管理中心</p><p>2021年7月21日</p>', 'sadad', 2, 'http:r8o5f106d.hn-bkt.clouddn.com/myblog/0e.jpg', '1', '0', 44, '0', 1, '2022-05-06 15:21:29', NULL, NULL, 0);
INSERT INTO `my_article` VALUES (5, 'sdad', '<p style=\"padding-left:2em;\">亲爱的同学们：</p><p style=\"padding-left:2em;\">近期全国部分省市已进入汛期，暴雨频发，特别是河南省多地遭受洪涝灾害影响，汛情十分严峻。</p><p style=\"padding-left:2em;\">为更好地帮助因遭受洪涝灾害致困难同学渡过难关，学校启动临时困难补助申请工作，如同学们（含2021级新生）家庭突遇重大自然灾害造成人员伤害或经济损失，导致家庭经济出现临时困难，请及时与班主任和辅导员联系，向二级学院提交临时困难补助申请及相关证明材料，经二级学院审核上报学校学生资助管理中心，学校将酌情对受影响的学生进行一次性补助。我们将及时为大家提供帮助，保障同学们的学习生活，解决现实困难。</p><p style=\"padding-left:2em;\">同学们如有因紧急灾害遇到经济困难可与学校学生资助管理中心联系。学校始终是大家坚强的后盾，风雨一起扛！</p><p>联系电话：魏老师 18777890717</p><p>方老师 15878670191</p><p>梁老师 18278883225</p><p><br/></p><p>河池学院学生资助管理中心</p><p>2021年7月21日</p>', '1212', 2, '', '1', '3', 47, '0', 1, '2022-04-27 10:43:46', NULL, NULL, 0);
INSERT INTO `my_article` VALUES (9, 'IO流-1', '<h1 style=\"break-after: avoid-page; break-inside: avoid; orphans: 4; font-size: 2.25em; margin-top: 1rem; margin-bottom: 1rem; position: relative; line-height: 1.2; cursor: text; border-bottom: 1px solid rgb(238, 238, 238); white-space: pre-wrap; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\">IO流-1</h1><h2 style=\"break-after: avoid-page; break-inside: avoid; orphans: 4; font-size: 1.75em; margin-top: 1rem; margin-bottom: 1rem; position: relative; line-height: 1.225; cursor: text; border-bottom: 1px solid rgb(238, 238, 238); white-space: pre-wrap; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\">1. File</h2><h3 style=\"break-after: avoid-page; break-inside: avoid; orphans: 4; font-size: 1.5em; margin-top: 1rem; margin-bottom: 1rem; position: relative; line-height: 1.43; cursor: text; white-space: pre-wrap; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\">1.1 概述</h3><p style=\"line-height: inherit; orphans: 4; margin-top: 0.8em; margin-bottom: 0.8em; white-space: pre-wrap; position: relative; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\"><span style=\"display: inline-block; white-space: pre;\">	</span>File对象主要是用来表示文件或者是目录的路径的。类中提供了很多对文件或者文件夹操作的常用方法。</p><p style=\"line-height: inherit; orphans: 4; margin-top: 0.8em; margin-bottom: 0.8em; white-space: pre-wrap; position: relative; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\"><span style=\"display: inline-block; white-space: pre;\">	</span></p><h3 style=\"break-after: avoid-page; break-inside: avoid; orphans: 4; font-size: 1.5em; margin-top: 1rem; margin-bottom: 1rem; position: relative; line-height: 1.43; cursor: text; white-space: pre-wrap; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\">1.2 创建对象</h3><ul style=\"margin-top: 0.8em; margin-bottom: 0.8em; margin-left: 0px; padding-left: 30px; position: relative; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif; font-size: 16px;\"><li style=\"position: relative;\"><p style=\"line-height: inherit; orphans: 4; margin-top: 0px; margin-bottom: 0.5rem; white-space: pre-wrap; position: relative;\">绝对路径</p><p style=\"line-height: inherit; orphans: 4; margin-top: 0.5rem; margin-bottom: 0.5rem; white-space: pre-wrap; position: relative;\">以磁盘名开头的路径。例如：D:\\Program Files\\Java\\jdk1.8.0_172</p></li><li style=\"position: relative;\"><p style=\"line-height: inherit; orphans: 4; margin-top: 0px; margin-bottom: 0.5rem; white-space: pre-wrap; position: relative;\">相对路径</p><p style=\"line-height: inherit; orphans: 4; margin-top: 0.5rem; margin-bottom: 0.5rem; white-space: pre-wrap; position: relative;\">不是以盘符开头的，相对于当前项目下的路径。例如： a.txt</p><p style=\"line-height: inherit; orphans: 4; margin-top: 0.5rem; margin-bottom: 0.5rem; white-space: pre-wrap; position: relative;\"></p></li></ul><pre style=\"overflow: visible; font-family: var(--monospace); font-size: 0.9em; break-inside: avoid; white-space: normal; background-image: inherit; background-position: inherit; background-size: inherit; background-repeat: inherit; background-attachment: inherit; background-origin: inherit; background-clip: inherit; background-color: rgb(248, 248, 248); border-color: rgb(231, 234, 237); border-radius: 3px; padding: 8px 4px 6px; margin-bottom: 15px; margin-top: 15px; width: inherit; position: relative !important;\"><span style=\"padding-right: 0.1px;\"><span style=\"color: rgb(0, 0, 0);\">File</span>(<span style=\"color: rgb(0, 136, 85);\">String</span> <span style=\"color: rgb(0, 0, 0);\">pathname</span>) <span style=\"color: rgb(170, 85, 0);\">//通过字符串类型的路径来创建对象</span></span><br/><span style=\"padding-right: 0.1px;\"><span style=\"color: rgb(0, 0, 0);\">File</span>(<span style=\"color: rgb(0, 136, 85);\">String</span> <span style=\"color: rgb(0, 0, 0);\">parent</span>, <span style=\"color: rgb(0, 136, 85);\">String</span> <span style=\"color: rgb(0, 0, 0);\">child</span>) <span style=\"color: rgb(170, 85, 0);\">//通过父目录的路径(字符串类型)和文件(文件夹)名称来创建对象</span></span><br/><span style=\"padding-right: 0.1px;\"><span style=\"color: rgb(0, 0, 0);\">File</span>(<span style=\"color: rgb(0, 0, 0);\">File</span> <span style=\"color: rgb(0, 0, 0);\">parent</span>, <span style=\"color: rgb(0, 136, 85);\">String</span> <span style=\"color: rgb(0, 0, 0);\">child</span>)<span style=\"color: rgb(170, 85, 0);\">//通过父目录的路径(File类型)和文件(文件夹)名称来创建对象</span></span></pre><p style=\"line-height: inherit; orphans: 4; margin-top: 0.8em; margin-bottom: 0.8em; white-space: pre-wrap; position: relative; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\"></p><h3 style=\"break-after: avoid-page; break-inside: avoid; orphans: 4; font-size: 1.5em; margin-top: 1rem; margin-bottom: 1rem; position: relative; line-height: 1.43; cursor: text; white-space: pre-wrap; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\">1.3 常用方法</h3><pre style=\"overflow: visible; font-family: var(--monospace); font-size: 0.9em; break-inside: avoid; white-space: normal; background-image: inherit; background-position: inherit; background-size: inherit; background-repeat: inherit; background-attachment: inherit; background-origin: inherit; background-clip: inherit; background-color: rgb(248, 248, 248); border-color: rgb(231, 234, 237); border-radius: 3px; padding: 8px 4px 6px; margin-bottom: 15px; margin-top: 15px; width: inherit; position: relative !important;\"><span style=\"padding-right: 0.1px;\"><span style=\"color: rgb(0, 136, 85);\">boolean</span> <span style=\"color: rgb(0, 0, 255);\">createNewFile</span>()<span style=\"color: rgb(170, 85, 0);\">//根据路径创建一个文件，返回值代表创建是否成功</span></span><br/><span style=\"padding-right: 0.1px;\"><span style=\"color: rgb(0, 136, 85);\">boolean</span> <span style=\"color: rgb(0, 0, 255);\">mkdir</span>() <span style=\"color: rgb(170, 85, 0);\">//根据路径创建一个文件夹，返回值代表创建是否成功</span></span><br/><span style=\"padding-right: 0.1px;\"><span style=\"color: rgb(0, 136, 85);\">boolean</span> <span style=\"color: rgb(0, 0, 255);\">mkdirs</span>() <span style=\"color: rgb(170, 85, 0);\">//根据路径创建一个文件夹,如果父目录不存在会自动创建父目录</span></span><br/><span style=\"padding-right: 0.1px;\"></span><br/><span style=\"padding-right: 0.1px;\"><span style=\"color: rgb(0, 136, 85);\">boolean</span> <span style=\"color: rgb(0, 0, 255);\">exists</span>() <span style=\"color: rgb(170, 85, 0);\">//判断文件或者文件夹是否存在</span></span><br/><span style=\"padding-right: 0.1px;\"><span style=\"color: rgb(0, 136, 85);\">boolean</span> <span style=\"color: rgb(0, 0, 255);\">isFile</span>() <span style=\"color: rgb(170, 85, 0);\">//判断是否是一个文件</span></span><br/><span style=\"padding-right: 0.1px;\"><span style=\"color: rgb(0, 136, 85);\">boolean</span> <span style=\"color: rgb(0, 0, 255);\">isDirectory</span>() <span style=\"color: rgb(170, 85, 0);\">//判断是否是一个文件夹</span></span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;</span><br/><span style=\"padding-right: 0.1px;\"><span style=\"color: rgb(0, 136, 85);\">boolean</span> <span style=\"color: rgb(0, 0, 255);\">delete</span>() <span style=\"color: rgb(170, 85, 0);\">//删除文件，或者删除空文件夹，返回值代表删除是否成功</span></span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;</span><br/><span style=\"padding-right: 0.1px;\"><span style=\"color: rgb(0, 136, 85);\">long</span> <span style=\"color: rgb(0, 0, 255);\">length</span>() <span style=\"color: rgb(170, 85, 0);\">//获取一个文件的大小，对文件夹无意义</span></span><br/><span style=\"padding-right: 0.1px;\"></span><br/><span style=\"padding-right: 0.1px;\"><span style=\"color: rgb(0, 136, 85);\">String</span> <span style=\"color: rgb(0, 0, 255);\">getName</span>()<span style=\"color: rgb(170, 85, 0);\">//获取文件或文件夹的名字</span></span><br/><span style=\"padding-right: 0.1px;\"><span style=\"color: rgb(0, 0, 0);\">File</span> <span style=\"color: rgb(0, 0, 255);\">getParentFile</span>() <span style=\"color: rgb(170, 85, 0);\">//获取父目录的File对象</span></span><br/><span style=\"padding-right: 0.1px;\"><span style=\"color: rgb(0, 136, 85);\">String</span> <span style=\"color: rgb(0, 0, 255);\">getAbsolutePath</span>()<span style=\"color: rgb(170, 85, 0);\">//获取File对象的绝对路径 &nbsp; </span></span></pre><p style=\"line-height: inherit; orphans: 4; margin-top: 0.8em; margin-bottom: 0.8em; white-space: pre-wrap; position: relative; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\"></p><h3 style=\"break-after: avoid-page; break-inside: avoid; orphans: 4; font-size: 1.5em; margin-top: 1rem; margin-bottom: 1rem; position: relative; line-height: 1.43; cursor: text; white-space: pre-wrap; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\">1.4 重要方法</h3><pre style=\"overflow: visible; font-family: var(--monospace); font-size: 0.9em; break-inside: avoid; white-space: normal; background-image: inherit; background-position: inherit; background-size: inherit; background-repeat: inherit; background-attachment: inherit; background-origin: inherit; background-clip: inherit; background-color: rgb(248, 248, 248); border-color: rgb(231, 234, 237); border-radius: 3px; padding: 8px 4px 6px; margin-bottom: 15px; margin-top: 15px; width: inherit; position: relative !important;\"><span style=\"padding-right: 0.1px;\"><span style=\"color: rgb(0, 0, 0);\">File</span>[] <span style=\"color: rgb(0, 0, 255);\">listFiles</span>() <span style=\"color: rgb(170, 85, 0);\">//如果当前File对象是一个文件夹，可以获取文件夹下的所有文件或者文件夹的File对象。</span></span></pre><p style=\"line-height: inherit; orphans: 4; margin-top: 0.8em; margin-bottom: 0.8em; white-space: pre-wrap; position: relative; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\">注意：如果不是文件夹或者是文件夹的权限受限返回值是null。所以一定要对返回结果做非空判断。</p><pre style=\"overflow: visible; font-family: var(--monospace); font-size: 0.9em; break-inside: avoid; white-space: normal; background-image: inherit; background-position: inherit; background-size: inherit; background-repeat: inherit; background-attachment: inherit; background-origin: inherit; background-clip: inherit; background-color: rgb(248, 248, 248); border-color: rgb(231, 234, 237); border-radius: 3px; padding: 8px 4px 6px; margin-bottom: 15px; margin-top: 15px; width: inherit; position: relative !important;\"><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span style=\"color: rgb(119, 0, 136);\">public</span> <span style=\"color: rgb(119, 0, 136);\">static</span> <span style=\"color: rgb(0, 136, 85);\">void</span> <span style=\"color: rgb(0, 0, 255);\">main</span>(<span style=\"color: rgb(0, 136, 85);\">String</span>[] <span style=\"color: rgb(0, 0, 0);\">args</span>) {</span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp;<span style=\"color: rgb(0, 0, 0);\">File</span> <span style=\"color: rgb(0, 0, 0);\">dir</span> <span style=\"color: rgb(152, 26, 26);\">=</span> <span style=\"color: rgb(119, 0, 136);\">new</span> <span style=\"color: rgb(0, 0, 0);\">File</span>(<span style=\"color: rgb(170, 17, 17);\">\"C:\\\\Users\\\\root\\\\Desktop\\\\test\\\\a.txt\"</span>);</span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp;<span style=\"color: rgb(0, 0, 0);\">File</span>[] <span style=\"color: rgb(0, 0, 0);\">files</span> <span style=\"color: rgb(152, 26, 26);\">=</span> <span style=\"color: rgb(0, 0, 0);\">dir</span>.<span style=\"color: rgb(0, 0, 0);\">listFiles</span>();</span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp;<span style=\"color: rgb(119, 0, 136);\">if</span>(<span style=\"color: rgb(0, 0, 0);\">files</span><span style=\"color: rgb(152, 26, 26);\">!=</span><span style=\"color: rgb(34, 17, 153);\">null</span>){</span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span style=\"color: rgb(119, 0, 136);\">for</span> (<span style=\"color: rgb(0, 0, 0);\">File</span> <span style=\"color: rgb(0, 0, 0);\">file</span> : <span style=\"color: rgb(0, 0, 0);\">files</span>) {</span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span style=\"color: rgb(0, 0, 0);\">System</span>.<span style=\"color: rgb(0, 0, 0);\">out</span>.<span style=\"color: rgb(0, 0, 0);\">println</span>(<span style=\"color: rgb(0, 0, 0);\">file</span>);</span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  }</span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp;  }</span><br/><span style=\"padding-right: 0.1px;\"> &nbsp;  }</span></pre><p style=\"line-height: inherit; orphans: 4; margin-top: 0.8em; margin-bottom: 0.8em; white-space: pre-wrap; position: relative; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\"></p><h2 style=\"break-after: avoid-page; break-inside: avoid; orphans: 4; font-size: 1.75em; margin-top: 1rem; margin-bottom: 1rem; position: relative; line-height: 1.225; cursor: text; border-bottom: 1px solid rgb(238, 238, 238); white-space: pre-wrap; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\">2. 递归</h2><p style=\"line-height: inherit; orphans: 4; margin-top: 0.8em; margin-bottom: 0.8em; white-space: pre-wrap; position: relative; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\"><span style=\"display: inline-block; white-space: pre;\">	</span>在方法中调用方法本身就是递归。</p><p style=\"line-height: inherit; orphans: 4; margin-top: 0.8em; margin-bottom: 0.8em; white-space: pre-wrap; position: relative; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\">例如</p><pre style=\"overflow: visible; font-family: var(--monospace); font-size: 0.9em; break-inside: avoid; white-space: normal; background-image: inherit; background-position: inherit; background-size: inherit; background-repeat: inherit; background-attachment: inherit; background-origin: inherit; background-clip: inherit; background-color: rgb(248, 248, 248); border-color: rgb(231, 234, 237); border-radius: 3px; padding: 8px 4px 6px; margin-bottom: 15px; margin-top: 15px; width: inherit; position: relative !important;\"><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span style=\"color: rgb(119, 0, 136);\">public</span> <span style=\"color: rgb(0, 136, 85);\">int</span> <span style=\"color: rgb(0, 0, 255);\">f</span>(<span style=\"color: rgb(0, 136, 85);\">int</span> <span style=\"color: rgb(0, 0, 0);\">n</span>){</span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp;<span style=\"color: rgb(119, 0, 136);\">if</span>(<span style=\"color: rgb(0, 0, 0);\">n</span><span style=\"color: rgb(152, 26, 26);\">==</span><span style=\"color: rgb(17, 102, 68);\">1</span>){</span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span style=\"color: rgb(119, 0, 136);\">return</span> <span style=\"color: rgb(17, 102, 68);\">1</span>;</span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp;  }</span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp;<span style=\"color: rgb(119, 0, 136);\">return</span> <span style=\"color: rgb(0, 0, 0);\">n</span><span style=\"color: rgb(152, 26, 26);\">*</span><span style=\"color: rgb(0, 0, 0);\">f</span>(<span style=\"color: rgb(0, 0, 0);\">n</span><span style=\"color: rgb(152, 26, 26);\">-</span><span style=\"color: rgb(17, 102, 68);\">1</span>);</span><br/><span style=\"padding-right: 0.1px;\"> &nbsp;  }</span></pre><p style=\"line-height: inherit; orphans: 4; margin-top: 0.8em; margin-bottom: 0.8em; white-space: pre-wrap; position: relative; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\"></p><p style=\"line-height: inherit; orphans: 4; margin-top: 0.8em; margin-bottom: 0.8em; white-space: pre-wrap; position: relative; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\"><span style=\"display: inline-block; white-space: pre;\">	</span><strong>注意：我们在使用递归的过程中一定要保证递归能结束，不能无限递归下去不然会出现栈溢出(StackOverflowError)的情况 。</strong></p><p style=\"line-height: inherit; orphans: 4; margin-top: 0.8em; margin-bottom: 0.8em; white-space: pre-wrap; position: relative; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\"></p><p style=\"line-height: inherit; orphans: 4; margin-top: 0.8em; margin-bottom: 0.8em; white-space: pre-wrap; position: relative; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\">小结：如果既可以用递归解决又可以用循环解决。我们一般用循环解决。</p>', 'java IO流入门', 1, '/upload/1/1038f1bc6c4904b35b94dba49ebc77268.jpg', '1', '0', 6, '1', 1, '2022-04-16 09:26:24', NULL, NULL, 0);
INSERT INTO `my_article` VALUES (10, 'HelloWorld', '<h1 style=\"break-after: avoid-page; break-inside: avoid; orphans: 4; font-size: 2.25em; margin-top: 1rem; margin-bottom: 1rem; position: relative; line-height: 1.2; cursor: text; border-bottom: 1px solid rgb(238, 238, 238); white-space: pre-wrap; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\">HelloWorld</h1><h2 style=\"break-after: avoid-page; break-inside: avoid; orphans: 4; font-size: 1.75em; margin-top: 1rem; margin-bottom: 1rem; position: relative; line-height: 1.225; cursor: text; border-bottom: 1px solid rgb(238, 238, 238); white-space: pre-wrap; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\">创建java文件</h2><p style=\"line-height: inherit; orphans: 4; margin-top: 0.8em; margin-bottom: 0.8em; white-space: pre-wrap; position: relative; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\">创建一个扩展名为.java的文件。注意：注意看下是否隐藏了扩展名。</p><h2 style=\"break-after: avoid-page; break-inside: avoid; orphans: 4; font-size: 1.75em; margin-top: 1rem; margin-bottom: 1rem; position: relative; line-height: 1.225; cursor: text; border-bottom: 1px solid rgb(238, 238, 238); white-space: pre-wrap; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\">编写java代码</h2><p style=\"line-height: inherit; orphans: 4; margin-top: 0.8em; margin-bottom: 0.8em; white-space: pre-wrap; position: relative; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\">在刚刚创建的HelloWorld.java文件中编写如下代码：</p><pre style=\"overflow: visible; font-family: var(--monospace); font-size: 0.9em; break-inside: avoid; white-space: normal; background-image: inherit; background-position: inherit; background-size: inherit; background-repeat: inherit; background-attachment: inherit; background-origin: inherit; background-clip: inherit; background-color: rgb(248, 248, 248); border-color: rgb(231, 234, 237); border-radius: 3px; padding: 8px 4px 6px; margin-bottom: 15px; margin-top: 15px; width: inherit; position: relative !important;\"><span style=\"padding-right: 0.1px;\"><span style=\"color: rgb(119, 0, 136);\">public</span> <span style=\"color: rgb(119, 0, 136);\">class</span> <span style=\"color: rgb(0, 0, 255);\">HelloWorld</span> {</span><br/><span style=\"padding-right: 0.1px;\"><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span><span style=\"color: rgb(119, 0, 136);\">public</span> <span style=\"color: rgb(119, 0, 136);\">static</span> <span style=\"color: rgb(0, 136, 85);\">void</span> <span style=\"color: rgb(0, 0, 0);\">main</span>(<span style=\"color: rgb(0, 136, 85);\">String</span>[] <span style=\"color: rgb(0, 0, 0);\">args</span>){</span><br/><span style=\"padding-right: 0.1px;\"><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span><span style=\"color: rgb(0, 0, 0);\">System</span>.<span style=\"color: rgb(0, 0, 0);\">out</span>.<span style=\"color: rgb(0, 0, 0);\">println</span>(<span style=\"color: rgb(170, 17, 17);\">\"HelloWorld\"</span>);</span><br/><span style=\"padding-right: 0.1px;\"><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span>}</span><br/><span style=\"padding-right: 0.1px;\">}</span></pre><h2 style=\"break-after: avoid-page; break-inside: avoid; orphans: 4; font-size: 1.75em; margin-top: 1rem; margin-bottom: 1rem; position: relative; line-height: 1.225; cursor: text; border-bottom: 1px solid rgb(238, 238, 238); white-space: pre-wrap; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\">编译运行代码</h2><p style=\"line-height: inherit; orphans: 4; margin-top: 0.8em; margin-bottom: 0.8em; white-space: pre-wrap; position: relative; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\">java文件所在目录打开命令行窗口，编译java文件生成class文件（<strong>javac 文件名包含扩展名</strong>），运行class文件（<strong>java 类名</strong>）。</p><p style=\"line-height: inherit; orphans: 4; margin-top: 0.8em; margin-bottom: 0.8em; white-space: pre-wrap; position: relative; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\">范例如下：</p><blockquote style=\"margin-top: 0.8em; margin-bottom: 0.8em; border-left-width: 4px; border-left-color: rgb(223, 226, 229); padding: 0px 15px; color: rgb(119, 119, 119); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif; font-size: 16px;\"><p style=\"line-height: inherit; orphans: 4; margin-top: 0px; margin-bottom: 0.8em; white-space: pre-wrap; position: relative;\">javac HelloWorld.java</p><p style=\"line-height: inherit; orphans: 4; margin-top: 0.8em; white-space: pre-wrap; position: relative;\">java HelloWorld</p></blockquote><p style=\"line-height: inherit; orphans: 4; margin-top: 0.8em; margin-bottom: 0.8em; white-space: pre-wrap; position: relative; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\">效果图：</p><p style=\"line-height: inherit; orphans: 4; margin-top: 0.8em; margin-bottom: 0.8em; white-space: pre-wrap; position: relative; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\"><span style=\"min-width: 10px; min-height: 10px; position: relative; word-break: break-all; font-family: monospace; vertical-align: top; display: inline-block; width: 964px;\"></span></p><h2 style=\"break-after: avoid-page; break-inside: avoid; orphans: 4; font-size: 1.75em; margin-top: 1rem; margin-bottom: 1rem; position: relative; line-height: 1.225; cursor: text; border-bottom: 1px solid rgb(238, 238, 238); white-space: pre-wrap; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\">常见问题</h2><p style=\"line-height: inherit; orphans: 4; margin-top: 0.8em; margin-bottom: 0.8em; white-space: pre-wrap; position: relative; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\">1、非法字符问题。Java中的符号都是英文格式的。</p><p style=\"line-height: inherit; orphans: 4; margin-top: 0.8em; margin-bottom: 0.8em; white-space: pre-wrap; position: relative; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\">2、大小写问题。Java语言对大小写敏感（区分大小写）。</p><p style=\"line-height: inherit; orphans: 4; margin-top: 0.8em; margin-bottom: 0.8em; white-space: pre-wrap; position: relative; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\">3、在系统中显示文件的扩展名，避免出现HelloWorld.java.txt文件。</p><p style=\"line-height: inherit; orphans: 4; margin-top: 0.8em; margin-bottom: 0.8em; white-space: pre-wrap; position: relative; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\">4、main写错成mian</p><h2 style=\"break-after: avoid-page; break-inside: avoid; orphans: 4; font-size: 1.75em; margin-top: 1rem; margin-bottom: 1rem; position: relative; line-height: 1.225; cursor: text; border-bottom: 1px solid rgb(238, 238, 238); white-space: pre-wrap; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\">作业</h2><p style=\"line-height: inherit; orphans: 4; margin-top: 0.8em; margin-bottom: 0.8em; white-space: pre-wrap; position: relative; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\">练习完HelloWorld后尝试修改代码。尝试在控制台输出和网恋女友的告白文案。</p><p style=\"line-height: inherit; orphans: 4; margin-top: 0.8em; margin-bottom: 0.8em; white-space: pre-wrap; position: relative; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\"><strong>具体答案可以加入到学习探讨QQ群中获取。</strong></p>', 'java 入门', 1, '/upload/1/1a8c90f6ecb2d4c9cad349aec9438ac4c.jpg', '0', '0', 1, '1', 1, '2022-04-16 08:58:48', NULL, NULL, 0);
INSERT INTO `my_article` VALUES (11, 'IO流-1', '<h1 style=\"break-after: avoid-page; break-inside: avoid; orphans: 4; font-size: 2.25em; margin-top: 1rem; margin-bottom: 1rem; position: relative; line-height: 1.2; cursor: text; border-bottom: 1px solid rgb(238, 238, 238); white-space: pre-wrap; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\">IO流-1</h1><h2 style=\"break-after: avoid-page; break-inside: avoid; orphans: 4; font-size: 1.75em; margin-top: 1rem; margin-bottom: 1rem; position: relative; line-height: 1.225; cursor: text; border-bottom: 1px solid rgb(238, 238, 238); white-space: pre-wrap; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\">1. File</h2><h3 style=\"break-after: avoid-page; break-inside: avoid; orphans: 4; font-size: 1.5em; margin-top: 1rem; margin-bottom: 1rem; position: relative; line-height: 1.43; cursor: text; white-space: pre-wrap; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\">1.1 概述</h3><p style=\"line-height: inherit; orphans: 4; margin-top: 0.8em; margin-bottom: 0.8em; white-space: pre-wrap; position: relative; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\"><span style=\"display: inline-block; white-space: pre;\">	</span>File对象主要是用来表示文件或者是目录的路径的。类中提供了很多对文件或者文件夹操作的常用方法。</p><p style=\"line-height: inherit; orphans: 4; margin-top: 0.8em; margin-bottom: 0.8em; white-space: pre-wrap; position: relative; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\"><span style=\"display: inline-block; white-space: pre;\">	</span></p><h3 style=\"break-after: avoid-page; break-inside: avoid; orphans: 4; font-size: 1.5em; margin-top: 1rem; margin-bottom: 1rem; position: relative; line-height: 1.43; cursor: text; white-space: pre-wrap; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\">1.2 创建对象</h3><ul style=\"margin-top: 0.8em; margin-bottom: 0.8em; margin-left: 0px; padding-left: 30px; position: relative; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif; font-size: 16px;\"><li style=\"position: relative;\"><p style=\"line-height: inherit; orphans: 4; margin-top: 0px; margin-bottom: 0.5rem; white-space: pre-wrap; position: relative;\">绝对路径</p><p style=\"line-height: inherit; orphans: 4; margin-top: 0.5rem; margin-bottom: 0.5rem; white-space: pre-wrap; position: relative;\">以磁盘名开头的路径。例如：D:\\Program Files\\Java\\jdk1.8.0_172</p></li><li style=\"position: relative;\"><p style=\"line-height: inherit; orphans: 4; margin-top: 0px; margin-bottom: 0.5rem; white-space: pre-wrap; position: relative;\">相对路径</p><p style=\"line-height: inherit; orphans: 4; margin-top: 0.5rem; margin-bottom: 0.5rem; white-space: pre-wrap; position: relative;\">不是以盘符开头的，相对于当前项目下的路径。例如： a.txt</p><p style=\"line-height: inherit; orphans: 4; margin-top: 0.5rem; margin-bottom: 0.5rem; white-space: pre-wrap; position: relative;\"></p></li></ul><pre style=\"overflow: visible; font-family: var(--monospace); font-size: 0.9em; break-inside: avoid; white-space: normal; background-image: inherit; background-position: inherit; background-size: inherit; background-repeat: inherit; background-attachment: inherit; background-origin: inherit; background-clip: inherit; background-color: rgb(248, 248, 248); border-color: rgb(231, 234, 237); border-radius: 3px; padding: 8px 4px 6px; margin-bottom: 15px; margin-top: 15px; width: inherit; position: relative !important;\"><span style=\"padding-right: 0.1px;\"><span style=\"color: rgb(0, 0, 0);\">File</span>(<span style=\"color: rgb(0, 136, 85);\">String</span> <span style=\"color: rgb(0, 0, 0);\">pathname</span>) <span style=\"color: rgb(170, 85, 0);\">//通过字符串类型的路径来创建对象</span></span><br/><span style=\"padding-right: 0.1px;\"><span style=\"color: rgb(0, 0, 0);\">File</span>(<span style=\"color: rgb(0, 136, 85);\">String</span> <span style=\"color: rgb(0, 0, 0);\">parent</span>, <span style=\"color: rgb(0, 136, 85);\">String</span> <span style=\"color: rgb(0, 0, 0);\">child</span>) <span style=\"color: rgb(170, 85, 0);\">//通过父目录的路径(字符串类型)和文件(文件夹)名称来创建对象</span></span><br/><span style=\"padding-right: 0.1px;\"><span style=\"color: rgb(0, 0, 0);\">File</span>(<span style=\"color: rgb(0, 0, 0);\">File</span> <span style=\"color: rgb(0, 0, 0);\">parent</span>, <span style=\"color: rgb(0, 136, 85);\">String</span> <span style=\"color: rgb(0, 0, 0);\">child</span>)<span style=\"color: rgb(170, 85, 0);\">//通过父目录的路径(File类型)和文件(文件夹)名称来创建对象</span></span></pre><p style=\"line-height: inherit; orphans: 4; margin-top: 0.8em; margin-bottom: 0.8em; white-space: pre-wrap; position: relative; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\"></p><h3 style=\"break-after: avoid-page; break-inside: avoid; orphans: 4; font-size: 1.5em; margin-top: 1rem; margin-bottom: 1rem; position: relative; line-height: 1.43; cursor: text; white-space: pre-wrap; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\">1.3 常用方法</h3><pre style=\"overflow: visible; font-family: var(--monospace); font-size: 0.9em; break-inside: avoid; white-space: normal; background-image: inherit; background-position: inherit; background-size: inherit; background-repeat: inherit; background-attachment: inherit; background-origin: inherit; background-clip: inherit; background-color: rgb(248, 248, 248); border-color: rgb(231, 234, 237); border-radius: 3px; padding: 8px 4px 6px; margin-bottom: 15px; margin-top: 15px; width: inherit; position: relative !important;\"><span style=\"padding-right: 0.1px;\"><span style=\"color: rgb(0, 136, 85);\">boolean</span> <span style=\"color: rgb(0, 0, 255);\">createNewFile</span>()<span style=\"color: rgb(170, 85, 0);\">//根据路径创建一个文件，返回值代表创建是否成功</span></span><br/><span style=\"padding-right: 0.1px;\"><span style=\"color: rgb(0, 136, 85);\">boolean</span> <span style=\"color: rgb(0, 0, 255);\">mkdir</span>() <span style=\"color: rgb(170, 85, 0);\">//根据路径创建一个文件夹，返回值代表创建是否成功</span></span><br/><span style=\"padding-right: 0.1px;\"><span style=\"color: rgb(0, 136, 85);\">boolean</span> <span style=\"color: rgb(0, 0, 255);\">mkdirs</span>() <span style=\"color: rgb(170, 85, 0);\">//根据路径创建一个文件夹,如果父目录不存在会自动创建父目录</span></span><br/><span style=\"padding-right: 0.1px;\"></span><br/><span style=\"padding-right: 0.1px;\"><span style=\"color: rgb(0, 136, 85);\">boolean</span> <span style=\"color: rgb(0, 0, 255);\">exists</span>() <span style=\"color: rgb(170, 85, 0);\">//判断文件或者文件夹是否存在</span></span><br/><span style=\"padding-right: 0.1px;\"><span style=\"color: rgb(0, 136, 85);\">boolean</span> <span style=\"color: rgb(0, 0, 255);\">isFile</span>() <span style=\"color: rgb(170, 85, 0);\">//判断是否是一个文件</span></span><br/><span style=\"padding-right: 0.1px;\"><span style=\"color: rgb(0, 136, 85);\">boolean</span> <span style=\"color: rgb(0, 0, 255);\">isDirectory</span>() <span style=\"color: rgb(170, 85, 0);\">//判断是否是一个文件夹</span></span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;</span><br/><span style=\"padding-right: 0.1px;\"><span style=\"color: rgb(0, 136, 85);\">boolean</span> <span style=\"color: rgb(0, 0, 255);\">delete</span>() <span style=\"color: rgb(170, 85, 0);\">//删除文件，或者删除空文件夹，返回值代表删除是否成功</span></span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;</span><br/><span style=\"padding-right: 0.1px;\"><span style=\"color: rgb(0, 136, 85);\">long</span> <span style=\"color: rgb(0, 0, 255);\">length</span>() <span style=\"color: rgb(170, 85, 0);\">//获取一个文件的大小，对文件夹无意义</span></span><br/><span style=\"padding-right: 0.1px;\"></span><br/><span style=\"padding-right: 0.1px;\"><span style=\"color: rgb(0, 136, 85);\">String</span> <span style=\"color: rgb(0, 0, 255);\">getName</span>()<span style=\"color: rgb(170, 85, 0);\">//获取文件或文件夹的名字</span></span><br/><span style=\"padding-right: 0.1px;\"><span style=\"color: rgb(0, 0, 0);\">File</span> <span style=\"color: rgb(0, 0, 255);\">getParentFile</span>() <span style=\"color: rgb(170, 85, 0);\">//获取父目录的File对象</span></span><br/><span style=\"padding-right: 0.1px;\"><span style=\"color: rgb(0, 136, 85);\">String</span> <span style=\"color: rgb(0, 0, 255);\">getAbsolutePath</span>()<span style=\"color: rgb(170, 85, 0);\">//获取File对象的绝对路径 &nbsp; </span></span></pre><p style=\"line-height: inherit; orphans: 4; margin-top: 0.8em; margin-bottom: 0.8em; white-space: pre-wrap; position: relative; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\"></p><h3 style=\"break-after: avoid-page; break-inside: avoid; orphans: 4; font-size: 1.5em; margin-top: 1rem; margin-bottom: 1rem; position: relative; line-height: 1.43; cursor: text; white-space: pre-wrap; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\">1.4 重要方法</h3><pre style=\"overflow: visible; font-family: var(--monospace); font-size: 0.9em; break-inside: avoid; white-space: normal; background-image: inherit; background-position: inherit; background-size: inherit; background-repeat: inherit; background-attachment: inherit; background-origin: inherit; background-clip: inherit; background-color: rgb(248, 248, 248); border-color: rgb(231, 234, 237); border-radius: 3px; padding: 8px 4px 6px; margin-bottom: 15px; margin-top: 15px; width: inherit; position: relative !important;\"><span style=\"padding-right: 0.1px;\"><span style=\"color: rgb(0, 0, 0);\">File</span>[] <span style=\"color: rgb(0, 0, 255);\">listFiles</span>() <span style=\"color: rgb(170, 85, 0);\">//如果当前File对象是一个文件夹，可以获取文件夹下的所有文件或者文件夹的File对象。</span></span></pre><p style=\"line-height: inherit; orphans: 4; margin-top: 0.8em; margin-bottom: 0.8em; white-space: pre-wrap; position: relative; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\">注意：如果不是文件夹或者是文件夹的权限受限返回值是null。所以一定要对返回结果做非空判断。</p><pre style=\"overflow: visible; font-family: var(--monospace); font-size: 0.9em; break-inside: avoid; white-space: normal; background-image: inherit; background-position: inherit; background-size: inherit; background-repeat: inherit; background-attachment: inherit; background-origin: inherit; background-clip: inherit; background-color: rgb(248, 248, 248); border-color: rgb(231, 234, 237); border-radius: 3px; padding: 8px 4px 6px; margin-bottom: 15px; margin-top: 15px; width: inherit; position: relative !important;\"><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span style=\"color: rgb(119, 0, 136);\">public</span> <span style=\"color: rgb(119, 0, 136);\">static</span> <span style=\"color: rgb(0, 136, 85);\">void</span> <span style=\"color: rgb(0, 0, 255);\">main</span>(<span style=\"color: rgb(0, 136, 85);\">String</span>[] <span style=\"color: rgb(0, 0, 0);\">args</span>) {</span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp;<span style=\"color: rgb(0, 0, 0);\">File</span> <span style=\"color: rgb(0, 0, 0);\">dir</span> <span style=\"color: rgb(152, 26, 26);\">=</span> <span style=\"color: rgb(119, 0, 136);\">new</span> <span style=\"color: rgb(0, 0, 0);\">File</span>(<span style=\"color: rgb(170, 17, 17);\">\"C:\\\\Users\\\\root\\\\Desktop\\\\test\\\\a.txt\"</span>);</span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp;<span style=\"color: rgb(0, 0, 0);\">File</span>[] <span style=\"color: rgb(0, 0, 0);\">files</span> <span style=\"color: rgb(152, 26, 26);\">=</span> <span style=\"color: rgb(0, 0, 0);\">dir</span>.<span style=\"color: rgb(0, 0, 0);\">listFiles</span>();</span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp;<span style=\"color: rgb(119, 0, 136);\">if</span>(<span style=\"color: rgb(0, 0, 0);\">files</span><span style=\"color: rgb(152, 26, 26);\">!=</span><span style=\"color: rgb(34, 17, 153);\">null</span>){</span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span style=\"color: rgb(119, 0, 136);\">for</span> (<span style=\"color: rgb(0, 0, 0);\">File</span> <span style=\"color: rgb(0, 0, 0);\">file</span> : <span style=\"color: rgb(0, 0, 0);\">files</span>) {</span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span style=\"color: rgb(0, 0, 0);\">System</span>.<span style=\"color: rgb(0, 0, 0);\">out</span>.<span style=\"color: rgb(0, 0, 0);\">println</span>(<span style=\"color: rgb(0, 0, 0);\">file</span>);</span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  }</span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp;  }</span><br/><span style=\"padding-right: 0.1px;\"> &nbsp;  }</span></pre><p style=\"line-height: inherit; orphans: 4; margin-top: 0.8em; margin-bottom: 0.8em; white-space: pre-wrap; position: relative; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\"></p><h2 style=\"break-after: avoid-page; break-inside: avoid; orphans: 4; font-size: 1.75em; margin-top: 1rem; margin-bottom: 1rem; position: relative; line-height: 1.225; cursor: text; border-bottom: 1px solid rgb(238, 238, 238); white-space: pre-wrap; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\">2. 递归</h2><p style=\"line-height: inherit; orphans: 4; margin-top: 0.8em; margin-bottom: 0.8em; white-space: pre-wrap; position: relative; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\"><span style=\"display: inline-block; white-space: pre;\">	</span>在方法中调用方法本身就是递归。</p><p style=\"line-height: inherit; orphans: 4; margin-top: 0.8em; margin-bottom: 0.8em; white-space: pre-wrap; position: relative; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\">例如</p><pre style=\"overflow: visible; font-family: var(--monospace); font-size: 0.9em; break-inside: avoid; white-space: normal; background-image: inherit; background-position: inherit; background-size: inherit; background-repeat: inherit; background-attachment: inherit; background-origin: inherit; background-clip: inherit; background-color: rgb(248, 248, 248); border-color: rgb(231, 234, 237); border-radius: 3px; padding: 8px 4px 6px; margin-bottom: 15px; margin-top: 15px; width: inherit; position: relative !important;\"><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span style=\"color: rgb(119, 0, 136);\">public</span> <span style=\"color: rgb(0, 136, 85);\">int</span> <span style=\"color: rgb(0, 0, 255);\">f</span>(<span style=\"color: rgb(0, 136, 85);\">int</span> <span style=\"color: rgb(0, 0, 0);\">n</span>){</span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp;<span style=\"color: rgb(119, 0, 136);\">if</span>(<span style=\"color: rgb(0, 0, 0);\">n</span><span style=\"color: rgb(152, 26, 26);\">==</span><span style=\"color: rgb(17, 102, 68);\">1</span>){</span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span style=\"color: rgb(119, 0, 136);\">return</span> <span style=\"color: rgb(17, 102, 68);\">1</span>;</span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp;  }</span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp;<span style=\"color: rgb(119, 0, 136);\">return</span> <span style=\"color: rgb(0, 0, 0);\">n</span><span style=\"color: rgb(152, 26, 26);\">*</span><span style=\"color: rgb(0, 0, 0);\">f</span>(<span style=\"color: rgb(0, 0, 0);\">n</span><span style=\"color: rgb(152, 26, 26);\">-</span><span style=\"color: rgb(17, 102, 68);\">1</span>);</span><br/><span style=\"padding-right: 0.1px;\"> &nbsp;  }</span></pre><p style=\"line-height: inherit; orphans: 4; margin-top: 0.8em; margin-bottom: 0.8em; white-space: pre-wrap; position: relative; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\"></p><p style=\"line-height: inherit; orphans: 4; margin-top: 0.8em; margin-bottom: 0.8em; white-space: pre-wrap; position: relative; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\"><span style=\"display: inline-block; white-space: pre;\">	</span><strong>注意：我们在使用递归的过程中一定要保证递归能结束，不能无限递归下去不然会出现栈溢出(StackOverflowError)的情况 。</strong></p><p style=\"line-height: inherit; orphans: 4; margin-top: 0.8em; margin-bottom: 0.8em; white-space: pre-wrap; position: relative; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\"></p><p style=\"line-height: inherit; orphans: 4; margin-top: 0.8em; margin-bottom: 0.8em; white-space: pre-wrap; position: relative; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\">小结：如果既可以用递归解决又可以用循环解决。我们一般用循环解决。</p>', 'java IO流入门', 1, '/upload/1/12ad47fb349e946849dfd3833750201f8.jpg', '0', '0', 3, '1', 1, '2022-04-16 09:00:26', NULL, NULL, 0);
INSERT INTO `my_article` VALUES (12, '数组', '<h1 style=\"break-after: avoid-page; break-inside: avoid; orphans: 4; font-size: 2.25em; margin-top: 1rem; margin-bottom: 1rem; position: relative; line-height: 1.2; cursor: text; border-bottom: 1px solid rgb(238, 238, 238); white-space: pre-wrap; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\">数组</h1><p style=\"line-height: inherit; orphans: 4; margin-top: 0.8em; margin-bottom: 0.8em; white-space: pre-wrap; position: relative; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\">我们可以使用数组来保存同一个数据类型的多个数据</p><h2 style=\"break-after: avoid-page; break-inside: avoid; orphans: 4; font-size: 1.75em; margin-top: 1rem; margin-bottom: 1rem; position: relative; line-height: 1.225; cursor: text; border-bottom: 1px solid rgb(238, 238, 238); white-space: pre-wrap; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\">数组的特点</h2><p style=\"line-height: inherit; orphans: 4; margin-top: 0.8em; margin-bottom: 0.8em; white-space: pre-wrap; position: relative; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\"><span style=\"display: inline-block; white-space: pre;\">		</span>①数组的长度一旦确定就不能改变</p><p style=\"line-height: inherit; orphans: 4; margin-top: 0.8em; margin-bottom: 0.8em; white-space: pre-wrap; position: relative; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\"><span style=\"display: inline-block; white-space: pre;\">		</span>②一个数组中元素的数据类型都是一样的</p><h2 style=\"break-after: avoid-page; break-inside: avoid; orphans: 4; font-size: 1.75em; margin-top: 1rem; margin-bottom: 1rem; position: relative; line-height: 1.225; cursor: text; border-bottom: 1px solid rgb(238, 238, 238); white-space: pre-wrap; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\">数组的初始化</h2><h3 style=\"break-after: avoid-page; break-inside: avoid; orphans: 4; font-size: 1.5em; margin-top: 1rem; margin-bottom: 1rem; position: relative; line-height: 1.43; cursor: text; white-space: pre-wrap; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\">动态初始化</h3><h4 style=\"break-after: avoid-page; break-inside: avoid; orphans: 4; font-size: 1.25em; margin-top: 1rem; margin-bottom: 1rem; position: relative; line-height: 1.4; cursor: text; white-space: pre-wrap; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\">格式</h4><p style=\"line-height: inherit; orphans: 4; margin-top: 0.8em; margin-bottom: 0.8em; white-space: pre-wrap; position: relative; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\"><span style=\"display: inline-block; white-space: pre;\">			</span>数据类型[] 数组名 = new 数据类型[长度];</p><p style=\"line-height: inherit; orphans: 4; margin-top: 0.8em; margin-bottom: 0.8em; white-space: pre-wrap; position: relative; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\">例如：</p><pre style=\"overflow: visible; font-family: var(--monospace); font-size: 0.9em; break-inside: avoid; white-space: normal; background-image: inherit; background-position: inherit; background-size: inherit; background-repeat: inherit; background-attachment: inherit; background-origin: inherit; background-clip: inherit; background-color: rgb(248, 248, 248); border-color: rgb(231, 234, 237); border-radius: 3px; padding: 8px 4px 6px; margin-bottom: 15px; margin-top: 15px; width: inherit; position: relative !important;\"><span style=\"padding-right: 0.1px;\"><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span><span style=\"color: rgb(0, 136, 85);\">int</span>[] <span style=\"color: rgb(0, 0, 0);\">arr</span> <span style=\"color: rgb(152, 26, 26);\">=</span> <span style=\"color: rgb(119, 0, 136);\">new</span> <span style=\"color: rgb(0, 136, 85);\">int</span>[<span style=\"color: rgb(17, 102, 68);\">10</span>];<span style=\"color: rgb(170, 85, 0);\">//动态初始化了一个长度为10的数组，数组元素为int类型</span></span></pre><p style=\"line-height: inherit; orphans: 4; margin-top: 0.8em; margin-bottom: 0.8em; white-space: pre-wrap; position: relative; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\"></p><h3 style=\"break-after: avoid-page; break-inside: avoid; orphans: 4; font-size: 1.5em; margin-top: 1rem; margin-bottom: 1rem; position: relative; line-height: 1.43; cursor: text; white-space: pre-wrap; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\">静态初始化</h3><h4 style=\"break-after: avoid-page; break-inside: avoid; orphans: 4; font-size: 1.25em; margin-top: 1rem; margin-bottom: 1rem; position: relative; line-height: 1.4; cursor: text; white-space: pre-wrap; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\">格式</h4><p style=\"line-height: inherit; orphans: 4; margin-top: 0.8em; margin-bottom: 0.8em; white-space: pre-wrap; position: relative; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\"><span style=\"display: inline-block; white-space: pre;\">		</span>标准格式：</p><p style=\"line-height: inherit; orphans: 4; margin-top: 0.8em; margin-bottom: 0.8em; white-space: pre-wrap; position: relative; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\"><span style=\"display: inline-block; white-space: pre;\">					</span>数据类型[] 数组名 = new 数据类型[] {元素值1,元素值2,元素值3,...};</p><p style=\"line-height: inherit; orphans: 4; margin-top: 0.8em; margin-bottom: 0.8em; white-space: pre-wrap; position: relative; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\">例如：</p><pre style=\"overflow: visible; font-family: var(--monospace); font-size: 0.9em; break-inside: avoid; white-space: normal; background-image: inherit; background-position: inherit; background-size: inherit; background-repeat: inherit; background-attachment: inherit; background-origin: inherit; background-clip: inherit; background-color: rgb(248, 248, 248); border-color: rgb(231, 234, 237); border-radius: 3px; padding: 8px 4px 6px; margin-bottom: 15px; margin-top: 15px; width: inherit; position: relative !important;\"><span style=\"padding-right: 0.1px;\"><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span><span style=\"color: rgb(0, 136, 85);\">int</span>[] <span style=\"color: rgb(0, 0, 0);\">arr</span> <span style=\"color: rgb(152, 26, 26);\">=</span> <span style=\"color: rgb(119, 0, 136);\">new</span> <span style=\"color: rgb(0, 136, 85);\">int</span>[]{<span style=\"color: rgb(17, 102, 68);\">1</span>,<span style=\"color: rgb(17, 102, 68);\">2</span>,<span style=\"color: rgb(17, 102, 68);\">3</span>,<span style=\"color: rgb(17, 102, 68);\">4</span>,<span style=\"color: rgb(17, 102, 68);\">5</span>};</span></pre><p style=\"line-height: inherit; orphans: 4; margin-top: 0.8em; margin-bottom: 0.8em; white-space: pre-wrap; position: relative; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\"><span style=\"display: inline-block; white-space: pre;\">		</span>省略格式（<span style=\"white-space: normal;\"><span style=\"color: inherit;\">推荐使用</span></span>）：</p><p style=\"line-height: inherit; orphans: 4; margin-top: 0.8em; margin-bottom: 0.8em; white-space: pre-wrap; position: relative; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\"><span style=\"display: inline-block; white-space: pre;\">					</span>数据类型[] 数组名 = {元素值1,元素值2,元素值3,...};</p><p style=\"line-height: inherit; orphans: 4; margin-top: 0.8em; margin-bottom: 0.8em; white-space: pre-wrap; position: relative; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\">例如：</p><pre style=\"overflow: visible; font-family: var(--monospace); font-size: 0.9em; break-inside: avoid; white-space: normal; background-image: inherit; background-position: inherit; background-size: inherit; background-repeat: inherit; background-attachment: inherit; background-origin: inherit; background-clip: inherit; background-color: rgb(248, 248, 248); border-color: rgb(231, 234, 237); border-radius: 3px; padding: 8px 4px 6px; margin-bottom: 15px; margin-top: 15px; width: inherit; position: relative !important;\"><span style=\"padding-right: 0.1px;\"><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span><span style=\"color: rgb(0, 136, 85);\">int</span>[] <span style=\"color: rgb(0, 0, 0);\">arr</span> <span style=\"color: rgb(152, 26, 26);\">=</span> {<span style=\"color: rgb(17, 102, 68);\">1</span>,<span style=\"color: rgb(17, 102, 68);\">2</span>,<span style=\"color: rgb(17, 102, 68);\">3</span>,<span style=\"color: rgb(17, 102, 68);\">4</span>,<span style=\"color: rgb(17, 102, 68);\">5</span>};</span></pre><h3 style=\"break-after: avoid-page; break-inside: avoid; orphans: 4; font-size: 1.5em; margin-top: 1rem; margin-bottom: 1rem; position: relative; line-height: 1.43; cursor: text; white-space: pre-wrap; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\">总结</h3><p style=\"line-height: inherit; orphans: 4; margin-top: 0.8em; margin-bottom: 0.8em; white-space: pre-wrap; position: relative; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\"><span style=\"display: inline-block; white-space: pre;\">		</span>静态初始化和动态初始化都可以实现对数组的初始化，那么我们在需要创建数组的时候应该如何选择呢？</p><p style=\"line-height: inherit; orphans: 4; margin-top: 0.8em; margin-bottom: 0.8em; white-space: pre-wrap; position: relative; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\"><span style=\"display: inline-block; white-space: pre;\">		</span>如果数组元素都确定好了，并且个数有限的情况下我们可以使用静态初始化，因为更方便。如果只能确定数组的长度，数组的元素值需要后面再赋值的话可以使用动态初始化。</p><h2 style=\"break-after: avoid-page; break-inside: avoid; orphans: 4; font-size: 1.75em; margin-top: 1rem; margin-bottom: 1rem; position: relative; line-height: 1.225; cursor: text; border-bottom: 1px solid rgb(238, 238, 238); white-space: pre-wrap; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\">数组元素的表示</h2><h3 style=\"break-after: avoid-page; break-inside: avoid; orphans: 4; font-size: 1.5em; margin-top: 1rem; margin-bottom: 1rem; position: relative; line-height: 1.43; cursor: text; white-space: pre-wrap; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\">格式</h3><p style=\"line-height: inherit; orphans: 4; margin-top: 0.8em; margin-bottom: 0.8em; white-space: pre-wrap; position: relative; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\"><span style=\"display: inline-block; white-space: pre;\">				</span>数组名[索引值]</p><p style=\"line-height: inherit; orphans: 4; margin-top: 0.8em; margin-bottom: 0.8em; white-space: pre-wrap; position: relative; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\">例如：</p><pre style=\"overflow: visible; font-family: var(--monospace); font-size: 0.9em; break-inside: avoid; white-space: normal; background-image: inherit; background-position: inherit; background-size: inherit; background-repeat: inherit; background-attachment: inherit; background-origin: inherit; background-clip: inherit; background-color: rgb(248, 248, 248); border-color: rgb(231, 234, 237); border-radius: 3px; padding: 8px 4px 6px; margin-bottom: 15px; margin-top: 15px; width: inherit; position: relative !important;\"><span style=\"padding-right: 0.1px;\"><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span> &nbsp;<span style=\"color: rgb(0, 136, 85);\">int</span>[] <span style=\"color: rgb(0, 0, 0);\">arr</span> <span style=\"color: rgb(152, 26, 26);\">=</span> {<span style=\"color: rgb(17, 102, 68);\">1</span>,<span style=\"color: rgb(17, 102, 68);\">2</span>,<span style=\"color: rgb(17, 102, 68);\">3</span>,<span style=\"color: rgb(17, 102, 68);\">4</span>};</span><br/><span style=\"padding-right: 0.1px;\"><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span> &nbsp;<span style=\"color: rgb(170, 85, 0);\">//输出数组arr的第一个元素</span></span><br/><span style=\"padding-right: 0.1px;\"><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span> &nbsp;<span style=\"color: rgb(0, 0, 0);\">System</span>.<span style=\"color: rgb(0, 0, 0);\">out</span>.<span style=\"color: rgb(0, 0, 0);\">println</span>(<span style=\"color: rgb(0, 0, 0);\">arr</span>[<span style=\"color: rgb(17, 102, 68);\">0</span>]);</span><br/><span style=\"padding-right: 0.1px;\"><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span> &nbsp;<span style=\"color: rgb(170, 85, 0);\">//把数组arr的第3个元素值修改为5</span></span><br/><span style=\"padding-right: 0.1px;\"><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span> &nbsp;<span style=\"color: rgb(0, 0, 0);\">arr</span>[<span style=\"color: rgb(17, 102, 68);\">2</span>] <span style=\"color: rgb(152, 26, 26);\">=</span> <span style=\"color: rgb(17, 102, 68);\">5</span>;</span></pre><p style=\"line-height: inherit; orphans: 4; margin-top: 0.8em; margin-bottom: 0.8em; white-space: pre-wrap; position: relative; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\"></p><h3 style=\"break-after: avoid-page; break-inside: avoid; orphans: 4; font-size: 1.5em; margin-top: 1rem; margin-bottom: 1rem; position: relative; line-height: 1.43; cursor: text; white-space: pre-wrap; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\">注意 </h3><p style=\"line-height: inherit; orphans: 4; margin-top: 0.8em; margin-bottom: 0.8em; white-space: pre-wrap; position: relative; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\"><span style=\"display: inline-block; white-space: pre;\">	</span>索引值就是一个int数字，代表数组当中元素的编号。</p><p style=\"line-height: inherit; orphans: 4; margin-top: 0.8em; margin-bottom: 0.8em; white-space: pre-wrap; position: relative; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\"><span style=\"display: inline-block; white-space: pre;\">	</span>索引值从0开始，一直到“数组的长度-1”为止。例如长度为5的数组他的索引范围为0到4</p><p style=\"line-height: inherit; orphans: 4; margin-top: 0.8em; margin-bottom: 0.8em; white-space: pre-wrap; position: relative; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\"></p><h2 style=\"break-after: avoid-page; break-inside: avoid; orphans: 4; font-size: 1.75em; margin-top: 1rem; margin-bottom: 1rem; position: relative; line-height: 1.225; cursor: text; border-bottom: 1px solid rgb(238, 238, 238); white-space: pre-wrap; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\">数组的内存结构</h2><p style=\"line-height: inherit; orphans: 4; margin-top: 0.8em; margin-bottom: 0.8em; white-space: pre-wrap; position: relative; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\">观察下面代码的输出结果</p><pre style=\"overflow: visible; font-family: var(--monospace); font-size: 0.9em; break-inside: avoid; white-space: normal; background-image: inherit; background-position: inherit; background-size: inherit; background-repeat: inherit; background-attachment: inherit; background-origin: inherit; background-clip: inherit; background-color: rgb(248, 248, 248); border-color: rgb(231, 234, 237); border-radius: 3px; padding: 8px 4px 6px; margin-bottom: 15px; margin-top: 15px; width: inherit; position: relative !important;\"><span style=\"padding-right: 0.1px;\"><span style=\"color: rgb(0, 136, 85);\">int</span>[] <span style=\"color: rgb(0, 0, 0);\">arr</span> <span style=\"color: rgb(152, 26, 26);\">=</span> <span style=\"color: rgb(119, 0, 136);\">new</span> <span style=\"color: rgb(0, 136, 85);\">int</span>[<span style=\"color: rgb(17, 102, 68);\">5</span>];</span><br/><span style=\"padding-right: 0.1px;\"><span style=\"color: rgb(0, 0, 0);\">arr</span>[<span style=\"color: rgb(17, 102, 68);\">0</span>] <span style=\"color: rgb(152, 26, 26);\">=</span> <span style=\"color: rgb(17, 102, 68);\">1</span>;</span><br/><span style=\"padding-right: 0.1px;\"><span style=\"color: rgb(0, 0, 0);\">arr</span>[<span style=\"color: rgb(17, 102, 68);\">1</span>] <span style=\"color: rgb(152, 26, 26);\">=</span> <span style=\"color: rgb(17, 102, 68);\">2</span>;</span><br/><span style=\"padding-right: 0.1px;\"><span style=\"color: rgb(0, 136, 85);\">int</span>[] <span style=\"color: rgb(0, 0, 0);\">arr2</span> <span style=\"color: rgb(152, 26, 26);\">=</span> <span style=\"color: rgb(0, 0, 0);\">arr</span>;</span><br/><span style=\"padding-right: 0.1px;\"><span style=\"color: rgb(0, 0, 0);\">arr2</span>[<span style=\"color: rgb(17, 102, 68);\">2</span>] <span style=\"color: rgb(152, 26, 26);\">=</span> <span style=\"color: rgb(17, 102, 68);\">3</span>;</span><br/><span style=\"padding-right: 0.1px;\"><span style=\"color: rgb(0, 0, 0);\">arr2</span>[<span style=\"color: rgb(17, 102, 68);\">3</span>] <span style=\"color: rgb(152, 26, 26);\">=</span> <span style=\"color: rgb(17, 102, 68);\">4</span>;</span><br/><span style=\"padding-right: 0.1px;\"><span style=\"color: rgb(0, 0, 0);\">System</span>.<span style=\"color: rgb(0, 0, 0);\">out</span>.<span style=\"color: rgb(0, 0, 0);\">println</span>(<span style=\"color: rgb(0, 0, 0);\">arr2</span>[<span style=\"color: rgb(17, 102, 68);\">0</span>]);</span><br/><span style=\"padding-right: 0.1px;\"><span style=\"color: rgb(0, 0, 0);\">System</span>.<span style=\"color: rgb(0, 0, 0);\">out</span>.<span style=\"color: rgb(0, 0, 0);\">println</span>(<span style=\"color: rgb(0, 0, 0);\">arr</span>[<span style=\"color: rgb(17, 102, 68);\">3</span>]);</span></pre><p style=\"line-height: inherit; orphans: 4; margin-top: 0.8em; margin-bottom: 0.8em; white-space: pre-wrap; position: relative; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\">如果想要弄明白上面代码的输出结果就需要知道一个数组在内存中是如何存储的。</p><p style=\"line-height: inherit; orphans: 4; margin-top: 0.8em; margin-bottom: 0.8em; white-space: pre-wrap; position: relative; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\"><strong>实际上，数组的实体保存在堆中，数组名实际保存的是数组实体的地址值。</strong></p><p style=\"line-height: inherit; orphans: 4; margin-top: 0.8em; margin-bottom: 0.8em; white-space: pre-wrap; position: relative; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\"></p><h2 style=\"break-after: avoid-page; break-inside: avoid; orphans: 4; font-size: 1.75em; margin-top: 1rem; margin-bottom: 1rem; position: relative; line-height: 1.225; cursor: text; border-bottom: 1px solid rgb(238, 238, 238); white-space: pre-wrap; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\">数组长度</h2><p style=\"line-height: inherit; orphans: 4; margin-top: 0.8em; margin-bottom: 0.8em; white-space: pre-wrap; position: relative; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\">在java中我们可以非常方便的获取到数组的长度，格式如下：</p><p style=\"line-height: inherit; orphans: 4; margin-top: 0.8em; margin-bottom: 0.8em; white-space: pre-wrap; position: relative; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\"><span style=\"display: inline-block; white-space: pre;\">	</span>    <strong><span style=\"white-space: normal;\"><span style=\"color: inherit;\">&nbsp;数组名.length</span></span></strong></p><p style=\"line-height: inherit; orphans: 4; margin-top: 0.8em; margin-bottom: 0.8em; white-space: pre-wrap; position: relative; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\">例如：</p><pre style=\"overflow: visible; font-family: var(--monospace); font-size: 0.9em; break-inside: avoid; white-space: normal; background-image: inherit; background-position: inherit; background-size: inherit; background-repeat: inherit; background-attachment: inherit; background-origin: inherit; background-clip: inherit; background-color: rgb(248, 248, 248); border-color: rgb(231, 234, 237); border-radius: 3px; padding: 8px 4px 6px; margin-bottom: 15px; margin-top: 15px; width: inherit; position: relative !important;\"><span style=\"padding-right: 0.1px;\"><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span> &nbsp;<span style=\"color: rgb(0, 136, 85);\">int</span>[] <span style=\"color: rgb(0, 0, 0);\">arr</span> <span style=\"color: rgb(152, 26, 26);\">=</span> {<span style=\"color: rgb(17, 102, 68);\">1</span>,<span style=\"color: rgb(17, 102, 68);\">2</span>,<span style=\"color: rgb(17, 102, 68);\">3</span>,<span style=\"color: rgb(17, 102, 68);\">4</span>};</span><br/><span style=\"padding-right: 0.1px;\"><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span> &nbsp;<span style=\"color: rgb(170, 85, 0);\">//输出数组长度</span></span><br/><span style=\"padding-right: 0.1px;\"><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span> &nbsp;<span style=\"color: rgb(0, 0, 0);\">System</span>.<span style=\"color: rgb(0, 0, 0);\">out</span>.<span style=\"color: rgb(0, 0, 0);\">println</span>(<span style=\"color: rgb(0, 0, 0);\">arr</span>.<span style=\"color: rgb(0, 0, 0);\">length</span>);</span></pre><h2 style=\"break-after: avoid-page; break-inside: avoid; orphans: 4; font-size: 1.75em; margin-top: 1rem; margin-bottom: 1rem; position: relative; line-height: 1.225; cursor: text; border-bottom: 1px solid rgb(238, 238, 238); white-space: pre-wrap; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\">数组的遍历</h2><p style=\"line-height: inherit; orphans: 4; margin-top: 0.8em; margin-bottom: 0.8em; white-space: pre-wrap; position: relative; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\">我们在操作数组的时候很多时候需要对数组的每个元素挨个操作一遍，这种情况下我们就可以对数组进行遍历操作。</p><pre style=\"overflow: visible; font-family: var(--monospace); font-size: 0.9em; break-inside: avoid; white-space: normal; background-image: inherit; background-position: inherit; background-size: inherit; background-repeat: inherit; background-attachment: inherit; background-origin: inherit; background-clip: inherit; background-color: rgb(248, 248, 248); border-color: rgb(231, 234, 237); border-radius: 3px; padding: 8px 4px 6px; margin-bottom: 15px; margin-top: 15px; width: inherit; position: relative !important;\"><span style=\"padding-right: 0.1px;\"><span style=\"color: rgb(0, 136, 85);\">int</span>[] <span style=\"color: rgb(0, 0, 0);\">arr</span><span style=\"color: rgb(152, 26, 26);\">=</span>{<span style=\"color: rgb(17, 102, 68);\">1</span>,<span style=\"color: rgb(17, 102, 68);\">2</span>,<span style=\"color: rgb(17, 102, 68);\">3</span>,<span style=\"color: rgb(17, 102, 68);\">4</span>,<span style=\"color: rgb(17, 102, 68);\">5</span>,<span style=\"color: rgb(17, 102, 68);\">7</span>};</span><br/><span style=\"padding-right: 0.1px;\"><span style=\"color: rgb(170, 85, 0);\">//遍历输出数组元素</span></span><br/><span style=\"padding-right: 0.1px;\"><span style=\"color: rgb(119, 0, 136);\">for</span>(<span style=\"color: rgb(0, 136, 85);\">int</span> <span style=\"color: rgb(0, 0, 0);\">i</span><span style=\"color: rgb(152, 26, 26);\">=</span><span style=\"color: rgb(17, 102, 68);\">0</span>;<span style=\"color: rgb(0, 0, 0);\">i</span><span style=\"color: rgb(152, 26, 26);\">&lt;</span><span style=\"color: rgb(0, 0, 0);\">arr</span>.<span style=\"color: rgb(0, 0, 0);\">length</span>;<span style=\"color: rgb(0, 0, 0);\">i</span><span style=\"color: rgb(152, 26, 26);\">++</span>){</span><br/><span style=\"padding-right: 0.1px;\"><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span><span style=\"color: rgb(0, 0, 0);\">System</span>.<span style=\"color: rgb(0, 0, 0);\">out</span>.<span style=\"color: rgb(0, 0, 0);\">println</span>(<span style=\"color: rgb(0, 0, 0);\">arr</span>[<span style=\"color: rgb(0, 0, 0);\">i</span>]);</span><br/><span style=\"padding-right: 0.1px;\">}</span></pre><p style=\"line-height: inherit; orphans: 4; margin-top: 0.8em; margin-bottom: 0.8em; white-space: pre-wrap; position: relative; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\"></p><h2 style=\"break-after: avoid-page; break-inside: avoid; orphans: 4; font-size: 1.75em; margin-top: 1rem; margin-bottom: 1rem; position: relative; line-height: 1.225; cursor: text; border-bottom: 1px solid rgb(238, 238, 238); white-space: pre-wrap; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\">常见问题</h2><p style=\"line-height: inherit; orphans: 4; margin-top: 0.8em; margin-bottom: 0.8em; white-space: pre-wrap; position: relative; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\">1.观察下面程序的执行结果     ArrayIndexOutOfBoundsException 数组索引越界</p><pre style=\"overflow: visible; font-family: var(--monospace); font-size: 0.9em; break-inside: avoid; white-space: normal; background-image: inherit; background-position: inherit; background-size: inherit; background-repeat: inherit; background-attachment: inherit; background-origin: inherit; background-clip: inherit; background-color: rgb(248, 248, 248); border-color: rgb(231, 234, 237); border-radius: 3px; padding: 8px 4px 6px; margin-bottom: 15px; margin-top: 15px; width: inherit; position: relative !important;\"><span style=\"padding-right: 0.1px;\"><span style=\"color: rgb(0, 136, 85);\">int</span>[] <span style=\"color: rgb(0, 0, 0);\">arr</span> <span style=\"color: rgb(152, 26, 26);\">=</span> <span style=\"color: rgb(119, 0, 136);\">new</span> <span style=\"color: rgb(0, 136, 85);\">int</span>[<span style=\"color: rgb(17, 102, 68);\">3</span>];</span><br/><span style=\"padding-right: 0.1px;\"><span style=\"color: rgb(0, 0, 0);\">arr</span>[<span style=\"color: rgb(17, 102, 68);\">1</span>] <span style=\"color: rgb(152, 26, 26);\">=</span> <span style=\"color: rgb(17, 102, 68);\">1</span>;</span><br/><span style=\"padding-right: 0.1px;\"><span style=\"color: rgb(0, 0, 0);\">arr</span>[<span style=\"color: rgb(17, 102, 68);\">2</span>] <span style=\"color: rgb(152, 26, 26);\">=</span> <span style=\"color: rgb(17, 102, 68);\">2</span>;</span><br/><span style=\"padding-right: 0.1px;\"><span style=\"color: rgb(0, 0, 0);\">arr</span>[<span style=\"color: rgb(17, 102, 68);\">3</span>] <span style=\"color: rgb(152, 26, 26);\">=</span> <span style=\"color: rgb(17, 102, 68);\">3</span>;</span><br/><span style=\"padding-right: 0.1px;\"><span style=\"color: rgb(0, 0, 0);\">System</span>.<span style=\"color: rgb(0, 0, 0);\">out</span>.<span style=\"color: rgb(0, 0, 0);\">println</span>(<span style=\"color: rgb(0, 0, 0);\">arr</span>[<span style=\"color: rgb(17, 102, 68);\">2</span>]);</span></pre>', 'java 数组', 1, '/upload/1/159b3eef328b840798db8e6fd96762334.jpg', '0', '1', 0, '1', 1, '2022-04-16 09:24:40', NULL, NULL, 1);
INSERT INTO `my_article` VALUES (13, 'json和ajax', '<p style=\"line-height: inherit; orphans: 4; margin-top: 0.8em; margin-bottom: 0.8em; white-space: pre-wrap; position: relative; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\"><strong>Java list&lt;&gt;对象数据和json格式数据相互转化</strong></p><ol style=\"margin-top: 0.8em; margin-bottom: 0.8em; margin-left: 0px; padding-left: 30px; position: relative; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif; font-size: 16px;\"><li style=\"position: relative;\"><h6 style=\"break-after: avoid-page; break-inside: avoid; orphans: 4; font-size: 1em; margin-bottom: 1rem; position: relative; line-height: 1.4; cursor: text; color: rgb(119, 119, 119); white-space: pre-wrap;\">导入谷歌的Gson.jar</h6><p style=\"line-height: inherit; orphans: 4; margin-top: 0.5rem; margin-bottom: 0.5rem; white-space: pre-wrap; position: relative;\"><em>1.1</em> <strong>list转换为json（Person是标准的javaBean对象)</strong></p></li></ol><pre style=\"overflow: visible; font-family: var(--monospace); font-size: 0.9em; break-inside: avoid; white-space: normal; background-image: inherit; background-position: inherit; background-size: inherit; background-repeat: inherit; background-attachment: inherit; background-origin: inherit; background-clip: inherit; background-color: rgb(248, 248, 248); border-color: rgb(231, 234, 237); border-radius: 3px; padding: 8px 4px 6px; margin-bottom: 15px; margin-top: 15px; width: inherit; position: relative !important;\"><span style=\"padding-right: 0.1px;\"><span style=\"color: rgb(0, 0, 0);\">Gson</span> <span style=\"color: rgb(0, 0, 0);\">gson</span> <span style=\"color: rgb(152, 26, 26);\">=</span> <span style=\"color: rgb(119, 0, 136);\">new</span> <span style=\"color: rgb(0, 0, 0);\">Gson</span>(); </span><br/><span style=\"padding-right: 0.1px;\"></span><br/><span style=\"padding-right: 0.1px;\"><span style=\"color: rgb(0, 0, 0);\">list</span><span style=\"color: rgb(152, 26, 26);\">&lt;</span><span style=\"color: rgb(0, 0, 0);\">Person</span><span style=\"color: rgb(152, 26, 26);\">&gt;</span> <span style=\"color: rgb(0, 0, 0);\">persons</span> <span style=\"color: rgb(152, 26, 26);\">=</span> <span style=\"color: rgb(119, 0, 136);\">new</span> <span style=\"color: rgb(0, 0, 0);\">ArrayList</span><span style=\"color: rgb(152, 26, 26);\">&lt;</span><span style=\"color: rgb(0, 0, 0);\">Person</span><span style=\"color: rgb(152, 26, 26);\">&gt;</span>(); </span><br/><span style=\"padding-right: 0.1px;\"></span><br/><span style=\"padding-right: 0.1px;\"><span style=\"color: rgb(0, 136, 85);\">String</span> <span style=\"color: rgb(0, 0, 0);\">str</span> <span style=\"color: rgb(152, 26, 26);\">=</span> <span style=\"color: rgb(0, 0, 0);\">gson</span>.<span style=\"color: rgb(0, 0, 0);\">toJson</span>(<span style=\"color: rgb(0, 0, 0);\">persons</span>);</span></pre><p style=\"line-height: inherit; orphans: 4; margin-top: 0.8em; margin-bottom: 0.8em; white-space: pre-wrap; position: relative; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\">1.2 <strong>json转换为list</strong></p><pre style=\"overflow: visible; font-family: var(--monospace); font-size: 0.9em; break-inside: avoid; white-space: normal; background-image: inherit; background-position: inherit; background-size: inherit; background-repeat: inherit; background-attachment: inherit; background-origin: inherit; background-clip: inherit; background-color: rgb(248, 248, 248); border-color: rgb(231, 234, 237); border-radius: 3px; padding: 8px 4px 6px; margin-bottom: 15px; margin-top: 15px; width: inherit; position: relative !important;\"><span style=\"padding-right: 0.1px;\"><span style=\"color: rgb(170, 85, 0);\">//json转换为list</span></span><br/><span style=\"padding-right: 0.1px;\"><span style=\"color: rgb(0, 0, 0);\">Gson</span> <span style=\"color: rgb(0, 0, 0);\">gson</span> <span style=\"color: rgb(152, 26, 26);\">=</span> <span style=\"color: rgb(119, 0, 136);\">new</span> <span style=\"color: rgb(0, 0, 0);\">Gson</span>(); &nbsp;</span><br/><span style=\"padding-right: 0.1px;\"><span style=\"color: rgb(0, 0, 0);\">list</span><span style=\"color: rgb(152, 26, 26);\">&lt;</span><span style=\"color: rgb(0, 0, 0);\">Person</span><span style=\"color: rgb(152, 26, 26);\">&gt;</span> <span style=\"color: rgb(0, 0, 0);\">persons</span> <span style=\"color: rgb(152, 26, 26);\">=</span> <span style=\"color: rgb(0, 0, 0);\">gson</span>.<span style=\"color: rgb(0, 0, 0);\">fromJson</span>(<span style=\"color: rgb(0, 0, 0);\">str</span>, <span style=\"color: rgb(119, 0, 136);\">new</span> <span style=\"color: rgb(0, 0, 0);\">TypeToken</span><span style=\"color: rgb(152, 26, 26);\">&lt;</span><span style=\"color: rgb(0, 0, 0);\">list</span><span style=\"color: rgb(152, 26, 26);\">&lt;</span><span style=\"color: rgb(0, 0, 0);\">Person</span><span style=\"color: rgb(152, 26, 26);\">&gt;&gt;</span>(){}.<span style=\"color: rgb(0, 0, 0);\">getType</span>()); </span></pre><ol style=\"margin-top: 0.8em; margin-bottom: 0.8em; margin-left: 0px; padding-left: 30px; position: relative; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif; font-size: 16px;\"><li style=\"position: relative;\"><p style=\"line-height: inherit; orphans: 4; margin-top: 0px; margin-bottom: 0.5rem; white-space: pre-wrap; position: relative;\"><strong>导入阿里的fastjson.jar</strong>  </p></li></ol><pre style=\"overflow: visible; font-family: var(--monospace); font-size: 0.9em; break-inside: avoid; white-space: normal; background-image: inherit; background-position: inherit; background-size: inherit; background-repeat: inherit; background-attachment: inherit; background-origin: inherit; background-clip: inherit; background-color: rgb(248, 248, 248); border-color: rgb(231, 234, 237); border-radius: 3px; padding: 8px 4px 6px; margin-bottom: 15px; margin-top: 15px; width: inherit; position: relative !important;\"><span style=\"padding-right: 0.1px;\">/*maven依赖*/</span><br/><span style=\"padding-right: 0.1px;\"><span style=\"color: rgb(17, 119, 0);\">&lt;</span><span style=\"color: rgb(17, 119, 0);\">dependency</span><span style=\"color: rgb(17, 119, 0);\">&gt;</span></span><br/><span style=\"padding-right: 0.1px;\"></span><br/><span style=\"padding-right: 0.1px;\"> <span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">   </span> &nbsp;<span style=\"color: rgb(17, 119, 0);\">&lt;</span><span style=\"color: rgb(17, 119, 0);\">groupId</span><span style=\"color: rgb(17, 119, 0);\">&gt;</span>com.alibaba<span style=\"color: rgb(17, 119, 0);\">&lt;/</span><span style=\"color: rgb(17, 119, 0);\">groupId</span><span style=\"color: rgb(17, 119, 0);\">&gt;</span></span><br/><span style=\"padding-right: 0.1px;\"></span><br/><span style=\"padding-right: 0.1px;\">  <span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">  </span> <span style=\"color: rgb(17, 119, 0);\">&lt;</span><span style=\"color: rgb(17, 119, 0);\">artifactId</span><span style=\"color: rgb(17, 119, 0);\">&gt;</span>fastjson<span style=\"color: rgb(17, 119, 0);\">&lt;/</span><span style=\"color: rgb(17, 119, 0);\">artifactId</span><span style=\"color: rgb(17, 119, 0);\">&gt;</span></span><br/><span style=\"padding-right: 0.1px;\"></span><br/><span style=\"padding-right: 0.1px;\">  <span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">  </span> <span style=\"color: rgb(17, 119, 0);\">&lt;</span><span style=\"color: rgb(17, 119, 0);\">version</span><span style=\"color: rgb(17, 119, 0);\">&gt;</span>1.2.47<span style=\"color: rgb(17, 119, 0);\">&lt;/</span><span style=\"color: rgb(17, 119, 0);\">version</span><span style=\"color: rgb(17, 119, 0);\">&gt;</span> &nbsp; &nbsp; </span><br/><span style=\"padding-right: 0.1px;\"></span><br/><span style=\"padding-right: 0.1px;\"><span style=\"color: rgb(17, 119, 0);\">&lt;/</span><span style=\"color: rgb(17, 119, 0);\">dependency</span><span style=\"color: rgb(17, 119, 0);\">&gt;</span></span></pre><p style=\"line-height: inherit; orphans: 4; margin-top: 0.8em; margin-bottom: 0.8em; white-space: pre-wrap; position: relative; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\">  <strong>1.list转换为json</strong></p><pre style=\"overflow: visible; font-family: var(--monospace); font-size: 0.9em; break-inside: avoid; white-space: normal; background-image: inherit; background-position: inherit; background-size: inherit; background-repeat: inherit; background-attachment: inherit; background-origin: inherit; background-clip: inherit; background-color: rgb(248, 248, 248); border-color: rgb(231, 234, 237); border-radius: 3px; padding: 8px 4px 6px; margin-bottom: 15px; margin-top: 15px; width: inherit; position: relative !important;\"><span style=\"padding-right: 0.1px;\"><span style=\"color: rgb(0, 0, 0);\">list</span><span style=\"color: rgb(152, 26, 26);\">&lt;</span><span style=\"color: rgb(0, 0, 0);\">CustPhone</span><span style=\"color: rgb(152, 26, 26);\">&gt;</span> <span style=\"color: rgb(0, 0, 0);\">list</span> <span style=\"color: rgb(152, 26, 26);\">=</span> <span style=\"color: rgb(119, 0, 136);\">new</span> <span style=\"color: rgb(0, 0, 0);\">ArrayList</span><span style=\"color: rgb(152, 26, 26);\">&lt;</span><span style=\"color: rgb(0, 0, 0);\">CustPhone</span><span style=\"color: rgb(152, 26, 26);\">&gt;</span>();<span style=\"color: rgb(170, 85, 0);\">//CustPhone为标准的javaBean对象</span></span><br/><span style=\"padding-right: 0.1px;\"></span><br/><span style=\"padding-right: 0.1px;\"><span style=\"color: rgb(0, 136, 85);\">String</span> <span style=\"color: rgb(0, 0, 0);\">str</span><span style=\"color: rgb(152, 26, 26);\">=</span><span style=\"color: rgb(0, 0, 0);\">JSON</span>.<span style=\"color: rgb(0, 0, 0);\">toJSON</span>(<span style=\"color: rgb(0, 0, 0);\">list</span>).<span style=\"color: rgb(0, 0, 0);\">toString</span>()</span></pre><p style=\"line-height: inherit; orphans: 4; margin-top: 0.8em; margin-bottom: 0.8em; white-space: pre-wrap; position: relative; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\"> <strong>2.json转换为list</strong></p><pre style=\"overflow: visible; font-family: var(--monospace); font-size: 0.9em; break-inside: avoid; white-space: normal; background-image: inherit; background-position: inherit; background-size: inherit; background-repeat: inherit; background-attachment: inherit; background-origin: inherit; background-clip: inherit; background-color: rgb(248, 248, 248); border-color: rgb(231, 234, 237); border-radius: 3px; padding: 8px 4px 6px; margin-bottom: 15px; margin-top: 15px; width: inherit; position: relative !important;\"><span style=\"padding-right: 0.1px;\"><span style=\"color: rgb(0, 0, 0);\">list</span><span style=\"color: rgb(152, 26, 26);\">&lt;</span><span style=\"color: rgb(0, 0, 0);\">Person</span><span style=\"color: rgb(152, 26, 26);\">&gt;</span> <span style=\"color: rgb(0, 0, 0);\">list</span> <span style=\"color: rgb(152, 26, 26);\">=</span> <span style=\"color: rgb(119, 0, 136);\">new</span> <span style=\"color: rgb(0, 0, 0);\">ArrayList</span><span style=\"color: rgb(152, 26, 26);\">&lt;</span><span style=\"color: rgb(0, 0, 0);\">Person</span><span style=\"color: rgb(152, 26, 26);\">&gt;</span>(); </span><br/><span style=\"padding-right: 0.1px;\"></span><br/><span style=\"padding-right: 0.1px;\"><span style=\"color: rgb(0, 0, 0);\">list</span> <span style=\"color: rgb(152, 26, 26);\">=</span> <span style=\"color: rgb(0, 0, 0);\">JSONObject</span>.<span style=\"color: rgb(0, 0, 0);\">parseArray</span>(<span style=\"color: rgb(0, 0, 0);\">jasonArray</span>, <span style=\"color: rgb(0, 0, 0);\">Person</span>.<span style=\"color: rgb(119, 0, 136);\">class</span>); </span></pre><p style=\"line-height: inherit; orphans: 4; margin-top: 0.8em; margin-bottom: 0.8em; white-space: pre-wrap; position: relative; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\">3.java对象转化为json</p><pre style=\"overflow: visible; font-family: var(--monospace); font-size: 0.9em; break-inside: avoid; white-space: normal; background-image: inherit; background-position: inherit; background-size: inherit; background-repeat: inherit; background-attachment: inherit; background-origin: inherit; background-clip: inherit; background-color: rgb(248, 248, 248); border-color: rgb(231, 234, 237); border-radius: 3px; padding: 8px 4px 6px; margin-bottom: 15px; margin-top: 15px; width: inherit; position: relative !important;\"><span style=\"padding-right: 0.1px;\"><span style=\"color: rgb(0, 136, 85);\">String</span> <span style=\"color: rgb(0, 0, 0);\">json</span><span style=\"color: rgb(152, 26, 26);\">=</span><span style=\"color: rgb(0, 0, 0);\">JSON</span>.<span style=\"color: rgb(0, 0, 0);\">toJSONString</span>(<span style=\"color: rgb(0, 0, 0);\">user</span>);<span style=\"color: rgb(170, 85, 0);\">//user为标准的javaBean对象</span></span></pre><p style=\"line-height: inherit; orphans: 4; margin-top: 0.8em; margin-bottom: 0.8em; white-space: pre-wrap; position: relative; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\">  <strong>3, jquery中使用ajax实现异步加载功能</strong> </p><p style=\"line-height: inherit; orphans: 4; margin-top: 0.8em; margin-bottom: 0.8em; white-space: pre-wrap; position: relative; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\">   <em>所有的url 都可以是指向servlet的路径</em></p><pre style=\"overflow: visible; font-family: var(--monospace); font-size: 0.9em; break-inside: avoid; white-space: normal; background-image: inherit; background-position: inherit; background-size: inherit; background-repeat: inherit; background-attachment: inherit; background-origin: inherit; background-clip: inherit; background-color: rgb(248, 248, 248); border-color: rgb(231, 234, 237); border-radius: 3px; padding: 8px 4px 6px; margin-bottom: 15px; margin-top: 15px; width: inherit; position: relative !important;\"><span style=\"padding-right: 0.1px;\"><span style=\"color: rgb(170, 85, 0);\">//方法1</span></span><br/><span style=\"padding-right: 0.1px;\"><span style=\"color: rgb(0, 0, 0);\">$</span>.<span style=\"color: rgb(0, 0, 0);\">ajax</span> &nbsp;</span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp;  ({ &nbsp; </span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span style=\"color: rgb(0, 0, 0);\">type</span>: <span style=\"color: rgb(170, 17, 17);\">\"POST\"</span>, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span style=\"color: rgb(170, 85, 0);\">//请求的方式</span></span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span style=\"color: rgb(0, 0, 0);\">url</span>: <span style=\"color: rgb(170, 17, 17);\">\"outputservlet3\"</span>, &nbsp;<span style=\"color: rgb(170, 85, 0);\">//请求url</span></span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span style=\"color: rgb(0, 0, 0);\">data</span>: {}, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: rgb(170, 85, 0);\">//前端向后端传送的数据</span></span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span style=\"color: rgb(0, 0, 0);\">dataType</span>: <span style=\"color: rgb(170, 17, 17);\">\"json\"</span>, &nbsp; &nbsp; &nbsp; <span style=\"color: rgb(170, 85, 0);\">//数据格式json</span></span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span style=\"color: rgb(0, 0, 0);\">error</span>: <span style=\"color: rgb(119, 0, 136);\">function</span> () &nbsp; &nbsp; &nbsp;<span style=\"color: rgb(170, 85, 0);\">//请求错误的回调函数</span></span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  {</span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  },</span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span style=\"color: rgb(0, 0, 0);\">success</span>: <span style=\"color: rgb(119, 0, 136);\">function</span> () &nbsp; <span style=\"color: rgb(170, 85, 0);\">//请求成功的回调函数</span></span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  {</span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  }</span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp;  })</span><br/><span style=\"padding-right: 0.1px;\"><span style=\"color: rgb(170, 85, 0);\">//方法2</span></span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; <span style=\"color: rgb(0, 0, 0);\">$</span>.<span style=\"color: rgb(0, 0, 0);\">get</span>( <span style=\"color: rgb(0, 0, 0);\">url</span>,<span style=\"color: rgb(170, 85, 0);\">//请求路径</span></span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span style=\"color: rgb(0, 0, 0);\">传入的数值对</span>,<span style=\"color: rgb(170, 85, 0);\">//发送到后端的数据 键值对形式 也可以是json类型</span></span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span style=\"color: rgb(119, 0, 136);\">function</span>(<span style=\"color: rgb(0, 0, 255);\">data</span>,<span style=\"color: rgb(0, 0, 255);\">status</span>){}<span style=\"color: rgb(170, 85, 0);\">//回调函数data 是后端返回的数据</span></span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp;  );</span><br/><span style=\"padding-right: 0.1px;\"><span style=\"color: rgb(170, 85, 0);\">//方法3</span></span><br/><span style=\"padding-right: 0.1px;\"> <span style=\"color: rgb(170, 85, 0);\">//相同的</span></span><br/><span style=\"padding-right: 0.1px;\"><span style=\"color: rgb(0, 0, 0);\">$</span>.<span style=\"color: rgb(0, 0, 0);\">posst</span>(<span style=\"color: rgb(0, 0, 0);\">url</span>,<span style=\"color: rgb(0, 0, 0);\">数据，function</span>(<span style=\"color: rgb(0, 0, 0);\">data</span>,<span style=\"color: rgb(0, 0, 0);\">status</span>){})</span><br/><span style=\"padding-right: 0.1px;\"></span><br/><span style=\"padding-right: 0.1px;\"><span style=\"color: rgb(170, 85, 0);\">//方法4</span></span><br/><span style=\"padding-right: 0.1px;\"> &nbsp;<span style=\"color: rgb(0, 0, 0);\">$</span>.<span style=\"color: rgb(0, 0, 0);\">getJSON</span>( <span style=\"color: rgb(0, 0, 0);\">url</span>,</span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  {</span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span style=\"color: rgb(0, 0, 0);\">key</span>:<span style=\"color: rgb(0, 0, 0);\">valous</span>,</span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span style=\"color: rgb(0, 0, 0);\">key</span>:<span style=\"color: rgb(0, 0, 0);\">valous</span></span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  },</span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span style=\"color: rgb(119, 0, 136);\">function</span>(<span style=\"color: rgb(0, 0, 255);\">json</span>) {</span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  });<span style=\"color: rgb(170, 85, 0);\">//要求返回的数据必须是json格式</span></span><br/><span style=\"padding-right: 0.1px;\"></span><br/><span style=\"padding-right: 0.1px;\"> &nbsp;</span></pre><p style=\"line-height: inherit; orphans: 4; margin-top: 0.8em; margin-bottom: 0.8em; white-space: pre-wrap; position: relative; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\"><strong>后端返回数值到前端</strong></p><pre style=\"overflow: visible; font-family: var(--monospace); font-size: 0.9em; break-inside: avoid; white-space: normal; background-image: inherit; background-position: inherit; background-size: inherit; background-repeat: inherit; background-attachment: inherit; background-origin: inherit; background-clip: inherit; background-color: rgb(248, 248, 248); border-color: rgb(231, 234, 237); border-radius: 3px; padding: 8px 4px 6px; margin-bottom: 15px; margin-top: 15px; width: inherit; position: relative !important;\"><span style=\"padding-right: 0.1px;\"> &nbsp;<span style=\"color: rgb(0, 0, 0);\">response</span>.<span style=\"color: rgb(0, 0, 0);\">setCharacterEncoding</span>(<span style=\"color: rgb(170, 17, 17);\">\"utf-8\"</span>);<span style=\"color: rgb(170, 85, 0);\">//设置编码格式</span></span><br/><span style=\"padding-right: 0.1px;\"> &nbsp;<span style=\"color: rgb(170, 85, 0);\">//可以对返回的数据进行整理以满足前端的需要  比如转成Json格式</span></span><br/><span style=\"padding-right: 0.1px;\"> &nbsp;<span style=\"color: rgb(0, 0, 0);\">response</span>.<span style=\"color: rgb(0, 0, 0);\">getWriter</span>().<span style=\"color: rgb(0, 0, 0);\">println</span>(<span style=\"color: rgb(0, 0, 0);\">返回的数据</span>);</span><br/><span style=\"padding-right: 0.1px;\"> &nbsp;<span style=\"color: rgb(170, 85, 0);\">//response.getWriter().print(返回的数据);</span></span></pre><p style=\"line-height: inherit; orphans: 4; margin-top: 0.8em; margin-bottom: 0.8em; white-space: pre-wrap; position: relative; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\"><strong>前端接收数据</strong></p><pre style=\"overflow: visible; font-family: var(--monospace); font-size: 0.9em; break-inside: avoid; white-space: normal; background-image: inherit; background-position: inherit; background-size: inherit; background-repeat: inherit; background-attachment: inherit; background-origin: inherit; background-clip: inherit; background-color: rgb(248, 248, 248); border-color: rgb(231, 234, 237); border-radius: 3px; padding: 8px 4px 6px; margin-bottom: 15px; margin-top: 15px; width: inherit; position: relative !important;\"><span style=\"padding-right: 0.1px;\"><span style=\"color: rgb(170, 85, 0);\">//除了getJson()方式返回json类型到前端外 其他方式在前端得到的数据都是字符串类型，</span></span><br/><span style=\"padding-right: 0.1px;\"> &nbsp;<span style=\"color: rgb(170, 85, 0);\">//因此在前端使用时需要转换格式jquery提供如下方式进行转换</span></span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; <span style=\"color: rgb(0, 0, 0);\">JSON</span>.<span style=\"color: rgb(0, 0, 0);\">parse（）</span><span style=\"color: rgb(170, 85, 0);\">//只执行对象转换操作</span></span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; <span style=\"color: rgb(0, 0, 0);\">JSON</span>.<span style=\"color: rgb(0, 0, 0);\">stringify</span>()<span style=\"color: rgb(170, 85, 0);\">//将Json对象序列化成Json字符串，JSON.stringify()原生态方法</span></span></pre><p style=\"line-height: inherit; orphans: 4; margin-top: 0.8em; margin-bottom: 0.8em; white-space: pre-wrap; position: relative; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\"><strong>最后特殊的是表单的局部刷新</strong></p><p style=\"line-height: inherit; orphans: 4; margin-top: 0.8em; margin-bottom: 0.8em; white-space: pre-wrap; position: relative; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\">序列化表单方法：\n<code style=\"font-family: var(--monospace); vertical-align: initial; border: 1px solid rgb(231, 234, 237); background-color: rgb(243, 244, 244); padding: 0px 2px; font-size: 0.9em;\">serialize():将表单内容序列化成一个字符串。</code></p><pre style=\"overflow: visible; font-family: var(--monospace); font-size: 0.9em; break-inside: avoid; white-space: normal; background-image: inherit; background-position: inherit; background-size: inherit; background-repeat: inherit; background-attachment: inherit; background-origin: inherit; background-clip: inherit; background-color: rgb(248, 248, 248); border-color: rgb(231, 234, 237); border-radius: 3px; padding: 8px 4px 6px; margin-bottom: 15px; margin-top: 15px; width: inherit; position: relative !important;\"><span style=\"padding-right: 0.1px;\">serializeArray()：将表单内容序列化成一个对象数组</span></pre><p style=\"line-height: inherit; orphans: 4; margin-top: 0.8em; margin-bottom: 0.8em; white-space: pre-wrap; position: relative; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\">这里只介绍：serialize()\n看script：</p><pre style=\"overflow: visible; font-family: var(--monospace); font-size: 0.9em; break-inside: avoid; white-space: normal; background-image: inherit; background-position: inherit; background-size: inherit; background-repeat: inherit; background-attachment: inherit; background-origin: inherit; background-clip: inherit; background-color: rgb(248, 248, 248); border-color: rgb(231, 234, 237); border-radius: 3px; padding: 8px 4px 6px; margin-bottom: 15px; margin-top: 15px; width: inherit; position: relative !important;\"><span style=\"padding-right: 0.1px;\"><span style=\"color: rgb(152, 26, 26);\">&lt;</span><span style=\"color: rgb(0, 0, 0);\">script</span> <span style=\"color: rgb(0, 0, 0);\">type</span><span style=\"color: rgb(152, 26, 26);\">=</span><span style=\"color: rgb(170, 17, 17);\">\"text/javascript\"</span><span style=\"color: rgb(152, 26, 26);\">&gt;</span></span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span style=\"color: rgb(0, 0, 0);\">$</span>(<span style=\"color: rgb(0, 0, 0);\">document</span>).<span style=\"color: rgb(0, 0, 0);\">ready</span>(<span style=\"color: rgb(119, 0, 136);\">function</span>() {</span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp;<span style=\"color: rgb(0, 0, 0);\">$</span>(<span style=\"color: rgb(170, 17, 17);\">\"#mybutton\"</span>).<span style=\"color: rgb(0, 0, 0);\">click</span>(<span style=\"color: rgb(119, 0, 136);\">function</span>() {</span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span style=\"color: rgb(170, 85, 0);\">//var frm=$(\"#form1\").serializeArray();</span></span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span style=\"color: rgb(119, 0, 136);\">var</span> <span style=\"color: rgb(0, 0, 255);\">frm</span> <span style=\"color: rgb(152, 26, 26);\">=</span> <span style=\"color: rgb(0, 0, 0);\">$</span>(<span style=\"color: rgb(170, 17, 17);\">\"#form1\"</span>);</span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span style=\"color: rgb(0, 0, 0);\">$</span>.<span style=\"color: rgb(0, 0, 0);\">ajax</span>({</span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span style=\"color: rgb(0, 0, 0);\">url</span> : <span style=\"color: rgb(0, 85, 170);\">frm</span>.<span style=\"color: rgb(0, 0, 0);\">attr</span>(<span style=\"color: rgb(170, 17, 17);\">\"action\"</span>),</span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span style=\"color: rgb(0, 0, 0);\">type</span> : <span style=\"color: rgb(0, 85, 170);\">frm</span>.<span style=\"color: rgb(0, 0, 0);\">attr</span>(<span style=\"color: rgb(170, 17, 17);\">\"method\"</span>),</span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span style=\"color: rgb(0, 0, 0);\">async</span> : <span style=\"color: rgb(34, 17, 153);\">true</span>,</span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span style=\"color: rgb(0, 0, 0);\">data</span> : <span style=\"color: rgb(0, 85, 170);\">frm</span>.<span style=\"color: rgb(0, 0, 0);\">serialize</span>(),</span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span style=\"color: rgb(170, 85, 0);\">//var data=$(\"#form1\").serializeArray();</span></span><br/><span style=\"padding-right: 0.1px;\"></span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span style=\"color: rgb(0, 0, 0);\">success</span> : <span style=\"color: rgb(119, 0, 136);\">function</span>(<span style=\"color: rgb(0, 0, 255);\">data</span>) {</span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span style=\"color: rgb(0, 0, 0);\">alert</span>(<span style=\"color: rgb(170, 17, 17);\">\"ok\"</span>);</span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  },</span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span style=\"color: rgb(0, 0, 0);\">error</span> : <span style=\"color: rgb(119, 0, 136);\">function</span>(<span style=\"color: rgb(0, 0, 255);\">data</span>) {</span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span style=\"color: rgb(0, 0, 0);\">alert</span>(<span style=\"color: rgb(0, 85, 170);\">data</span>.<span style=\"color: rgb(0, 0, 0);\">status</span>);</span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  }</span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  });</span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp;  });</span><br/><span style=\"padding-right: 0.1px;\"> &nbsp;  });</span><br/><span style=\"padding-right: 0.1px;\"><span style=\"color: rgb(152, 26, 26);\">&lt;</span><span style=\"color: rgb(255, 85, 0);\">/script&gt;</span></span></pre><p style=\"line-height: inherit; orphans: 4; margin-top: 0.8em; margin-bottom: 0.8em; white-space: pre-wrap; position: relative; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\">form 表单</p><pre style=\"overflow: visible; font-family: var(--monospace); font-size: 0.9em; break-inside: avoid; white-space: normal; background-image: inherit; background-position: inherit; background-size: inherit; background-repeat: inherit; background-attachment: inherit; background-origin: inherit; background-clip: inherit; background-color: rgb(248, 248, 248); border-color: rgb(231, 234, 237); border-radius: 3px; padding: 8px 4px 6px; margin-bottom: 15px; margin-top: 15px; width: inherit; position: relative !important;\"><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span style=\"color: rgb(17, 119, 0);\">&lt;</span><span style=\"color: rgb(17, 119, 0);\">form</span> <span style=\"color: rgb(0, 0, 204);\">id</span>=<span style=\"color: rgb(170, 17, 17);\">\"form1\"</span></span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp;<span style=\"color: rgb(0, 0, 204);\">action</span>=<span style=\"color: rgb(170, 17, 17);\">\"${pageContext.request.contextPath}/ClassServlet\"</span> <span style=\"color: rgb(0, 0, 204);\">method</span>=<span style=\"color: rgb(170, 17, 17);\">\"POST\"</span><span style=\"color: rgb(17, 119, 0);\">&gt;</span></span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp;<span style=\"color: rgb(17, 119, 0);\">&lt;</span><span style=\"color: rgb(17, 119, 0);\">input</span> <span style=\"color: rgb(0, 0, 204);\">type</span>=<span style=\"color: rgb(170, 17, 17);\">\"text\"</span> <span style=\"color: rgb(0, 0, 204);\">name</span>=<span style=\"color: rgb(170, 17, 17);\">\"name\"</span> <span style=\"color: rgb(17, 119, 0);\">/&gt;</span> <span style=\"color: rgb(17, 119, 0);\">&lt;</span><span style=\"color: rgb(17, 119, 0);\">input</span> <span style=\"color: rgb(0, 0, 204);\">type</span>=<span style=\"color: rgb(170, 17, 17);\">\"password\"</span></span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span style=\"color: rgb(0, 0, 204);\">name</span>=<span style=\"color: rgb(170, 17, 17);\">\"password\"</span> <span style=\"color: rgb(17, 119, 0);\">/&gt;</span> <span style=\"color: rgb(17, 119, 0);\">&lt;</span><span style=\"color: rgb(17, 119, 0);\">input</span> <span style=\"color: rgb(0, 0, 204);\">type</span>=<span style=\"color: rgb(170, 17, 17);\">\"button\"</span> <span style=\"color: rgb(0, 0, 204);\">id</span>=<span style=\"color: rgb(170, 17, 17);\">\"mybutton\"</span> <span style=\"color: rgb(0, 0, 204);\">value</span>=<span style=\"color: rgb(170, 17, 17);\">\"点我\"</span> <span style=\"color: rgb(17, 119, 0);\">/&gt;</span></span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span style=\"color: rgb(17, 119, 0);\">&lt;/</span><span style=\"color: rgb(17, 119, 0);\">form</span><span style=\"color: rgb(17, 119, 0);\">&gt;</span></span></pre><p style=\"line-height: inherit; orphans: 4; margin-top: 0.8em; margin-bottom: 0.8em; white-space: pre-wrap; position: relative; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\"><strong>文件上传html模板</strong></p><pre style=\"overflow: visible; font-family: var(--monospace); font-size: 0.9em; break-inside: avoid; white-space: normal; background-image: inherit; background-position: inherit; background-size: inherit; background-repeat: inherit; background-attachment: inherit; background-origin: inherit; background-clip: inherit; background-color: rgb(248, 248, 248); border-color: rgb(231, 234, 237); border-radius: 3px; padding: 8px 4px 6px; margin-bottom: 15px; margin-top: 15px; width: inherit; position: relative !important;\"><span style=\"padding-right: 0.1px;\"><span style=\"color: rgb(17, 119, 0);\">&lt;</span><span style=\"color: rgb(17, 119, 0);\">div</span> <span style=\"color: rgb(0, 0, 204);\">class</span>=<span style=\"color: rgb(170, 17, 17);\">\"col-lg-5 col-lg-offset-2\"</span><span style=\"color: rgb(17, 119, 0);\">&gt;</span></span><br/><span style=\"padding-right: 0.1px;\"><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span><span style=\"color: rgb(17, 119, 0);\">&lt;</span><span style=\"color: rgb(17, 119, 0);\">form</span> <span style=\"color: rgb(0, 0, 204);\">id</span>=<span style=\"color: rgb(170, 17, 17);\">\"upload-form\"</span> <span style=\"color: rgb(0, 0, 204);\">method</span>=<span style=\"color: rgb(170, 17, 17);\">\"post\"</span> <span style=\"color: rgb(0, 0, 204);\">enctype</span>=<span style=\"color: rgb(170, 17, 17);\">\"multipart/form-data\"</span> <span style=\"color: rgb(17, 119, 0);\">&gt;</span></span><br/><span style=\"padding-right: 0.1px;\"><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span><span style=\"color: rgb(17, 119, 0);\">&lt;</span><span style=\"color: rgb(17, 119, 0);\">label</span><span style=\"color: rgb(17, 119, 0);\">&gt;</span>上传头像<span style=\"color: rgb(17, 119, 0);\">&lt;/</span><span style=\"color: rgb(17, 119, 0);\">label</span><span style=\"color: rgb(17, 119, 0);\">&gt;</span></span><br/><span style=\"padding-right: 0.1px;\"><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span><span style=\"color: rgb(17, 119, 0);\">&lt;</span><span style=\"color: rgb(17, 119, 0);\">input</span> <span style=\"color: rgb(0, 0, 204);\">name</span>=<span style=\"color: rgb(170, 17, 17);\">\"upload-img\"</span> <span style=\"color: rgb(0, 0, 204);\">class</span>=<span style=\"color: rgb(170, 17, 17);\">\"upload-img\"</span> <span style=\"color: rgb(0, 0, 204);\">type</span>=<span style=\"color: rgb(170, 17, 17);\">\"file\"</span> <span style=\"color: rgb(0, 0, 204);\">multiple</span>=<span style=\"color: rgb(170, 17, 17);\">\"multiple\"</span><span style=\"color: rgb(17, 119, 0);\">&gt;</span></span><br/><span style=\"padding-right: 0.1px;\"><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span><span style=\"color: rgb(17, 119, 0);\">&lt;</span><span style=\"color: rgb(17, 119, 0);\">p</span> <span style=\"color: rgb(0, 0, 204);\">class</span>=<span style=\"color: rgb(170, 17, 17);\">\"help-block\"</span><span style=\"color: rgb(17, 119, 0);\">&gt;</span>上传图片大小不要超过5M<span style=\"color: rgb(17, 119, 0);\">&lt;/</span><span style=\"color: rgb(17, 119, 0);\">p</span><span style=\"color: rgb(17, 119, 0);\">&gt;</span></span><br/><span style=\"padding-right: 0.1px;\"><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span><span style=\"color: rgb(17, 119, 0);\">&lt;/</span><span style=\"color: rgb(17, 119, 0);\">form</span><span style=\"color: rgb(17, 119, 0);\">&gt;</span></span><br/><span style=\"padding-right: 0.1px;\"><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span><span style=\"color: rgb(17, 119, 0);\">&lt;</span><span style=\"color: rgb(17, 119, 0);\">button</span> <span style=\"color: rgb(0, 0, 204);\">type</span>=<span style=\"color: rgb(170, 17, 17);\">\"button\"</span> <span style=\"color: rgb(0, 0, 204);\">id</span>=<span style=\"color: rgb(170, 17, 17);\">\"upload\"</span><span style=\"color: rgb(17, 119, 0);\">&gt;</span>上传<span style=\"color: rgb(17, 119, 0);\">&lt;/</span><span style=\"color: rgb(17, 119, 0);\">button</span><span style=\"color: rgb(17, 119, 0);\">&gt;</span></span><br/><span style=\"padding-right: 0.1px;\"><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span><span style=\"color: rgb(17, 119, 0);\">&lt;/</span><span style=\"color: rgb(17, 119, 0);\">div</span><span style=\"color: rgb(17, 119, 0);\">&gt;</span></span></pre><p style=\"line-height: inherit; orphans: 4; margin-top: 0.8em; margin-bottom: 0.8em; white-space: pre-wrap; position: relative; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\"><strong>文件上传 ajax模板</strong></p><pre style=\"overflow: visible; font-family: var(--monospace); font-size: 0.9em; break-inside: avoid; white-space: normal; background-image: inherit; background-position: inherit; background-size: inherit; background-repeat: inherit; background-attachment: inherit; background-origin: inherit; background-clip: inherit; background-color: rgb(248, 248, 248); border-color: rgb(231, 234, 237); border-radius: 3px; padding: 8px 4px 6px; margin-bottom: 15px; margin-top: 15px; width: inherit; position: relative !important;\"><span style=\"padding-right: 0.1px;\"><span style=\"color: rgb(0, 0, 0);\">$</span>(<span style=\"color: rgb(170, 17, 17);\">\"#upload\"</span>).<span style=\"color: rgb(0, 0, 0);\">click</span>(<span style=\"color: rgb(119, 0, 136);\">function</span> (){</span><br/><span style=\"padding-right: 0.1px;\"><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span> <span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">   </span><span style=\"color: rgb(119, 0, 136);\">var</span> <span style=\"color: rgb(0, 0, 255);\">formData</span> <span style=\"color: rgb(152, 26, 26);\">=</span> <span style=\"color: rgb(119, 0, 136);\">new</span> <span style=\"color: rgb(0, 0, 0);\">FormData</span>(<span style=\"color: rgb(0, 0, 0);\">$</span>(<span style=\"color: rgb(170, 17, 17);\">\"#upload-form\"</span>)[<span style=\"color: rgb(17, 102, 68);\">0</span>]);</span><br/><span style=\"padding-right: 0.1px;\"><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span> <span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">   </span> &nbsp; &nbsp; <span style=\"color: rgb(0, 85, 170);\">formData</span>.<span style=\"color: rgb(0, 0, 0);\">append</span>(<span style=\"color: rgb(170, 17, 17);\">\"action\"</span>,<span style=\"color: rgb(170, 17, 17);\">\"upload\"</span>);<span style=\"color: rgb(170, 85, 0);\">//添加信息头 让后台servlet识别为文件上传</span></span><br/><span style=\"padding-right: 0.1px;\"><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span> <span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">   </span> &nbsp; &nbsp; <span style=\"color: rgb(0, 0, 0);\">console</span>.<span style=\"color: rgb(0, 0, 0);\">log</span>(<span style=\"color: rgb(0, 85, 170);\">formData</span>);</span><br/><span style=\"padding-right: 0.1px;\"><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span> <span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">   </span><span style=\"color: rgb(0, 0, 0);\">$</span>.<span style=\"color: rgb(0, 0, 0);\">ajax</span>({</span><br/><span style=\"padding-right: 0.1px;\"><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span><span style=\"color: rgb(0, 0, 0);\">type</span>:<span style=\"color: rgb(170, 17, 17);\">\"POST\"</span>,</span><br/><span style=\"padding-right: 0.1px;\"><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span><span style=\"color: rgb(0, 0, 0);\">url</span>:<span style=\"color: rgb(170, 17, 17);\">\"servlet\"</span>,</span><br/><span style=\"padding-right: 0.1px;\"><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span> &nbsp; &nbsp;<span style=\"color: rgb(0, 0, 0);\">data</span>: <span style=\"color: rgb(0, 85, 170);\">formData</span>,</span><br/><span style=\"padding-right: 0.1px;\"><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span><span style=\"color: rgb(0, 0, 0);\">cache</span>:<span style=\"color: rgb(34, 17, 153);\">false</span>,</span><br/><span style=\"padding-right: 0.1px;\"><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span><span style=\"color: rgb(0, 0, 0);\">processData</span>:<span style=\"color: rgb(34, 17, 153);\">false</span>,</span><br/><span style=\"padding-right: 0.1px;\"><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span><span style=\"color: rgb(0, 0, 0);\">contentType</span>:<span style=\"color: rgb(34, 17, 153);\">false</span>,</span><br/><span style=\"padding-right: 0.1px;\"><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span> &nbsp; &nbsp;<span style=\"color: rgb(0, 0, 0);\">success</span>:<span style=\"color: rgb(119, 0, 136);\">function</span> (<span style=\"color: rgb(0, 0, 255);\">data</span>,<span style=\"color: rgb(0, 0, 255);\">status</span>){</span><br/><span style=\"padding-right: 0.1px;\"><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span> &nbsp; <span style=\"color: rgb(0, 0, 0);\">console</span>.<span style=\"color: rgb(0, 0, 0);\">log</span>(<span style=\"color: rgb(170, 17, 17);\">\"data:\"</span><span style=\"color: rgb(152, 26, 26);\">+</span><span style=\"color: rgb(0, 85, 170);\">data</span>);</span><br/><span style=\"padding-right: 0.1px;\"><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span> &nbsp;<span style=\"color: rgb(119, 0, 136);\">var</span> <span style=\"color: rgb(0, 0, 255);\">img</span><span style=\"color: rgb(152, 26, 26);\">=</span> <span style=\"color: rgb(0, 0, 0);\">$</span>(<span style=\"color: rgb(170, 17, 17);\">\"#header-img\"</span>);</span><br/><span style=\"padding-right: 0.1px;\"><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span> &nbsp;<span style=\"color: rgb(0, 85, 170);\">img</span>.<span style=\"color: rgb(0, 0, 0);\">attr</span>(<span style=\"color: rgb(170, 17, 17);\">\"src\"</span>,<span style=\"color: rgb(0, 85, 170);\">data</span>);</span><br/><span style=\"padding-right: 0.1px;\"><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span> &nbsp;<span style=\"color: rgb(0, 85, 170);\">img</span>.<span style=\"color: rgb(0, 0, 0);\">css</span>({<span style=\"color: rgb(0, 0, 0);\">width</span>:<span style=\"color: rgb(170, 17, 17);\">\"150px\"</span>,<span style=\"color: rgb(0, 0, 0);\">height</span>:<span style=\"color: rgb(170, 17, 17);\">\"130px\"</span>});</span><br/><span style=\"padding-right: 0.1px;\"><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span> }</span><br/><span style=\"padding-right: 0.1px;\"><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span> <span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">   </span>});</span><br/><span style=\"padding-right: 0.1px;\"></span><br/><span style=\"padding-right: 0.1px;\"><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span><span style=\"font-family: var(--monospace); position: relative; display: inline-block;\">    </span> });<span style=\"color: rgb(170, 85, 0);\">//文件上传</span></span></pre><p style=\"line-height: inherit; orphans: 4; margin-top: 0.8em; margin-bottom: 0.8em; white-space: pre-wrap; position: relative; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\"><strong>后端处理</strong></p><pre style=\"overflow: visible; font-family: var(--monospace); font-size: 0.9em; break-inside: avoid; white-space: normal; background-image: inherit; background-position: inherit; background-size: inherit; background-repeat: inherit; background-attachment: inherit; background-origin: inherit; background-clip: inherit; background-color: rgb(248, 248, 248); border-color: rgb(231, 234, 237); border-radius: 3px; padding: 8px 4px 6px; margin-bottom: 15px; margin-top: 15px; width: inherit; position: relative !important;\"><span style=\"padding-right: 0.1px;\"><span style=\"color: rgb(85, 85, 85);\">@MultipartConfig</span><span style=\"color: rgb(170, 85, 0);\">//标识servlet支持文件上传</span></span></pre><pre style=\"overflow: visible; font-family: var(--monospace); font-size: 0.9em; break-inside: avoid; white-space: normal; background-image: inherit; background-position: inherit; background-size: inherit; background-repeat: inherit; background-attachment: inherit; background-origin: inherit; background-clip: inherit; background-color: rgb(248, 248, 248); border-color: rgb(231, 234, 237); border-radius: 3px; padding: 8px 4px 6px; margin-bottom: 15px; margin-top: 15px; width: inherit; position: relative !important;\"><span style=\"padding-right: 0.1px;\"><span style=\"color: rgb(119, 0, 136);\">case</span> <span style=\"color: rgb(170, 17, 17);\">\"upload\"</span>:{</span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span style=\"color: rgb(0, 0, 0);\">List</span><span style=\"color: rgb(152, 26, 26);\">&lt;</span><span style=\"color: rgb(0, 0, 0);\">Part</span><span style=\"color: rgb(152, 26, 26);\">&gt;</span> <span style=\"color: rgb(0, 0, 0);\">part</span><span style=\"color: rgb(152, 26, 26);\">=</span>( <span style=\"color: rgb(0, 0, 0);\">List</span><span style=\"color: rgb(152, 26, 26);\">&lt;</span><span style=\"color: rgb(0, 0, 0);\">Part</span><span style=\"color: rgb(152, 26, 26);\">&gt;</span> )<span style=\"color: rgb(0, 0, 0);\">request</span>.<span style=\"color: rgb(0, 0, 0);\">getParts</span>();</span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span style=\"color: rgb(0, 0, 0);\">response</span>.<span style=\"color: rgb(0, 0, 0);\">setCharacterEncoding</span>(<span style=\"color: rgb(170, 17, 17);\">\"utf-8\"</span>);</span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span style=\"color: rgb(170, 85, 0);\">//存储路径</span></span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span style=\"color: rgb(0, 136, 85);\">String</span> <span style=\"color: rgb(0, 0, 0);\">realPath</span> <span style=\"color: rgb(152, 26, 26);\">=</span> <span style=\"color: rgb(0, 0, 0);\">request</span>.<span style=\"color: rgb(0, 0, 0);\">getServletContext</span>().<span style=\"color: rgb(0, 0, 0);\">getRealPath</span>(<span style=\"color: rgb(170, 17, 17);\">\"/upload\"</span>);</span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span style=\"color: rgb(170, 85, 0);\">//如果文件目录不存在则新建目录</span></span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span style=\"color: rgb(0, 0, 0);\">File</span> <span style=\"color: rgb(0, 0, 0);\">dir</span><span style=\"color: rgb(152, 26, 26);\">=</span><span style=\"color: rgb(119, 0, 136);\">new</span> <span style=\"color: rgb(0, 0, 0);\">File</span>(<span style=\"color: rgb(0, 0, 0);\">realPath</span>);</span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span style=\"color: rgb(119, 0, 136);\">if</span>(<span style=\"color: rgb(152, 26, 26);\">!</span><span style=\"color: rgb(0, 0, 0);\">dir</span>.<span style=\"color: rgb(0, 0, 0);\">exists</span>()){</span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span style=\"color: rgb(0, 0, 0);\">dir</span>.<span style=\"color: rgb(0, 0, 0);\">mkdir</span>();</span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  }</span><br/><span style=\"padding-right: 0.1px;\"></span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span style=\"color: rgb(0, 136, 85);\">String</span> <span style=\"color: rgb(0, 0, 0);\">submittedFileName</span><span style=\"color: rgb(152, 26, 26);\">=</span><span style=\"color: rgb(34, 17, 153);\">null</span>;</span><br/><span style=\"padding-right: 0.1px;\"><span style=\"color: rgb(170, 85, 0);\">// &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  System.out.println(part.size());</span></span><br/><span style=\"padding-right: 0.1px;\"><span style=\"color: rgb(170, 85, 0);\">// &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  for (Part p:part) {</span></span><br/><span style=\"padding-right: 0.1px;\"><span style=\"color: rgb(170, 85, 0);\">// &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  submittedFileName = p.getSubmittedFileName();</span></span><br/><span style=\"padding-right: 0.1px;\"><span style=\"color: rgb(170, 85, 0);\">// &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  p.write(realPath+\"//\"+submittedFileName);</span></span><br/><span style=\"padding-right: 0.1px;\"><span style=\"color: rgb(170, 85, 0);\">// &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  System.out.println( submittedFileName+\" \"+p.getSize());</span></span><br/><span style=\"padding-right: 0.1px;\"><span style=\"color: rgb(170, 85, 0);\">// &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // response.getWriter().println(\"upload\"+\"//\"+submittedFileName);</span></span><br/><span style=\"padding-right: 0.1px;\"><span style=\"color: rgb(170, 85, 0);\">// &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  }</span></span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span style=\"color: rgb(0, 0, 0);\">System</span>.<span style=\"color: rgb(0, 0, 0);\">out</span>.<span style=\"color: rgb(0, 0, 0);\">println</span>(<span style=\"color: rgb(0, 0, 0);\">part</span>.<span style=\"color: rgb(0, 0, 0);\">size</span>());</span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span style=\"color: rgb(119, 0, 136);\">for</span>(<span style=\"color: rgb(0, 136, 85);\">int</span> <span style=\"color: rgb(0, 0, 0);\">i</span><span style=\"color: rgb(152, 26, 26);\">=</span><span style=\"color: rgb(17, 102, 68);\">0</span>;<span style=\"color: rgb(0, 0, 0);\">i</span><span style=\"color: rgb(152, 26, 26);\">&lt;</span><span style=\"color: rgb(0, 0, 0);\">part</span>.<span style=\"color: rgb(0, 0, 0);\">size</span>()<span style=\"color: rgb(152, 26, 26);\">-</span><span style=\"color: rgb(17, 102, 68);\">1</span>;<span style=\"color: rgb(0, 0, 0);\">i</span><span style=\"color: rgb(152, 26, 26);\">++</span>){</span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span style=\"color: rgb(0, 0, 0);\">Part</span> <span style=\"color: rgb(0, 0, 0);\">part1</span> <span style=\"color: rgb(152, 26, 26);\">=</span> <span style=\"color: rgb(0, 0, 0);\">part</span>.<span style=\"color: rgb(0, 0, 0);\">get</span>(<span style=\"color: rgb(0, 0, 0);\">i</span>);</span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span style=\"color: rgb(0, 0, 0);\">submittedFileName</span> <span style=\"color: rgb(152, 26, 26);\">=</span> <span style=\"color: rgb(0, 0, 0);\">part1</span>.<span style=\"color: rgb(0, 0, 0);\">getSubmittedFileName</span>();</span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span style=\"color: rgb(0, 0, 0);\">part1</span>.<span style=\"color: rgb(0, 0, 0);\">write</span>(<span style=\"color: rgb(0, 0, 0);\">realPath</span><span style=\"color: rgb(152, 26, 26);\">+</span><span style=\"color: rgb(170, 17, 17);\">\"//\"</span><span style=\"color: rgb(152, 26, 26);\">+</span><span style=\"color: rgb(0, 0, 0);\">submittedFileName</span>);</span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span style=\"color: rgb(0, 0, 0);\">response</span>.<span style=\"color: rgb(0, 0, 0);\">getWriter</span>().<span style=\"color: rgb(0, 0, 0);\">println</span>(<span style=\"color: rgb(170, 17, 17);\">\"upload\"</span><span style=\"color: rgb(152, 26, 26);\">+</span><span style=\"color: rgb(170, 17, 17);\">\"//\"</span><span style=\"color: rgb(152, 26, 26);\">+</span><span style=\"color: rgb(0, 0, 0);\">submittedFileName</span>);</span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  }</span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span style=\"color: rgb(119, 0, 136);\">break</span>;</span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  }</span></pre><p style=\"line-height: inherit; orphans: 4; margin-top: 0.8em; margin-bottom: 0.8em; white-space: pre-wrap; position: relative; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\"><strong>注意：</strong>\n<code style=\"font-family: var(--monospace); vertical-align: initial; border: 1px solid rgb(231, 234, 237); background-color: rgb(243, 244, 244); padding: 0px 2px; font-size: 0.9em;\">使用：serialize()</code></p><p style=\"line-height: inherit; orphans: 4; margin-top: 0.8em; margin-bottom: 0.8em; white-space: pre-wrap; position: relative; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\"><strong>这时表单的按钮的type不可以是submit，否则自提交数据，<span style=\"font-family: var(--monospace); opacity: 0.6; color: inherit;\">  <span style=\"font-family: var(--monospace); opacity: 0.6; color: inherit;\"></span>\n</span>也就是自动刷新； 用Ajax的serialize()提交表单，<span style=\"font-family: var(--monospace); opacity: 0.6; color: inherit;\">  <span style=\"font-family: var(--monospace); opacity: 0.6; color: inherit;\"></span>\n</span>如果input的type为submit，提交时就会自动刷新，<span style=\"font-family: var(--monospace); opacity: 0.6; color: inherit;\">  <span style=\"font-family: var(--monospace); opacity: 0.6; color: inherit;\"></span>\n</span>所以，用serialize()提交表单的时候最好把type改为button.</strong></p>', 'Java list<>对象数据和json格式数据相互转化', 1, '/upload/1/1f0da579ac6fe44b1a4600f185217d32c.jpg', '0', '0', 1, '1', 1, '2022-04-26 15:15:02', NULL, NULL, 0);
INSERT INTO `my_article` VALUES (14, 'Python break 语句', '<h1 style=\"border: 0px; margin-top: 0px; font-size: 2.1em; color: rgb(0, 0, 0); font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif;\">Python&nbsp;<span style=\"border: 0px; color: rgb(100, 133, 76);\">break 语句</span></h1><p style=\"border: 0px; margin-top: 0px; margin-bottom: 0px; line-height: 2em; overflow-wrap: break-word; word-break: break-all; font-size: 13px; font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; color: rgb(51, 51, 51);\">Python break语句，就像在C语言中，打破了最小封闭for或while循环。</p><p style=\"border: 0px; margin-top: 0px; margin-bottom: 0px; line-height: 2em; overflow-wrap: break-word; word-break: break-all; font-size: 13px; font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; color: rgb(51, 51, 51);\">break语句用来终止循环语句，即循环条件没有False条件或者序列还没被完全递归完，也会停止执行循环语句。</p><p style=\"border: 0px; margin-top: 0px; margin-bottom: 0px; line-height: 2em; overflow-wrap: break-word; word-break: break-all; font-size: 13px; font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; color: rgb(51, 51, 51);\">break语句用在while和for循环中。</p><p style=\"border: 0px; margin-top: 0px; margin-bottom: 0px; line-height: 2em; overflow-wrap: break-word; word-break: break-all; font-size: 13px; font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; color: rgb(51, 51, 51);\">如果您使用嵌套循环，break语句将停止执行最深层的循环，并开始执行下一行代码。</p><p><span style=\"border: 0px; color: green; font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; font-size: 13.2px; white-space: pre-wrap;\">for</span><span style=\"border: 0px; color: gray; font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; font-size: 13.2px; white-space: pre-wrap;\"> </span><span style=\"border: 0px; color: rgb(0, 85, 170); font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; font-size: 13.2px; white-space: pre-wrap;\">letter</span><span style=\"border: 0px; color: gray; font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; font-size: 13.2px; white-space: pre-wrap;\"> </span><span style=\"border: 0px; color: green; font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; font-size: 13.2px; white-space: pre-wrap;\">in</span><span style=\"border: 0px; color: gray; font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; font-size: 13.2px; white-space: pre-wrap;\"> </span><span style=\"border: 0px; color: rgb(139, 0, 0); font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; font-size: 13.2px; white-space: pre-wrap;\">\'</span><span style=\"border: 0px; color: rgb(170, 17, 17); font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; font-size: 13.2px; white-space: pre-wrap;\">Python</span><span style=\"border: 0px; color: rgb(139, 0, 0); font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; font-size: 13.2px; white-space: pre-wrap;\">\'</span><span style=\"border: 0px; color: gray; font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; font-size: 13.2px; white-space: pre-wrap;\">:     </span><span style=\"border: 0px; color: rgb(170, 85, 0); font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; font-size: 13.2px; white-space: pre-wrap;\"># 第一个实例</span><span style=\"border: 0px; color: gray; font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; font-size: 13.2px; white-space: pre-wrap;\">\n   </span><span style=\"border: 0px; color: green; font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; font-size: 13.2px; white-space: pre-wrap;\">if</span><span style=\"border: 0px; color: gray; font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; font-size: 13.2px; white-space: pre-wrap;\"> </span><span style=\"border: 0px; color: rgb(0, 85, 170); font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; font-size: 13.2px; white-space: pre-wrap;\">letter</span><span style=\"border: 0px; color: gray; font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; font-size: 13.2px; white-space: pre-wrap;\"> == </span><span style=\"border: 0px; color: rgb(139, 0, 0); font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; font-size: 13.2px; white-space: pre-wrap;\">\'</span><span style=\"border: 0px; color: rgb(170, 17, 17); font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; font-size: 13.2px; white-space: pre-wrap;\">h</span><span style=\"border: 0px; color: rgb(139, 0, 0); font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; font-size: 13.2px; white-space: pre-wrap;\">\'</span><span style=\"border: 0px; color: gray; font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; font-size: 13.2px; white-space: pre-wrap;\">:\n      </span><span style=\"border: 0px; color: green; font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; font-size: 13.2px; white-space: pre-wrap;\">break</span><span style=\"border: 0px; color: gray; font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; font-size: 13.2px; white-space: pre-wrap;\">\n   </span><span style=\"border: 0px; color: green; font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; font-size: 13.2px; white-space: pre-wrap;\">print</span><span style=\"border: 0px; color: gray; font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; font-size: 13.2px; white-space: pre-wrap;\"> </span><span style=\"border: 0px; color: rgb(139, 0, 0); font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; font-size: 13.2px; white-space: pre-wrap;\">\'</span><span style=\"border: 0px; color: rgb(170, 17, 17); font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; font-size: 13.2px; white-space: pre-wrap;\">当前字母 :</span><span style=\"border: 0px; color: rgb(139, 0, 0); font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; font-size: 13.2px; white-space: pre-wrap;\">\'</span><span style=\"border: 0px; color: gray; font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; font-size: 13.2px; white-space: pre-wrap;\">, </span><span style=\"border: 0px; color: rgb(0, 85, 170); font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; font-size: 13.2px; white-space: pre-wrap;\">letter</span><span style=\"border: 0px; color: gray; font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; font-size: 13.2px; white-space: pre-wrap;\">\n  \n</span><span style=\"border: 0px; color: rgb(0, 85, 170); font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; font-size: 13.2px; white-space: pre-wrap;\">var</span><span style=\"border: 0px; color: gray; font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; font-size: 13.2px; white-space: pre-wrap;\"> = </span><span style=\"border: 0px; color: maroon; font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; font-size: 13.2px; white-space: pre-wrap;\">10</span><span style=\"border: 0px; color: gray; font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; font-size: 13.2px; white-space: pre-wrap;\">                    </span><span style=\"border: 0px; color: rgb(170, 85, 0); font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; font-size: 13.2px; white-space: pre-wrap;\"># 第二个实例</span><span style=\"border: 0px; color: gray; font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; font-size: 13.2px; white-space: pre-wrap;\">\n</span><span style=\"border: 0px; color: green; font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; font-size: 13.2px; white-space: pre-wrap;\">while</span><span style=\"border: 0px; color: gray; font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; font-size: 13.2px; white-space: pre-wrap;\"> </span><span style=\"border: 0px; color: rgb(0, 85, 170); font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; font-size: 13.2px; white-space: pre-wrap;\">var</span><span style=\"border: 0px; color: gray; font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; font-size: 13.2px; white-space: pre-wrap;\"> &gt; </span><span style=\"border: 0px; color: maroon; font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; font-size: 13.2px; white-space: pre-wrap;\">0</span><span style=\"border: 0px; color: gray; font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; font-size: 13.2px; white-space: pre-wrap;\">:              \n   </span><span style=\"border: 0px; color: green; font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; font-size: 13.2px; white-space: pre-wrap;\">print</span><span style=\"border: 0px; color: gray; font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; font-size: 13.2px; white-space: pre-wrap;\"> </span><span style=\"border: 0px; color: rgb(139, 0, 0); font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; font-size: 13.2px; white-space: pre-wrap;\">\'</span><span style=\"border: 0px; color: rgb(170, 17, 17); font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; font-size: 13.2px; white-space: pre-wrap;\">当前变量值 :</span><span style=\"border: 0px; color: rgb(139, 0, 0); font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; font-size: 13.2px; white-space: pre-wrap;\">\'</span><span style=\"border: 0px; color: gray; font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; font-size: 13.2px; white-space: pre-wrap;\">, </span><span style=\"border: 0px; color: rgb(0, 85, 170); font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; font-size: 13.2px; white-space: pre-wrap;\">var</span><span style=\"border: 0px; color: gray; font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; font-size: 13.2px; white-space: pre-wrap;\">\n   </span><span style=\"border: 0px; color: rgb(0, 85, 170); font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; font-size: 13.2px; white-space: pre-wrap;\">var</span><span style=\"border: 0px; color: gray; font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; font-size: 13.2px; white-space: pre-wrap;\"> = </span><span style=\"border: 0px; color: rgb(0, 85, 170); font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; font-size: 13.2px; white-space: pre-wrap;\">var</span><span style=\"border: 0px; color: gray; font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; font-size: 13.2px; white-space: pre-wrap;\"> -</span><span style=\"border: 0px; color: maroon; font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; font-size: 13.2px; white-space: pre-wrap;\">1</span><span style=\"border: 0px; color: gray; font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; font-size: 13.2px; white-space: pre-wrap;\">\n   </span><span style=\"border: 0px; color: green; font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; font-size: 13.2px; white-space: pre-wrap;\">if</span><span style=\"border: 0px; color: gray; font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; font-size: 13.2px; white-space: pre-wrap;\"> </span><span style=\"border: 0px; color: rgb(0, 85, 170); font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; font-size: 13.2px; white-space: pre-wrap;\">var</span><span style=\"border: 0px; color: gray; font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; font-size: 13.2px; white-space: pre-wrap;\"> == </span><span style=\"border: 0px; color: maroon; font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; font-size: 13.2px; white-space: pre-wrap;\">5</span><span style=\"border: 0px; color: gray; font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; font-size: 13.2px; white-space: pre-wrap;\">:   </span><span style=\"border: 0px; color: rgb(170, 85, 0); font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; font-size: 13.2px; white-space: pre-wrap;\"># 当变量 var 等于 5 时退出循环</span><span style=\"border: 0px; color: gray; font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; font-size: 13.2px; white-space: pre-wrap;\">\n      </span><span style=\"border: 0px; color: green; font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; font-size: 13.2px; white-space: pre-wrap;\">break</span><span style=\"border: 0px; color: gray; font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; font-size: 13.2px; white-space: pre-wrap;\">\n \n</span><span style=\"border: 0px; color: green; font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; font-size: 13.2px; white-space: pre-wrap;\">print</span><span style=\"border: 0px; color: gray; font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; font-size: 13.2px; white-space: pre-wrap;\"> </span><span style=\"border: 0px; color: rgb(139, 0, 0); font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; font-size: 13.2px; white-space: pre-wrap;\">\"</span><span style=\"border: 0px; color: rgb(170, 17, 17); font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; font-size: 13.2px; white-space: pre-wrap;\">Good bye!</span><span style=\"border: 0px; color: rgb(139, 0, 0); font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; font-size: 13.2px; white-space: pre-wrap;\">\"</span><br/></p><p><span style=\"border: 0px; color: rgb(139, 0, 0); font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; font-size: 13.2px; white-space: pre-wrap;\"><span style=\"color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; font-size: 13px; white-space: normal;\">以上实例执行结果：</span><br/></span></p><p><span style=\"border: 0px; color: rgb(139, 0, 0); font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; font-size: 13.2px; white-space: pre-wrap;\"></span></p><pre style=\"border-left-width: 4px; border-color: rgb(221, 221, 221); margin: 15px auto; padding: 10px 15px; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; line-height: 20px; font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; background: url(&quot;/images/codecolorer_bg.gif&quot;) center top rgb(251, 251, 251);\"><span style=\"border: 0px; color: rgb(102, 102, 0);\">当前字母</span><span style=\"border: 0px; color: rgb(0, 0, 0);\"> </span><span style=\"border: 0px; color: rgb(102, 102, 0);\">:</span><span style=\"border: 0px; color: rgb(0, 0, 0);\"> P\n</span><span style=\"border: 0px; color: rgb(102, 102, 0);\">当前字母</span><span style=\"border: 0px; color: rgb(0, 0, 0);\"> </span><span style=\"border: 0px; color: rgb(102, 102, 0);\">:</span><span style=\"border: 0px; color: rgb(0, 0, 0);\"> y\n</span><span style=\"border: 0px; color: rgb(102, 102, 0);\">当前字母</span><span style=\"border: 0px; color: rgb(0, 0, 0);\"> </span><span style=\"border: 0px; color: rgb(102, 102, 0);\">:</span><span style=\"border: 0px; color: rgb(0, 0, 0);\"> t\n</span><span style=\"border: 0px; color: rgb(102, 102, 0);\">当前变量值</span><span style=\"border: 0px; color: rgb(0, 0, 0);\"> </span><span style=\"border: 0px; color: rgb(102, 102, 0);\">:</span><span style=\"border: 0px; color: rgb(0, 0, 0);\"> </span><span style=\"border: 0px; color: rgb(0, 102, 102);\">10</span><span style=\"border: 0px; color: rgb(0, 0, 0);\">\n</span><span style=\"border: 0px; color: rgb(102, 102, 0);\">当前变量值</span><span style=\"border: 0px; color: rgb(0, 0, 0);\"> </span><span style=\"border: 0px; color: rgb(102, 102, 0);\">:</span><span style=\"border: 0px; color: rgb(0, 0, 0);\"> </span><span style=\"border: 0px; color: rgb(0, 102, 102);\">9</span><span style=\"border: 0px; color: rgb(0, 0, 0);\">\n</span><span style=\"border: 0px; color: rgb(102, 102, 0);\">当前变量值</span><span style=\"border: 0px; color: rgb(0, 0, 0);\"> </span><span style=\"border: 0px; color: rgb(102, 102, 0);\">:</span><span style=\"border: 0px; color: rgb(0, 0, 0);\"> </span><span style=\"border: 0px; color: rgb(0, 102, 102);\">8</span><span style=\"border: 0px; color: rgb(0, 0, 0);\">\n</span><span style=\"border: 0px; color: rgb(102, 102, 0);\">当前变量值</span><span style=\"border: 0px; color: rgb(0, 0, 0);\"> </span><span style=\"border: 0px; color: rgb(102, 102, 0);\">:</span><span style=\"border: 0px; color: rgb(0, 0, 0);\"> </span><span style=\"border: 0px; color: rgb(0, 102, 102);\">7</span><span style=\"border: 0px; color: rgb(0, 0, 0);\">\n</span><span style=\"border: 0px; color: rgb(102, 102, 0);\">当前变量值</span><span style=\"border: 0px; color: rgb(0, 0, 0);\"> </span><span style=\"border: 0px; color: rgb(102, 102, 0);\">:</span><span style=\"border: 0px; color: rgb(0, 0, 0);\"> </span><span style=\"border: 0px; color: rgb(0, 102, 102);\">6</span><span style=\"border: 0px; color: rgb(0, 0, 0);\">\n</span><span style=\"border: 0px; color: rgb(102, 0, 102);\">Good</span><span style=\"border: 0px; color: rgb(0, 0, 0);\"> bye</span><span style=\"border: 0px; color: rgb(102, 102, 0);\">!</span></pre>', 'Python break语句，就像在C语言中，打破了最小封闭for或while循环。  break语句用来终止循环语句，即循环条件没有False条件或者序列还没被完全递归完，也会停止执行循环语句。  break语句用在while和for循环中。  ', 0, '', '0', '3', 0, '1', 1, '2022-05-15 15:14:45', NULL, NULL, 0);
INSERT INTO `my_article` VALUES (15, '10.4.quartz简单定时任务(内存持久化)', '<h1 style=\"break-after: avoid-page; break-inside: avoid; orphans: 4; font-size: 2.25em; margin-top: 1rem; margin-bottom: 1rem; position: relative; line-height: 1.2; cursor: text; border-bottom: 1px solid rgb(238, 238, 238); white-space: pre-wrap; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\">一、 引入对应的 maven依赖</h1><p style=\"line-height: inherit; orphans: 4; margin-top: 0.8em; margin-bottom: 0.8em; white-space: pre-wrap; position: relative; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\">在 springboot2.0 后官方添加了 Quartz 框架的依赖，所以只需要在 pom 文件当中引入</p><pre style=\"overflow: visible; font-family: var(--monospace); font-size: 0.9em; break-inside: avoid; white-space: normal; background-image: inherit; background-position: inherit; background-size: inherit; background-repeat: inherit; background-attachment: inherit; background-origin: inherit; background-clip: inherit; background-color: rgb(248, 248, 248); border-color: rgb(231, 234, 237); border-radius: 3px; padding: 8px 4px 6px; margin-bottom: 15px; margin-top: 15px; width: inherit; position: relative !important;\"><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp;<span style=\"color: rgb(170, 85, 0);\">&lt;!--引入quartz定时框架--&gt;</span></span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp;<span style=\"color: rgb(17, 119, 0);\">&lt;</span><span style=\"color: rgb(17, 119, 0);\">dependency</span><span style=\"color: rgb(17, 119, 0);\">&gt;</span></span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span style=\"color: rgb(17, 119, 0);\">&lt;</span><span style=\"color: rgb(17, 119, 0);\">groupId</span><span style=\"color: rgb(17, 119, 0);\">&gt;</span>org.springframework.boot<span style=\"color: rgb(17, 119, 0);\">&lt;/</span><span style=\"color: rgb(17, 119, 0);\">groupId</span><span style=\"color: rgb(17, 119, 0);\">&gt;</span></span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span style=\"color: rgb(17, 119, 0);\">&lt;</span><span style=\"color: rgb(17, 119, 0);\">artifactId</span><span style=\"color: rgb(17, 119, 0);\">&gt;</span>spring-boot-starter-quartz<span style=\"color: rgb(17, 119, 0);\">&lt;/</span><span style=\"color: rgb(17, 119, 0);\">artifactId</span><span style=\"color: rgb(17, 119, 0);\">&gt;</span></span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp;<span style=\"color: rgb(17, 119, 0);\">&lt;/</span><span style=\"color: rgb(17, 119, 0);\">dependency</span><span style=\"color: rgb(17, 119, 0);\">&gt;</span></span></pre><h1 style=\"break-after: avoid-page; break-inside: avoid; orphans: 4; font-size: 2.25em; margin-top: 1rem; margin-bottom: 1rem; position: relative; line-height: 1.2; cursor: text; border-bottom: 1px solid rgb(238, 238, 238); white-space: pre-wrap; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\">二、 创建一个任务类</h1><p style=\"line-height: inherit; orphans: 4; margin-top: 0.8em; margin-bottom: 0.8em; white-space: pre-wrap; position: relative; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\">由于 springboot2.0 自动进行了依赖所以创建的定时任务类直接继承 QuzrtzJobBean 就可以了，新建一个定时任务类：QuartzSimpleTask</p><pre style=\"overflow: visible; font-family: var(--monospace); font-size: 0.9em; break-inside: avoid; white-space: normal; background-image: inherit; background-position: inherit; background-size: inherit; background-repeat: inherit; background-attachment: inherit; background-origin: inherit; background-clip: inherit; background-color: rgb(248, 248, 248); border-color: rgb(231, 234, 237); border-radius: 3px; padding: 8px 4px 6px; margin-bottom: 15px; margin-top: 15px; width: inherit; position: relative !important;\"><span style=\"padding-right: 0.1px;\"><span style=\"color: rgb(119, 0, 136);\">public</span> <span style=\"color: rgb(119, 0, 136);\">class</span> <span style=\"color: rgb(0, 0, 255);\">QuartzSimpleTask</span> <span style=\"color: rgb(119, 0, 136);\">extends</span> <span style=\"color: rgb(0, 0, 0);\">QuartzJobBean</span> {</span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span style=\"color: rgb(85, 85, 85);\">@Override</span></span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span style=\"color: rgb(119, 0, 136);\">protected</span> <span style=\"color: rgb(0, 136, 85);\">void</span> <span style=\"color: rgb(0, 0, 0);\">executeInternal</span>(<span style=\"color: rgb(0, 0, 0);\">JobExecutionContext</span> <span style=\"color: rgb(0, 0, 0);\">jobExecutionContext</span>) <span style=\"color: rgb(119, 0, 136);\">throws</span> <span style=\"color: rgb(0, 0, 0);\">JobExecutionException</span> {</span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp;<span style=\"color: rgb(0, 0, 0);\">System</span>.<span style=\"color: rgb(0, 0, 0);\">out</span>.<span style=\"color: rgb(0, 0, 0);\">println</span>(<span style=\"color: rgb(170, 17, 17);\">\"quartz简单的定时任务执行时间：\"</span><span style=\"color: rgb(152, 26, 26);\">+</span><span style=\"color: rgb(119, 0, 136);\">new</span> <span style=\"color: rgb(0, 0, 0);\">Date</span>().<span style=\"color: rgb(0, 0, 0);\">toLocaleString</span>());</span><br/><span style=\"padding-right: 0.1px;\"> &nbsp;  }</span><br/><span style=\"padding-right: 0.1px;\">}</span></pre><h1 style=\"break-after: avoid-page; break-inside: avoid; orphans: 4; font-size: 2.25em; margin-top: 1rem; margin-bottom: 1rem; position: relative; line-height: 1.2; cursor: text; border-bottom: 1px solid rgb(238, 238, 238); white-space: pre-wrap; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\">三、创建 Quartz 定时配置类</h1><p style=\"line-height: inherit; orphans: 4; margin-top: 0.8em; margin-bottom: 0.8em; white-space: pre-wrap; position: relative; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\">将之前创建的定时任务添加到定时调度里面</p><pre style=\"overflow: visible; font-family: var(--monospace); font-size: 0.9em; break-inside: avoid; white-space: normal; background-image: inherit; background-position: inherit; background-size: inherit; background-repeat: inherit; background-attachment: inherit; background-origin: inherit; background-clip: inherit; background-color: rgb(248, 248, 248); border-color: rgb(231, 234, 237); border-radius: 3px; padding: 8px 4px 6px; margin-bottom: 15px; margin-top: 15px; width: inherit; position: relative !important;\"><span style=\"padding-right: 0.1px;\"><span style=\"color: rgb(85, 85, 85);\">@Configuration</span></span><br/><span style=\"padding-right: 0.1px;\"><span style=\"color: rgb(119, 0, 136);\">public</span> <span style=\"color: rgb(119, 0, 136);\">class</span> <span style=\"color: rgb(0, 0, 255);\">QuartzSimpleConfig</span> {</span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span style=\"color: rgb(170, 85, 0);\">//指定具体的定时任务类</span></span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span style=\"color: rgb(85, 85, 85);\">@Bean</span></span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span style=\"color: rgb(119, 0, 136);\">public</span> <span style=\"color: rgb(0, 0, 0);\">JobDetail</span> <span style=\"color: rgb(0, 0, 0);\">uploadTaskDetail</span>() {</span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp;<span style=\"color: rgb(119, 0, 136);\">return</span> <span style=\"color: rgb(0, 0, 0);\">JobBuilder</span>.<span style=\"color: rgb(0, 0, 0);\">newJob</span>(<span style=\"color: rgb(0, 0, 0);\">QuartzSimpleTask</span>.<span style=\"color: rgb(119, 0, 136);\">class</span>).<span style=\"color: rgb(0, 0, 0);\">withIdentity</span>(<span style=\"color: rgb(170, 17, 17);\">\"QuartzSimpleTask\"</span>).<span style=\"color: rgb(0, 0, 0);\">storeDurably</span>().<span style=\"color: rgb(0, 0, 0);\">build</span>();</span><br/><span style=\"padding-right: 0.1px;\"> &nbsp;  }</span><br/><span style=\"padding-right: 0.1px;\"></span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span style=\"color: rgb(85, 85, 85);\">@Bean</span></span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span style=\"color: rgb(119, 0, 136);\">public</span> <span style=\"color: rgb(0, 0, 0);\">Trigger</span> <span style=\"color: rgb(0, 0, 0);\">uploadTaskTrigger</span>() {</span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp;<span style=\"color: rgb(170, 85, 0);\">//这里设定触发执行的方式</span></span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp;<span style=\"color: rgb(0, 0, 0);\">CronScheduleBuilder</span> <span style=\"color: rgb(0, 0, 0);\">scheduleBuilder</span> <span style=\"color: rgb(152, 26, 26);\">=</span> <span style=\"color: rgb(0, 0, 0);\">CronScheduleBuilder</span>.<span style=\"color: rgb(0, 0, 0);\">cronSchedule</span>(<span style=\"color: rgb(170, 17, 17);\">\"*/5 * * * * ?\"</span>);</span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp;<span style=\"color: rgb(170, 85, 0);\">// 返回任务触发器</span></span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp;<span style=\"color: rgb(119, 0, 136);\">return</span> <span style=\"color: rgb(0, 0, 0);\">TriggerBuilder</span>.<span style=\"color: rgb(0, 0, 0);\">newTrigger</span>().<span style=\"color: rgb(0, 0, 0);\">forJob</span>(<span style=\"color: rgb(0, 0, 0);\">uploadTaskDetail</span>())</span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  .<span style=\"color: rgb(0, 0, 0);\">withIdentity</span>(<span style=\"color: rgb(170, 17, 17);\">\"QuartzSimpleTask\"</span>)</span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  .<span style=\"color: rgb(0, 0, 0);\">withSchedule</span>(<span style=\"color: rgb(0, 0, 0);\">scheduleBuilder</span>)</span><br/><span style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  .<span style=\"color: rgb(0, 0, 0);\">build</span>();</span><br/><span style=\"padding-right: 0.1px;\"> &nbsp;  }</span><br/><span style=\"padding-right: 0.1px;\">}</span></pre><p style=\"line-height: inherit; orphans: 4; margin-top: 0.8em; margin-bottom: 0.8em; white-space: pre-wrap; position: relative; color: rgb(51, 51, 51); font-family: &quot;Open Sans&quot;, &quot;Clear Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Segoe UI Emoji&quot;, sans-serif;\">最后运行项目查看效果</p>', '在 springboot2.0 后官方添加了 Quartz 框架的依赖', 0, '', '0', '0', 2, '1', 1, '2022-05-16 13:47:56', NULL, NULL, 0);
INSERT INTO `my_article` VALUES (16, 'python函数的调用', '<pre style=\"background-color:#2b2b2b;color:#a9b7c6;font-family:\'JetBrains Mono\',monospace;font-size:9.8pt;\"><span style=\"color:#cc7832;\">def </span><span style=\"color:#ffc66d;\">zhuce</span>(file_name):<br/>    <span style=\"color:#cc7832;\">while </span><span style=\"color:#6897bb;\">1</span>:<br/>        name = <span style=\"color:#8888c6;\">input</span>(<span style=\"color:#6a8759;\">\'</span><span style=\"color:#6a8759;font-family:\'宋体\',monospace;\">请输入您的账户</span><span style=\"color:#6a8759;\">\'</span>).strip()<br/>        pwd = <span style=\"color:#8888c6;\">input</span>(<span style=\"color:#6a8759;\">\'</span><span style=\"color:#6a8759;font-family:\'宋体\',monospace;\">请输入您的密码</span><span style=\"color:#6a8759;\">\'</span>).strip()<br/>        <span style=\"color:#cc7832;\">if </span><span style=\"color:#8888c6;\">len</span>(name)&lt;<span style=\"color:#6897bb;\">6</span>:<br/>            <span style=\"color:#8888c6;\">print</span>(<span style=\"color:#6a8759;\">\'</span><span style=\"color:#6a8759;font-family:\'宋体\',monospace;\">账号的长度不能小于</span><span style=\"color:#6a8759;\">6\'</span>)<br/>        <span style=\"color:#cc7832;\">elif </span><span style=\"color:#8888c6;\">len</span>(name)&lt;<span style=\"color:#6897bb;\">6</span>:<br/>            <span style=\"color:#8888c6;\">print</span>(<span style=\"color:#6a8759;\">f\'</span><span style=\"color:#cc7832;\">{</span>name<span style=\"color:#cc7832;\">}</span><span style=\"color:#6a8759;font-family:\'宋体\',monospace;\">已经注册过了</span><span style=\"color:#6a8759;\">\'</span>)<br/>        <span style=\"color:#cc7832;\">else</span>:<br/>            <span style=\"color:#cc7832;\">with </span><span style=\"color:#8888c6;\">open</span>(file_name<span style=\"color:#cc7832;\">,</span><span style=\"color:#6a8759;\">\'a\'</span><span style=\"color:#cc7832;\">,</span><span style=\"color:#aa4926;\">encoding</span>=<span style=\"color:#6a8759;\">\'utf-8\'</span>) <span style=\"color:#cc7832;\">as </span>f:<br/>                data = <span style=\"color:#6a8759;\">f\'</span><span style=\"color:#cc7832;\">{</span>name<span style=\"color:#cc7832;\">}</span><span style=\"color:#6a8759;\">:</span><span style=\"color:#cc7832;\">{</span>pwd<span style=\"color:#cc7832;\">}\\n</span><span style=\"color:#6a8759;\">\'<br/></span><span style=\"color:#6a8759;\">                </span>f.write(data)<br/>            <span style=\"color:#8888c6;\">print</span>(<span style=\"color:#6a8759;\">f\'</span><span style=\"color:#cc7832;\">{</span>name<span style=\"color:#cc7832;\">}</span><span style=\"color:#6a8759;font-family:\'宋体\',monospace;\">账户注册成功</span><span style=\"color:#6a8759;\">\'</span>)<br/>            <span style=\"color:#cc7832;\">return<br/></span>zhuce(<span style=\"color:#6a8759;\">\'db.txt\'</span>)</pre>', '定义时小括号中的参数，用来接收参数用的，称为 “形参”，调用时小括号中的参数，用来传递给函数用的，称为 “实参”', 0, '', '0', '0', 1, '1', 1, '2022-05-16 15:33:12', NULL, NULL, 0);
INSERT INTO `my_article` VALUES (17, '何洁666', '<p>非常v对公司的股东身份广东佛山公司发的fgdf</p><p>风格和法规和</p>', '小幅高开降低功耗神佛第三方韩国i书法家', 0, '/upload/1/10890d5b97aaa4d408849097f68695750.jpg', '0', '2', 0, '1', 1, '2022-07-15 14:33:12', NULL, NULL, 0);
INSERT INTO `my_article` VALUES (18, '999999', '<p>传递给的风格和大风韩国队获得法国皇帝</p><p>风格和乳房更好的风格和环境规划</p>', 'iu皇后i但是佛i双方就送给i设计风格', 2, '/upload/3/3c80e64f5916448919622c38952966472.jpg', '0', '3', 0, '1', 3, '2022-07-15 14:42:59', NULL, NULL, 0);
INSERT INTO `my_article` VALUES (20, 'java字符串', '<p><span style=\"color: rgb(68, 68, 68); font-family: &quot;Helvetica Neue&quot;, 微软雅黑, &quot;Microsoft Yahei&quot;, Helvetica, Arial, sans-serif; font-size: 14px;\">字符串是&nbsp;</span><a href=\"http://c.biancheng.net/java/\" target=\"_blank\" style=\"border: none; color: rgb(0, 125, 187); font-family: &quot;Helvetica Neue&quot;, 微软雅黑, &quot;Microsoft Yahei&quot;, Helvetica, Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);\">Java</a><span style=\"color: rgb(68, 68, 68); font-family: &quot;Helvetica Neue&quot;, 微软雅黑, &quot;Microsoft Yahei&quot;, Helvetica, Arial, sans-serif; font-size: 14px;\">&nbsp;中特殊的类，使用方法像一般的基本数据类型，被广泛应用在 Java 编程中。Java 没有内置的字符串类型，而是在标准 Java 类库中提供了一个 String 类来创建和操作字符串。</span><br style=\"color: rgb(68, 68, 68); font-family: &quot;Helvetica Neue&quot;, 微软雅黑, &quot;Microsoft Yahei&quot;, Helvetica, Arial, sans-serif; font-size: 14px;\"/><br style=\"color: rgb(68, 68, 68); font-family: &quot;Helvetica Neue&quot;, 微软雅黑, &quot;Microsoft Yahei&quot;, Helvetica, Arial, sans-serif; font-size: 14px;\"/><span style=\"color: rgb(68, 68, 68); font-family: &quot;Helvetica Neue&quot;, 微软雅黑, &quot;Microsoft Yahei&quot;, Helvetica, Arial, sans-serif; font-size: 14px;\">在 Java 中定义一个字符串最简单的方法是用双引号把它包围起来。这种用双引号括起来的一串字符实际上都是 String 对象，如字符串“Hello”在编译后即成为 String 对象。因此也可以通过创建 String 类的实例来定义字符串。</span><br style=\"color: rgb(68, 68, 68); font-family: &quot;Helvetica Neue&quot;, 微软雅黑, &quot;Microsoft Yahei&quot;, Helvetica, Arial, sans-serif; font-size: 14px;\"/><br style=\"color: rgb(68, 68, 68); font-family: &quot;Helvetica Neue&quot;, 微软雅黑, &quot;Microsoft Yahei&quot;, Helvetica, Arial, sans-serif; font-size: 14px;\"/><span style=\"font-family: &quot;Helvetica Neue&quot;, 微软雅黑, &quot;Microsoft Yahei&quot;, Helvetica, Arial, sans-serif; font-size: 14px; color: rgb(178, 34, 34);\">不论使用哪种形式创建字符串，字符串对象一旦被创建，其值是不能改变的，但可以使用其他变量重新赋值的方式进行更改。</span><span style=\"color: rgb(68, 68, 68); font-family: &quot;Helvetica Neue&quot;, 微软雅黑, &quot;Microsoft Yahei&quot;, Helvetica, Arial, sans-serif; font-size: 14px;\"></span></p><p style=\"margin: 6px auto; padding: 10px; color: rgb(68, 68, 68); background-color: rgb(248, 248, 248); border: 1px solid rgb(225, 225, 225); border-radius: 4px; overflow-wrap: break-word; font-family: &quot;Helvetica Neue&quot;, 微软雅黑, &quot;Microsoft Yahei&quot;, Helvetica, Arial, sans-serif; font-size: 14px;\">注意：由于类和对象的的内容在第八章才会讲解，所以只要遇到类和对象的概念，知道如何操作就可以了，不需要明白为什么要这样使用。</p><h2 style=\"margin: 15px auto; line-height: 1.6; color: rgb(68, 68, 68); font-family: &quot;Helvetica Neue&quot;, 微软雅黑, &quot;Microsoft Yahei&quot;, Helvetica, Arial, sans-serif;\">直接定义字符串</h2><p><span style=\"font-family: &quot;Helvetica Neue&quot;, 微软雅黑, &quot;Microsoft Yahei&quot;, Helvetica, Arial, sans-serif; font-size: 14px; color: rgb(178, 34, 34);\">直接定义字符串是指使用双引号表示字符串中的内容</span><span style=\"color: rgb(68, 68, 68); font-family: &quot;Helvetica Neue&quot;, 微软雅黑, &quot;Microsoft Yahei&quot;, Helvetica, Arial, sans-serif; font-size: 14px;\">，例如“Hello Java”、“Java 编程”等。具体方法是用字符串常量直接初始化一个 String 对象，示例如下：</span></p><div style=\"color: rgb(68, 68, 68); font-family: &quot;Helvetica Neue&quot;, 微软雅黑, &quot;Microsoft Yahei&quot;, Helvetica, Arial, sans-serif; font-size: 14px;\"><div style=\"position: relative; margin: 5px auto; padding-top: 5px; padding-bottom: 5px; background-color: rgb(252, 252, 252); border: 1px solid rgb(221, 221, 221); border-radius: 3px;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; font-size: 14px; line-height: 1.6em; color: rgb(102, 102, 102); background: none; border-width: initial; border-style: none; border-color: initial; border-radius: 0px;\"><ol style=\"margin-top: 0px; margin-bottom: 0px; list-style-position: initial; list-style-image: initial; margin-left: 0px; padding-left: 20px; background: url(&quot;../images/code_bg.png&quot;) repeat-y; padding-top: 3px !important; padding-right: 8px !important; padding-bottom: 3px !important;\"><li style=\"padding-left: 8px; overflow-wrap: break-word; list-style: outside none decimal-leading-zero;\">String str <span style=\"color: rgb(48, 48, 238);\">=</span> <span style=\"color: rgb(24, 97, 167);\">\"Hello Java\"</span><span style=\"color: rgb(48, 48, 238);\">;</span></li></ol></pre><span style=\"background-color: rgb(255, 255, 255);\">或者</span><div style=\"background-color: rgb(255, 255, 255);\"><div style=\"position: relative; margin: 5px auto; padding-top: 5px; padding-bottom: 5px; background-color: rgb(252, 252, 252); border: 1px solid rgb(221, 221, 221); border-radius: 3px;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; font-size: 14px; line-height: 1.6em; color: rgb(102, 102, 102); background: none; border-width: initial; border-style: none; border-color: initial; border-radius: 0px;\"><ol style=\"margin-top: 0px; margin-bottom: 0px; list-style-position: initial; list-style-image: initial; margin-left: 0px; padding-left: 20px; background: url(&quot;../images/code_bg.png&quot;) repeat-y; padding-top: 3px !important; padding-right: 8px !important; padding-bottom: 3px !important;\"><li style=\"padding-left: 8px; overflow-wrap: break-word; list-style: outside none decimal-leading-zero;\">String str<span style=\"color: rgb(48, 48, 238);\">;</span></li><li style=\"padding-left: 8px; overflow-wrap: break-word; list-style: outside none decimal-leading-zero;\">str <span style=\"color: rgb(48, 48, 238);\">=</span> <span style=\"color: rgb(24, 97, 167);\">\"Hello Java\"</span><span style=\"color: rgb(48, 48, 238);\">;</span></li></ol></pre><br style=\"background-color: rgb(255, 255, 255);\"/><span style=\"background-color: rgb(255, 255, 255); color: rgb(178, 34, 34);\">注意：</span><span style=\"background-color: rgb(255, 255, 255); color: rgb(178, 34, 34);\">字符串变量必须经过初始化才能使用。</span><br style=\"background-color: rgb(255, 255, 255);\"/><h4 style=\"margin: 8px auto; font-size: 14px; line-height: 1.6; color: rgb(68, 68, 68); font-family: &quot;Helvetica Neue&quot;, 微软雅黑, &quot;Microsoft Yahei&quot;, Helvetica, Arial, sans-serif; background-color: rgb(255, 255, 255);\">例 1</h4><span style=\"background-color: rgb(255, 255, 255);\">下面的实例演示了直接创建字符串的几种用法。</span><div style=\"background-color: rgb(255, 255, 255);\"><div style=\"position: relative; margin: 5px auto; padding-top: 5px; padding-bottom: 5px; background-color: rgb(252, 252, 252); border: 1px solid rgb(221, 221, 221); border-radius: 3px;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; font-size: 14px; line-height: 1.6em; color: rgb(102, 102, 102); background: none; border-width: initial; border-style: none; border-color: initial; border-radius: 0px;\"><ol style=\"margin-top: 0px; margin-bottom: 0px; list-style-position: initial; list-style-image: initial; margin-left: 0px; padding-left: 20px; background: url(&quot;../images/code_bg.png&quot;) repeat-y; padding-top: 3px !important; padding-right: 8px !important; padding-bottom: 3px !important;\"><li style=\"padding-left: 8px; overflow-wrap: break-word; list-style: outside none decimal-leading-zero;\">String str <span style=\"color: rgb(48, 48, 238);\">=</span> <span style=\"color: rgb(24, 97, 167);\">\"我是一只小小鸟\"</span><span style=\"color: rgb(48, 48, 238);\">;</span> <span style=\"color: rgb(56, 173, 36);\">// 结果：我是一只小小鸟</span></li><li style=\"padding-left: 8px; overflow-wrap: break-word; list-style: outside none decimal-leading-zero;\">String word<span style=\"color: rgb(48, 48, 238);\">;</span></li><li style=\"padding-left: 8px; overflow-wrap: break-word; list-style: outside none decimal-leading-zero;\">word <span style=\"color: rgb(48, 48, 238);\">=</span> <span style=\"color: rgb(24, 97, 167);\">\"I am a bird\"</span><span style=\"color: rgb(48, 48, 238);\">;</span> <span style=\"color: rgb(56, 173, 36);\">// 结果：I am a bird</span></li><li style=\"padding-left: 8px; overflow-wrap: break-word; list-style: outside none decimal-leading-zero;\">word <span style=\"color: rgb(48, 48, 238);\">=</span> <span style=\"color: rgb(24, 97, 167);\">\"&lt;h1&gt;to fly&lt;/h1&gt;\"</span><span style=\"color: rgb(48, 48, 238);\">;</span> <span style=\"color: rgb(56, 173, 36);\">// 结果：&lt;h1&gt;to fly&lt;/h1&gt;</span></li><li style=\"padding-left: 8px; overflow-wrap: break-word; list-style: outside none decimal-leading-zero;\">word <span style=\"color: rgb(48, 48, 238);\">=</span> <span style=\"color: rgb(24, 97, 167);\">\"Let</span><span style=\"color: rgb(24, 97, 167);\">\\\'</span><span style=\"color: rgb(24, 97, 167);\">s say that it</span><span style=\"color: rgb(24, 97, 167);\">\\\'</span><span style=\"color: rgb(24, 97, 167);\">s true\"</span><span style=\"color: rgb(48, 48, 238);\">;</span> <span style=\"color: rgb(56, 173, 36);\">// 结果：Let\'s say that it\'s true</span></li><li style=\"padding-left: 8px; overflow-wrap: break-word; list-style: outside none decimal-leading-zero;\">System<span style=\"color: rgb(48, 48, 238);\">.</span>out<span style=\"color: rgb(48, 48, 238);\">.</span><span style=\"color: rgb(209, 28, 237);\">println</span><span style=\"color: rgb(48, 48, 238);\">(</span>word<span style=\"color: rgb(48, 48, 238);\">);</span></li><li style=\"padding-left: 8px; overflow-wrap: break-word; list-style: outside none decimal-leading-zero;\">word <span style=\"color: rgb(48, 48, 238);\">=</span> <span style=\"color: rgb(24, 97, 167);\">\"北京</span><span style=\"color: rgb(24, 97, 167);\">\\\\</span><span style=\"color: rgb(24, 97, 167);\">上海</span><span style=\"color: rgb(24, 97, 167);\">\\\\</span><span style=\"color: rgb(24, 97, 167);\">广州\"</span><span style=\"color: rgb(48, 48, 238);\">;</span> <span style=\"color: rgb(56, 173, 36);\">// 结果：北京\\上海\\广州</span></li></ol></pre><h2 style=\"margin: 15px auto; line-height: 1.6; color: rgb(68, 68, 68); font-family: &quot;Helvetica Neue&quot;, 微软雅黑, &quot;Microsoft Yahei&quot;, Helvetica, Arial, sans-serif; background-color: rgb(255, 255, 255);\">使用 String 类定义</h2><span style=\"background-color: rgb(255, 255, 255);\">前面我们提到在 Java 中每个双引号定义的字符串都是一个 String 类的对象。因此，可以通过使用 String 类的构造方法来创建字符串，该类位于 java.lang 包中（关于 Java 常用的包，教程后面会详细讲解）。</span><br style=\"background-color: rgb(255, 255, 255);\"/><br style=\"background-color: rgb(255, 255, 255);\"/><span style=\"background-color: rgb(255, 255, 255);\">String 类的构造方法有多种重载形式，每种形式都可以定义字符串。下面介绍最常用的几种形式。</span><p style=\"margin: 6px auto; padding: 10px; background-color: rgb(248, 248, 248); border: 1px solid rgb(225, 225, 225); border-radius: 4px; overflow-wrap: break-word; font-size: 14px;\">注意：具有和类名相同的名称，而且没有返回类型的方法称为构造方法。重载是指在一个类中定义多个同名的方法，但要求每个方法具有不同的参数的类型或参数的个数。教程后面会详细讲解，这里了解一下就可以。</p><h4 style=\"margin: 8px auto; font-size: 14px; line-height: 1.6; color: rgb(68, 68, 68); font-family: &quot;Helvetica Neue&quot;, 微软雅黑, &quot;Microsoft Yahei&quot;, Helvetica, Arial, sans-serif; background-color: rgb(255, 255, 255);\">1. String()</h4><span style=\"background-color: rgb(255, 255, 255);\">初始化一个新创建的 String 对象，表示一个空字符序列。</span><br style=\"background-color: rgb(255, 255, 255);\"/><h4 style=\"margin: 8px auto; font-size: 14px; line-height: 1.6; color: rgb(68, 68, 68); font-family: &quot;Helvetica Neue&quot;, 微软雅黑, &quot;Microsoft Yahei&quot;, Helvetica, Arial, sans-serif; background-color: rgb(255, 255, 255);\">2. String(String original)</h4><span style=\"background-color: rgb(255, 255, 255);\">初始化一个新创建的 String 对象，使其表示一个与参数相同的字符序列。换句话说，新创建的字符串是该参数字符串的副本。例如：</span><div style=\"background-color: rgb(255, 255, 255);\"><div style=\"position: relative; margin: 5px auto; padding-top: 5px; padding-bottom: 5px; background-color: rgb(252, 252, 252); border: 1px solid rgb(221, 221, 221); border-radius: 3px;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; font-size: 14px; line-height: 1.6em; color: rgb(102, 102, 102); background: none; border-width: initial; border-style: none; border-color: initial; border-radius: 0px;\"><ol style=\"margin-top: 0px; margin-bottom: 0px; list-style-position: initial; list-style-image: initial; margin-left: 0px; padding-left: 20px; background: url(&quot;../images/code_bg.png&quot;) repeat-y; padding-top: 3px !important; padding-right: 8px !important; padding-bottom: 3px !important;\"><li style=\"padding-left: 8px; overflow-wrap: break-word; list-style: outside none decimal-leading-zero;\">String str1 <span style=\"color: rgb(48, 48, 238);\">=</span> <span style=\"color: rgb(255, 48, 48); font-weight: bold;\">new</span> <span style=\"color: rgb(209, 28, 237);\">String</span><span style=\"color: rgb(48, 48, 238);\">(</span><span style=\"color: rgb(24, 97, 167);\">\"Hello Java\"</span><span style=\"color: rgb(48, 48, 238);\">);</span></li><li style=\"padding-left: 8px; overflow-wrap: break-word; list-style: outside none decimal-leading-zero;\">String str2 <span style=\"color: rgb(48, 48, 238);\">=</span> <span style=\"color: rgb(255, 48, 48); font-weight: bold;\">new</span> <span style=\"color: rgb(209, 28, 237);\">String</span><span style=\"color: rgb(48, 48, 238);\">(</span>str1<span style=\"color: rgb(48, 48, 238);\">);</span></li></ol></pre><span style=\"background-color: rgb(255, 255, 255);\">这里 str1 和 str2 的值是相等的。</span><br style=\"background-color: rgb(255, 255, 255);\"/><h4 style=\"margin: 8px auto; font-size: 14px; line-height: 1.6; color: rgb(68, 68, 68); font-family: &quot;Helvetica Neue&quot;, 微软雅黑, &quot;Microsoft Yahei&quot;, Helvetica, Arial, sans-serif; background-color: rgb(255, 255, 255);\">3. String(char[ ]value)</h4><span style=\"background-color: rgb(255, 255, 255);\">分配一个新的字符串，将参数中的字符数组元素全部变为字符串。该字符数组的内容已被复制，后续对字符数组的修改不会影响新创建的字符串。例如：</span><div style=\"background-color: rgb(255, 255, 255);\"><div style=\"position: relative; margin: 5px auto; padding-top: 5px; padding-bottom: 5px; background-color: rgb(252, 252, 252); border: 1px solid rgb(221, 221, 221); border-radius: 3px;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; font-size: 14px; line-height: 1.6em; color: rgb(102, 102, 102); background: none; border-width: initial; border-style: none; border-color: initial; border-radius: 0px;\"><ol style=\"margin-top: 0px; margin-bottom: 0px; list-style-position: initial; list-style-image: initial; margin-left: 0px; padding-left: 20px; background: url(&quot;../images/code_bg.png&quot;) repeat-y; padding-top: 3px !important; padding-right: 8px !important; padding-bottom: 3px !important;\"><li style=\"padding-left: 8px; overflow-wrap: break-word; list-style: outside none decimal-leading-zero;\"><span style=\"color: rgb(207, 149, 17);\">char</span> a<span style=\"color: rgb(48, 48, 238);\">[]</span> <span style=\"color: rgb(48, 48, 238);\">=</span> <span style=\"color: rgb(48, 48, 238);\">{</span><span style=\"color: rgb(24, 97, 167);\">\'H\'</span><span style=\"color: rgb(48, 48, 238);\">,</span><span style=\"color: rgb(24, 97, 167);\">\'e\'</span><span style=\"color: rgb(48, 48, 238);\">,</span><span style=\"color: rgb(24, 97, 167);\">\'l\'</span><span style=\"color: rgb(48, 48, 238);\">,</span><span style=\"color: rgb(24, 97, 167);\">\'l\'</span><span style=\"color: rgb(48, 48, 238);\">,</span><span style=\"color: rgb(24, 97, 167);\">\'0\'</span><span style=\"color: rgb(48, 48, 238);\">}</span><span style=\"color: rgb(48, 48, 238);\">;</span></li><li style=\"padding-left: 8px; overflow-wrap: break-word; list-style: outside none decimal-leading-zero;\">String sChar <span style=\"color: rgb(48, 48, 238);\">=</span> <span style=\"color: rgb(255, 48, 48); font-weight: bold;\">new</span> <span style=\"color: rgb(209, 28, 237);\">String</span><span style=\"color: rgb(48, 48, 238);\">(</span>a<span style=\"color: rgb(48, 48, 238);\">);</span></li><li style=\"padding-left: 8px; overflow-wrap: break-word; list-style: outside none decimal-leading-zero;\">a<span style=\"color: rgb(48, 48, 238);\">[</span><span style=\"color: rgb(50, 186, 6);\">1</span><span style=\"color: rgb(48, 48, 238);\">]</span> <span style=\"color: rgb(48, 48, 238);\">=</span> <span style=\"color: rgb(24, 97, 167);\">\'s\'</span><span style=\"color: rgb(48, 48, 238);\">;</span></li></ol></pre><span style=\"background-color: rgb(255, 255, 255);\">上述 sChar 变量的值是字符串“Hello”。 即使在创建字符串之后，对 a 数组中的第 2 个元素进行了修改，但未影响 sChar 的值。</span><p style=\"margin: 6px auto; padding: 10px; background-color: rgb(248, 248, 248); border: 1px solid rgb(225, 225, 225); border-radius: 4px; overflow-wrap: break-word; font-size: 14px;\">注意：如果你不知道数组是什么，可先阅读《<a href=\"http://c.biancheng.net/view/906.html\" target=\"_blank\" style=\"border: none; color: rgb(0, 125, 187);\">Java数组简介</a>》一节对数组大概了解之后再继续学习本节内容。</p><h4 style=\"margin: 8px auto; font-size: 14px; line-height: 1.6; color: rgb(68, 68, 68); font-family: &quot;Helvetica Neue&quot;, 微软雅黑, &quot;Microsoft Yahei&quot;, Helvetica, Arial, sans-serif; background-color: rgb(255, 255, 255);\">4. String(char[] value,int offset,int count)</h4><span style=\"background-color: rgb(255, 255, 255);\">分配一个新的 String，它包含来自该字符数组参数一个子数组的字符。offset 参数是子数组第一个字符的索引，count 参数指定子数组的长度。该子数组的内容已被赋值，后续对字符数组的修改不会影响新创建的字符串。例如：</span><div style=\"background-color: rgb(255, 255, 255);\"><div style=\"position: relative; margin: 5px auto; padding-top: 5px; padding-bottom: 5px; background-color: rgb(252, 252, 252); border: 1px solid rgb(221, 221, 221); border-radius: 3px;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; font-size: 14px; line-height: 1.6em; color: rgb(102, 102, 102); background: none; border-width: initial; border-style: none; border-color: initial; border-radius: 0px;\"><ol style=\"margin-top: 0px; margin-bottom: 0px; list-style-position: initial; list-style-image: initial; margin-left: 0px; padding-left: 20px; background: url(&quot;../images/code_bg.png&quot;) repeat-y; padding-top: 3px !important; padding-right: 8px !important; padding-bottom: 3px !important;\"><li style=\"padding-left: 8px; overflow-wrap: break-word; list-style: outside none decimal-leading-zero;\"><span style=\"color: rgb(207, 149, 17);\">char</span> a<span style=\"color: rgb(48, 48, 238);\">[]=</span><span style=\"color: rgb(48, 48, 238);\">{</span><span style=\"color: rgb(24, 97, 167);\">\'H\'</span><span style=\"color: rgb(48, 48, 238);\">,</span><span style=\"color: rgb(24, 97, 167);\">\'e\'</span><span style=\"color: rgb(48, 48, 238);\">,</span><span style=\"color: rgb(24, 97, 167);\">\'l\'</span><span style=\"color: rgb(48, 48, 238);\">,</span><span style=\"color: rgb(24, 97, 167);\">\'l\'</span><span style=\"color: rgb(48, 48, 238);\">,</span><span style=\"color: rgb(24, 97, 167);\">\'o\'</span><span style=\"color: rgb(48, 48, 238);\">}</span><span style=\"color: rgb(48, 48, 238);\">;</span></li><li style=\"padding-left: 8px; overflow-wrap: break-word; list-style: outside none decimal-leading-zero;\">String sChar<span style=\"color: rgb(48, 48, 238);\">=</span><span style=\"color: rgb(255, 48, 48); font-weight: bold;\">new</span> <span style=\"color: rgb(209, 28, 237);\">String</span><span style=\"color: rgb(48, 48, 238);\">(</span>a<span style=\"color: rgb(48, 48, 238);\">,</span><span style=\"color: rgb(50, 186, 6);\">1</span><span style=\"color: rgb(48, 48, 238);\">,</span><span style=\"color: rgb(50, 186, 6);\">4</span><span style=\"color: rgb(48, 48, 238);\">);</span></li><li style=\"padding-left: 8px; overflow-wrap: break-word; list-style: outside none decimal-leading-zero;\">a<span style=\"color: rgb(48, 48, 238);\">[</span><span style=\"color: rgb(50, 186, 6);\">1</span><span style=\"color: rgb(48, 48, 238);\">]=</span><span style=\"color: rgb(24, 97, 167);\">\'s\'</span><span style=\"color: rgb(48, 48, 238);\">;</span></li></ol></pre><span style=\"background-color: rgb(255, 255, 255);\">上述 sChar 变量的值是字符串“ello”。该构造方法使用字符数组中的部分连续元素来创建字符串对象。offset 参数指定起始索引值，count 指定截取元素的个数。创建字符串对象后，即使在后面修改了 a 数组中第 2 个元素的值，对 sChar 的值也没有任何影响。</span></div></div></div></div></div></div></div></div></div></div></div></div>', '字符串是 Java 中特殊的类，使用方法像一般的基本数据类型，被广泛应用在 Java 编程中。Java 没有内置的字符串类型，而是在标准 Java 类库中提供了一个 String 类来创建和操作字符串。', 1, '/upload/11/1100319febd8124b3d9b45ad9c8c4323ef.jpg', '0', '2', 1, '1', 11, '2022-07-18 03:51:42', NULL, NULL, 0);
INSERT INTO `my_article` VALUES (21, 'Java 变量类型', '<h1 style=\"border: 0px; margin-top: 0px; font-size: 2.1em; color: rgb(0, 0, 0); font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif;\">Java 变量类型</h1><p style=\"border: 0px; margin-top: 0px; margin-bottom: 0px; line-height: 2em; overflow-wrap: break-word; word-break: break-all; font-size: 13px; font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; color: rgb(51, 51, 51);\">在Java语言中，所有的变量在使用前必须声明。声明变量的基本格式如下：</p><div style=\"border: 1px solid rgb(212, 212, 212); margin-bottom: 5px; padding: 5px; width: 818.1px; color: rgb(0, 0, 0); background-color: rgb(229, 238, 204); background-image: linear-gradient(rgb(255, 255, 255), rgb(229, 238, 204) 100px); font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; font-size: 12px;\"><div style=\"border: 1px solid rgb(212, 212, 212); padding: 5px; line-height: 1.4em; width: 801.737px; background-color: rgb(255, 255, 255); font-size: 13.2px; font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; word-break: break-all; overflow-wrap: break-word;\"><div style=\"border: 0px; white-space: pre-wrap; word-break: break-all; overflow-wrap: break-word;\"><span style=\"border: 0px; color: rgb(0, 85, 170);\">type</span><span style=\"border: 0px; color: gray;\"> </span><span style=\"border: 0px; color: rgb(0, 85, 170);\">identifier</span><span style=\"border: 0px; color: gray;\"> </span><span style=\"border: 0px; color: olive;\">[</span><span style=\"border: 0px; color: gray;\"> = </span><span style=\"border: 0px; color: rgb(0, 85, 170);\">value</span><span style=\"border: 0px; color: olive;\">]</span><span style=\"border: 0px; color: olive;\">[</span><span style=\"border: 0px; color: gray;\">, </span><span style=\"border: 0px; color: rgb(0, 85, 170);\">identifier</span><span style=\"border: 0px; color: gray;\"> </span><span style=\"border: 0px; color: olive;\">[</span><span style=\"border: 0px; color: gray;\">= </span><span style=\"border: 0px; color: rgb(0, 85, 170);\">value</span><span style=\"border: 0px; color: olive;\">]</span><span style=\"border: 0px; color: gray;\"> ...</span><span style=\"border: 0px; color: olive;\">]</span><span style=\"border: 0px; color: gray;\"> ;</span><p style=\"border: 0px; margin-top: 0px; margin-bottom: 0px; line-height: 2em; overflow-wrap: break-word; word-break: break-all; font-size: 13px; font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; color: rgb(51, 51, 51); white-space: normal;\">格式说明：type为Java数据类型。identifier是变量名。可以使用逗号隔开来声明多个同类型变量。</p><p style=\"border: 0px; margin-top: 0px; margin-bottom: 0px; line-height: 2em; overflow-wrap: break-word; word-break: break-all; font-size: 13px; font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; color: rgb(51, 51, 51); white-space: normal;\">以下列出了一些变量的声明实例。注意有些包含了初始化过程。</p><div style=\"border: 1px solid rgb(212, 212, 212); margin-bottom: 5px; padding: 5px; width: 818.1px; background-color: rgb(229, 238, 204); background-image: linear-gradient(rgb(255, 255, 255), rgb(229, 238, 204) 100px); font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; font-size: 12px; white-space: normal;\"><div style=\"border: 1px solid rgb(212, 212, 212); padding: 5px; line-height: 1.4em; width: 801.737px; background-color: rgb(255, 255, 255); font-size: 13.2px; font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; word-break: break-all; overflow-wrap: break-word;\"><div style=\"border: 0px; white-space: pre-wrap; word-break: break-all; overflow-wrap: break-word;\"><span style=\"border: 0px;\">int</span><span style=\"border: 0px; color: gray;\"> </span><span style=\"border: 0px; color: rgb(0, 85, 170);\">a</span><span style=\"border: 0px; color: gray;\">, </span><span style=\"border: 0px; color: rgb(0, 85, 170);\">b</span><span style=\"border: 0px; color: gray;\">, </span><span style=\"border: 0px; color: rgb(0, 85, 170);\">c</span><span style=\"border: 0px; color: gray;\">;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style=\"border: 0px; color: rgb(170, 85, 0);\">//</span><span style=\"border: 0px; color: rgb(170, 85, 0);\"> 声明三个int型整数：a、 b、c</span><span style=\"border: 0px; color: rgb(170, 85, 0);\"></span><span style=\"border: 0px; color: gray;\">\n</span><span style=\"border: 0px;\">int</span><span style=\"border: 0px; color: gray;\"> </span><span style=\"border: 0px; color: rgb(0, 85, 170);\">d</span><span style=\"border: 0px; color: gray;\"> = </span><span style=\"border: 0px; color: maroon;\">3</span><span style=\"border: 0px; color: gray;\">, </span><span style=\"border: 0px; color: rgb(0, 85, 170);\">e</span><span style=\"border: 0px; color: gray;\"> = </span><span style=\"border: 0px; color: maroon;\">4</span><span style=\"border: 0px; color: gray;\">, </span><span style=\"border: 0px; color: rgb(0, 85, 170);\">f</span><span style=\"border: 0px; color: gray;\"> = </span><span style=\"border: 0px; color: maroon;\">5</span><span style=\"border: 0px; color: gray;\">; </span><span style=\"border: 0px; color: rgb(170, 85, 0);\">//</span><span style=\"border: 0px; color: rgb(170, 85, 0);\"> 声明三个整数并赋予初值</span><span style=\"border: 0px; color: rgb(170, 85, 0);\"></span><span style=\"border: 0px; color: gray;\">\n</span><span style=\"border: 0px;\">byte</span><span style=\"border: 0px; color: gray;\"> </span><span style=\"border: 0px; color: rgb(0, 85, 170);\">z</span><span style=\"border: 0px; color: gray;\"> = </span><span style=\"border: 0px; color: maroon;\">22</span><span style=\"border: 0px; color: gray;\">;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style=\"border: 0px; color: rgb(170, 85, 0);\">//</span><span style=\"border: 0px; color: rgb(170, 85, 0);\"> 声明并初始化 z</span><span style=\"border: 0px; color: rgb(170, 85, 0);\"></span><span style=\"border: 0px; color: gray;\">\n</span><span style=\"border: 0px; color: rgb(0, 85, 170);\">String</span><span style=\"border: 0px; color: gray;\"> </span><span style=\"border: 0px; color: rgb(0, 85, 170);\">s</span><span style=\"border: 0px; color: gray;\"> = </span><span style=\"border: 0px; color: rgb(139, 0, 0);\">\"</span><span style=\"border: 0px; color: rgb(170, 17, 17);\">runoob</span><span style=\"border: 0px; color: rgb(139, 0, 0);\">\"</span><span style=\"border: 0px; color: gray;\">;  </span><span style=\"border: 0px; color: rgb(170, 85, 0);\">//</span><span style=\"border: 0px; color: rgb(170, 85, 0);\"> 声明并初始化字符串 s</span><span style=\"border: 0px; color: rgb(170, 85, 0);\"></span><span style=\"border: 0px; color: gray;\">\n</span><span style=\"border: 0px;\">double</span><span style=\"border: 0px; color: gray;\"> </span><span style=\"border: 0px; color: rgb(0, 85, 170);\">pi</span><span style=\"border: 0px; color: gray;\"> = </span><span style=\"border: 0px; color: maroon;\">3</span><span style=\"border: 0px; color: maroon;\">.14159</span><span style=\"border: 0px; color: gray;\">; </span><span style=\"border: 0px; color: rgb(170, 85, 0);\">//</span><span style=\"border: 0px; color: rgb(170, 85, 0);\"> 声明了双精度浮点型变量 pi</span><span style=\"border: 0px; color: rgb(170, 85, 0);\"></span><span style=\"border: 0px; color: gray;\">\n</span><span style=\"border: 0px;\">char</span><span style=\"border: 0px; color: gray;\"> </span><span style=\"border: 0px; color: rgb(0, 85, 170);\">x</span><span style=\"border: 0px; color: gray;\"> = </span><span style=\"border: 0px; color: rgb(139, 0, 0);\">\'</span><span style=\"border: 0px; color: rgb(170, 17, 17);\">x</span><span style=\"border: 0px; color: rgb(139, 0, 0);\">\'</span><span style=\"border: 0px; color: gray;\">;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style=\"border: 0px; color: rgb(170, 85, 0);\">//</span><span style=\"border: 0px; color: rgb(170, 85, 0);\"> 声明变量 x 的值是字符 \'x\'。</span><span style=\"border: 0px; color: rgb(170, 85, 0);\"></span><p style=\"border: 0px; margin-top: 0px; margin-bottom: 0px; line-height: 2em; overflow-wrap: break-word; word-break: break-all; font-size: 13px; font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; color: rgb(51, 51, 51); white-space: normal;\">Java语言支持的变量类型有：</p><ul style=\"border: 0px; margin-top: 1em; margin-bottom: 1em; margin-left: 0px; line-height: 16.8px; list-style-type: none; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; font-size: 12px; white-space: normal;\"><li style=\"border: 0px; margin-bottom: 1em; margin-left: 1em; padding-left: 1.5em; line-height: 1.5em; font-size: 13px; word-break: break-all; background-image: url(&quot;./assets/img/bullet.png&quot;); background-repeat: no-repeat; background-position: left 0.5em;\">类变量：独立于方法之外的变量，用 static 修饰。</li><li style=\"border: 0px; margin-bottom: 1em; margin-left: 1em; padding-left: 1.5em; line-height: 1.5em; font-size: 13px; word-break: break-all; background-image: url(&quot;./assets/img/bullet.png&quot;); background-repeat: no-repeat; background-position: left 0.5em;\">实例变量：独立于方法之外的变量，不过没有 static 修饰。</li><li style=\"border: 0px; margin-bottom: 1em; margin-left: 1em; padding-left: 1.5em; line-height: 1.5em; font-size: 13px; word-break: break-all; background-image: url(&quot;./assets/img/bullet.png&quot;); background-repeat: no-repeat; background-position: left 0.5em;\">局部变量：类的方法中的变量。</li></ul><div style=\"border: 1px solid rgb(212, 212, 212); margin-bottom: 5px; padding: 5px; width: 818.1px; background-color: rgb(229, 238, 204); background-image: linear-gradient(rgb(255, 255, 255), rgb(229, 238, 204) 100px); font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; font-size: 12px; white-space: normal;\"><h2 style=\"border: 0px; margin-top: 0px; margin-bottom: 2px; font-size: 14.4px; line-height: 1.8em; color: rgb(97, 127, 16); background-color: transparent;\">实例</h2><div style=\"border: 1px solid rgb(212, 212, 212); padding: 5px; line-height: 1.4em; width: 801.737px; background-color: rgb(255, 255, 255); font-size: 13.2px; font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; word-break: break-all; overflow-wrap: break-word;\"><div style=\"border: 0px; white-space: pre-wrap; word-break: break-all; overflow-wrap: break-word;\"><span style=\"border: 0px; color: green;\">public</span><span style=\"border: 0px; color: gray;\"> </span><span style=\"border: 0px; color: green;\">class</span><span style=\"border: 0px; color: gray;\"> </span><span style=\"border: 0px; color: rgb(0, 85, 170);\">Variable</span><span style=\"border: 0px; color: olive;\">{</span><span style=\"border: 0px; color: gray;\">\n    </span><span style=\"border: 0px;\">static</span><span style=\"border: 0px; color: gray;\"> </span><span style=\"border: 0px;\">int</span><span style=\"border: 0px; color: gray;\"> </span><span style=\"border: 0px; color: rgb(0, 85, 170);\">allClicks</span><span style=\"border: 0px; color: gray;\">=</span><span style=\"border: 0px; color: maroon;\">0</span><span style=\"border: 0px; color: gray;\">;    </span><span style=\"border: 0px; color: rgb(170, 85, 0);\">//</span><span style=\"border: 0px; color: rgb(170, 85, 0);\"> 类变量</span><span style=\"border: 0px; color: rgb(170, 85, 0);\"></span><span style=\"border: 0px; color: gray;\">\n \n    </span><span style=\"border: 0px; color: rgb(0, 85, 170);\">String</span><span style=\"border: 0px; color: gray;\"> </span><span style=\"border: 0px; color: rgb(0, 85, 170);\">str</span><span style=\"border: 0px; color: gray;\">=</span><span style=\"border: 0px; color: rgb(139, 0, 0);\">\"</span><span style=\"border: 0px; color: rgb(170, 17, 17);\">hello world</span><span style=\"border: 0px; color: rgb(139, 0, 0);\">\"</span><span style=\"border: 0px; color: gray;\">;  </span><span style=\"border: 0px; color: rgb(170, 85, 0);\">//</span><span style=\"border: 0px; color: rgb(170, 85, 0);\"> 实例变量</span><span style=\"border: 0px; color: rgb(170, 85, 0);\"></span><span style=\"border: 0px; color: gray;\">\n \n    </span><span style=\"border: 0px; color: green;\">public</span><span style=\"border: 0px; color: gray;\"> </span><span style=\"border: 0px;\">void</span><span style=\"border: 0px; color: gray;\"> </span><span style=\"border: 0px; color: rgb(0, 85, 170);\">method</span><span style=\"border: 0px; color: olive;\">(</span><span style=\"border: 0px; color: olive;\">)</span><span style=\"border: 0px; color: olive;\">{</span><span style=\"border: 0px; color: gray;\">\n \n        </span><span style=\"border: 0px;\">int</span><span style=\"border: 0px; color: gray;\"> </span><span style=\"border: 0px; color: rgb(0, 85, 170);\">i</span><span style=\"border: 0px; color: gray;\"> =</span><span style=\"border: 0px; color: maroon;\">0</span><span style=\"border: 0px; color: gray;\">;  </span><span style=\"border: 0px; color: rgb(170, 85, 0);\">//</span><span style=\"border: 0px; color: rgb(170, 85, 0);\"> 局部变量</span><span style=\"border: 0px; color: rgb(170, 85, 0);\"></span><span style=\"border: 0px; color: gray;\">\n \n    </span><span style=\"border: 0px; color: olive;\">}</span><span style=\"border: 0px; color: gray;\">\n</span><span style=\"border: 0px; color: olive;\">}</span><hr style=\"background-color: rgb(212, 212, 212); color: rgb(212, 212, 212); height: 1px; border-top: 0px; clear: both; font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; font-size: 12px; white-space: normal;\"/><h2 style=\"border: 0px; margin-top: 2px; margin-bottom: 2px; font-size: 1.8em; line-height: 1.8em; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; white-space: normal;\">Java 局部变量</h2><ul style=\"border: 0px; margin-top: 1em; margin-bottom: 1em; margin-left: 0px; line-height: 16.8px; list-style-type: none; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; font-size: 12px; white-space: normal;\"><li style=\"border: 0px; margin-bottom: 1em; margin-left: 1em; padding-left: 1.5em; line-height: 1.5em; font-size: 13px; word-break: break-all; background-image: url(&quot;./assets/img/bullet.png&quot;); background-repeat: no-repeat; background-position: left 0.5em;\">局部变量声明在方法、构造方法或者语句块中；</li><li style=\"border: 0px; margin-bottom: 1em; margin-left: 1em; padding-left: 1.5em; line-height: 1.5em; font-size: 13px; word-break: break-all; background-image: url(&quot;./assets/img/bullet.png&quot;); background-repeat: no-repeat; background-position: left 0.5em;\">局部变量在方法、构造方法、或者语句块被执行的时候创建，当它们执行完成后，变量将会被销毁；</li><li style=\"border: 0px; margin-bottom: 1em; margin-left: 1em; padding-left: 1.5em; line-height: 1.5em; font-size: 13px; word-break: break-all; background-image: url(&quot;./assets/img/bullet.png&quot;); background-repeat: no-repeat; background-position: left 0.5em;\">访问修饰符不能用于局部变量；</li><li style=\"border: 0px; margin-bottom: 1em; margin-left: 1em; padding-left: 1.5em; line-height: 1.5em; font-size: 13px; word-break: break-all; background-image: url(&quot;./assets/img/bullet.png&quot;); background-repeat: no-repeat; background-position: left 0.5em;\">局部变量只在声明它的方法、构造方法或者语句块中可见；</li><li style=\"border: 0px; margin-bottom: 1em; margin-left: 1em; padding-left: 1.5em; line-height: 1.5em; font-size: 13px; word-break: break-all; background-image: url(&quot;./assets/img/bullet.png&quot;); background-repeat: no-repeat; background-position: left 0.5em;\">局部变量是在栈上分配的。</li><li style=\"border: 0px; margin-bottom: 1em; margin-left: 1em; padding-left: 1.5em; line-height: 1.5em; font-size: 13px; word-break: break-all; background-image: url(&quot;./assets/img/bullet.png&quot;); background-repeat: no-repeat; background-position: left 0.5em;\">局部变量没有默认值，所以局部变量被声明后，必须经过初始化，才可以使用。</li></ul><h3 style=\"border: 0px; margin-top: 8px; margin-bottom: 8px; font-size: 1.4em; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; white-space: normal;\">实例 1</h3><p style=\"border: 0px; margin-top: 0px; margin-bottom: 0px; line-height: 2em; overflow-wrap: break-word; word-break: break-all; font-size: 13px; font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; color: rgb(51, 51, 51); white-space: normal;\">在以下实例中age是一个局部变量。定义在pupAge()方法中，它的作用域就限制在这个方法中。</p><div style=\"border: 1px solid rgb(212, 212, 212); margin-bottom: 5px; padding: 5px; width: 818.1px; background-color: rgb(229, 238, 204); background-image: linear-gradient(rgb(255, 255, 255), rgb(229, 238, 204) 100px); font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; font-size: 12px; white-space: normal;\"><div style=\"border: 1px solid rgb(212, 212, 212); padding: 5px; line-height: 1.4em; width: 801.737px; background-color: rgb(255, 255, 255); font-size: 13.2px; font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; word-break: break-all; overflow-wrap: break-word;\"><div style=\"border: 0px; white-space: pre-wrap; word-break: break-all; overflow-wrap: break-word;\"><span style=\"border: 0px; color: green;\">package</span><span style=\"border: 0px; color: gray;\"> </span><span style=\"border: 0px; color: rgb(0, 85, 170);\">com</span><span style=\"border: 0px; color: gray;\">.</span><span style=\"border: 0px; color: rgb(0, 85, 170);\">runoob</span><span style=\"border: 0px; color: gray;\">.</span><span style=\"border: 0px; color: rgb(0, 85, 170);\">test</span><span style=\"border: 0px; color: gray;\">;\n \n</span><span style=\"border: 0px; color: green;\">public</span><span style=\"border: 0px; color: gray;\"> </span><span style=\"border: 0px; color: green;\">class</span><span style=\"border: 0px; color: gray;\"> </span><span style=\"border: 0px; color: rgb(0, 85, 170);\">Test</span><span style=\"border: 0px; color: olive;\">{</span><span style=\"border: 0px; color: gray;\"> \n   </span><span style=\"border: 0px; color: green;\">public</span><span style=\"border: 0px; color: gray;\"> </span><span style=\"border: 0px;\">void</span><span style=\"border: 0px; color: gray;\"> </span><span style=\"border: 0px; color: rgb(0, 85, 170);\">pupAge</span><span style=\"border: 0px; color: olive;\">(</span><span style=\"border: 0px; color: olive;\">)</span><span style=\"border: 0px; color: olive;\">{</span><span style=\"border: 0px; color: gray;\">\n      </span><span style=\"border: 0px;\">int</span><span style=\"border: 0px; color: gray;\"> </span><span style=\"border: 0px; color: rgb(0, 85, 170);\">age</span><span style=\"border: 0px; color: gray;\"> = </span><span style=\"border: 0px; color: maroon;\">0</span><span style=\"border: 0px; color: gray;\">;\n      </span><span style=\"border: 0px; color: rgb(0, 85, 170);\">age</span><span style=\"border: 0px; color: gray;\"> = </span><span style=\"border: 0px; color: rgb(0, 85, 170);\">age</span><span style=\"border: 0px; color: gray;\"> + </span><span style=\"border: 0px; color: maroon;\">7</span><span style=\"border: 0px; color: gray;\">;\n      </span><span style=\"border: 0px; color: rgb(0, 85, 170);\">System</span><span style=\"border: 0px; color: gray;\">.</span><span style=\"border: 0px; color: rgb(0, 85, 170);\">out</span><span style=\"border: 0px; color: gray;\">.</span><span style=\"border: 0px; color: rgb(0, 85, 170);\">println</span><span style=\"border: 0px; color: olive;\">(</span><span style=\"border: 0px; color: rgb(139, 0, 0);\">\"</span><span style=\"border: 0px; color: rgb(170, 17, 17);\">小狗的年龄是: </span><span style=\"border: 0px; color: rgb(139, 0, 0);\">\"</span><span style=\"border: 0px; color: gray;\"> + </span><span style=\"border: 0px; color: rgb(0, 85, 170);\">age</span><span style=\"border: 0px; color: olive;\">)</span><span style=\"border: 0px; color: gray;\">;\n   </span><span style=\"border: 0px; color: olive;\">}</span><span style=\"border: 0px; color: gray;\">\n   \n   </span><span style=\"border: 0px; color: green;\">public</span><span style=\"border: 0px; color: gray;\"> </span><span style=\"border: 0px;\">static</span><span style=\"border: 0px; color: gray;\"> </span><span style=\"border: 0px;\">void</span><span style=\"border: 0px; color: gray;\"> </span><span style=\"border: 0px; color: rgb(0, 85, 170);\">main</span><span style=\"border: 0px; color: olive;\">(</span><span style=\"border: 0px; color: rgb(0, 85, 170);\">String</span><span style=\"border: 0px; color: olive;\">[</span><span style=\"border: 0px; color: olive;\">]</span><span style=\"border: 0px; color: gray;\"> </span><span style=\"border: 0px; color: rgb(0, 85, 170);\">args</span><span style=\"border: 0px; color: olive;\">)</span><span style=\"border: 0px; color: olive;\">{</span><span style=\"border: 0px; color: gray;\">\n      </span><span style=\"border: 0px; color: rgb(0, 85, 170);\">Test</span><span style=\"border: 0px; color: gray;\"> </span><span style=\"border: 0px; color: rgb(0, 85, 170);\">test</span><span style=\"border: 0px; color: gray;\"> = </span><span style=\"border: 0px; color: green;\">new</span><span style=\"border: 0px; color: gray;\"> </span><span style=\"border: 0px; color: rgb(0, 85, 170);\">Test</span><span style=\"border: 0px; color: olive;\">(</span><span style=\"border: 0px; color: olive;\">)</span><span style=\"border: 0px; color: gray;\">;\n      </span><span style=\"border: 0px; color: rgb(0, 85, 170);\">test</span><span style=\"border: 0px; color: gray;\">.</span><span style=\"border: 0px; color: rgb(0, 85, 170);\">pupAge</span><span style=\"border: 0px; color: olive;\">(</span><span style=\"border: 0px; color: olive;\">)</span><span style=\"border: 0px; color: gray;\">;\n   </span><span style=\"border: 0px; color: olive;\">}</span><span style=\"border: 0px; color: gray;\">\n</span><span style=\"border: 0px; color: olive;\">}</span><p style=\"border: 0px; margin-top: 0px; margin-bottom: 0px; line-height: 2em; overflow-wrap: break-word; word-break: break-all; font-size: 13px; font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; color: rgb(51, 51, 51); white-space: normal;\">以上实例编译运行结果如下:</p><pre style=\"border-left-width: 4px; border-color: rgb(221, 221, 221); margin: 15px auto; padding: 10px 15px; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; line-height: 20px; font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; background: url(&quot;/images/codecolorer_bg.gif&quot;) center top rgb(251, 251, 251);\"><span style=\"border: 0px; color: rgb(102, 102, 0);\">小狗的年龄是:</span><span style=\"border: 0px; color: rgb(0, 0, 0);\"> </span><span style=\"border: 0px; color: rgb(0, 102, 102);\">7</span></pre><h3 style=\"border: 0px; margin-top: 8px; margin-bottom: 8px; font-size: 1.4em; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; white-space: normal;\">实例 2</h3><p style=\"border: 0px; margin-top: 0px; margin-bottom: 0px; line-height: 2em; overflow-wrap: break-word; word-break: break-all; font-size: 13px; font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; color: rgb(51, 51, 51); white-space: normal;\">在下面的例子中 age 变量没有初始化，所以在编译时会出错：</p><div style=\"border: 1px solid rgb(212, 212, 212); margin-bottom: 5px; padding: 5px; width: 818.1px; background-color: rgb(229, 238, 204); background-image: linear-gradient(rgb(255, 255, 255), rgb(229, 238, 204) 100px); font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; font-size: 12px; white-space: normal;\"><div style=\"border: 1px solid rgb(212, 212, 212); padding: 5px; line-height: 1.4em; width: 801.737px; background-color: rgb(255, 255, 255); font-size: 13.2px; font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; word-break: break-all; overflow-wrap: break-word;\"><div style=\"border: 0px; white-space: pre-wrap; word-break: break-all; overflow-wrap: break-word;\"><span style=\"border: 0px; color: green;\">package</span><span style=\"border: 0px; color: gray;\"> </span><span style=\"border: 0px; color: rgb(0, 85, 170);\">com</span><span style=\"border: 0px; color: gray;\">.</span><span style=\"border: 0px; color: rgb(0, 85, 170);\">runoob</span><span style=\"border: 0px; color: gray;\">.</span><span style=\"border: 0px; color: rgb(0, 85, 170);\">test</span><span style=\"border: 0px; color: gray;\">;\n \n</span><span style=\"border: 0px; color: green;\">public</span><span style=\"border: 0px; color: gray;\"> </span><span style=\"border: 0px; color: green;\">class</span><span style=\"border: 0px; color: gray;\"> </span><span style=\"border: 0px; color: rgb(0, 85, 170);\">Test</span><span style=\"border: 0px; color: olive;\">{</span><span style=\"border: 0px; color: gray;\"> \n   </span><span style=\"border: 0px; color: green;\">public</span><span style=\"border: 0px; color: gray;\"> </span><span style=\"border: 0px;\">void</span><span style=\"border: 0px; color: gray;\"> </span><span style=\"border: 0px; color: rgb(0, 85, 170);\">pupAge</span><span style=\"border: 0px; color: olive;\">(</span><span style=\"border: 0px; color: olive;\">)</span><span style=\"border: 0px; color: olive;\">{</span><span style=\"border: 0px; color: gray;\">\n      </span><span style=\"border: 0px;\">int</span><span style=\"border: 0px; color: gray;\"> </span><span style=\"border: 0px; color: rgb(0, 85, 170);\">age</span><span style=\"border: 0px; color: gray;\">;\n      </span><span style=\"border: 0px; color: rgb(0, 85, 170);\">age</span><span style=\"border: 0px; color: gray;\"> = </span><span style=\"border: 0px; color: rgb(0, 85, 170);\">age</span><span style=\"border: 0px; color: gray;\"> + </span><span style=\"border: 0px; color: maroon;\">7</span><span style=\"border: 0px; color: gray;\">;\n      </span><span style=\"border: 0px; color: rgb(0, 85, 170);\">System</span><span style=\"border: 0px; color: gray;\">.</span><span style=\"border: 0px; color: rgb(0, 85, 170);\">out</span><span style=\"border: 0px; color: gray;\">.</span><span style=\"border: 0px; color: rgb(0, 85, 170);\">println</span><span style=\"border: 0px; color: olive;\">(</span><span style=\"border: 0px; color: rgb(139, 0, 0);\">\"</span><span style=\"border: 0px; color: rgb(170, 17, 17);\">小狗的年龄是 : </span><span style=\"border: 0px; color: rgb(139, 0, 0);\">\"</span><span style=\"border: 0px; color: gray;\"> + </span><span style=\"border: 0px; color: rgb(0, 85, 170);\">age</span><span style=\"border: 0px; color: olive;\">)</span><span style=\"border: 0px; color: gray;\">;\n   </span><span style=\"border: 0px; color: olive;\">}</span><span style=\"border: 0px; color: gray;\">\n   \n   </span><span style=\"border: 0px; color: green;\">public</span><span style=\"border: 0px; color: gray;\"> </span><span style=\"border: 0px;\">static</span><span style=\"border: 0px; color: gray;\"> </span><span style=\"border: 0px;\">void</span><span style=\"border: 0px; color: gray;\"> </span><span style=\"border: 0px; color: rgb(0, 85, 170);\">main</span><span style=\"border: 0px; color: olive;\">(</span><span style=\"border: 0px; color: rgb(0, 85, 170);\">String</span><span style=\"border: 0px; color: olive;\">[</span><span style=\"border: 0px; color: olive;\">]</span><span style=\"border: 0px; color: gray;\"> </span><span style=\"border: 0px; color: rgb(0, 85, 170);\">args</span><span style=\"border: 0px; color: olive;\">)</span><span style=\"border: 0px; color: olive;\">{</span><span style=\"border: 0px; color: gray;\">\n      </span><span style=\"border: 0px; color: rgb(0, 85, 170);\">Test</span><span style=\"border: 0px; color: gray;\"> </span><span style=\"border: 0px; color: rgb(0, 85, 170);\">test</span><span style=\"border: 0px; color: gray;\"> = </span><span style=\"border: 0px; color: green;\">new</span><span style=\"border: 0px; color: gray;\"> </span><span style=\"border: 0px; color: rgb(0, 85, 170);\">Test</span><span style=\"border: 0px; color: olive;\">(</span><span style=\"border: 0px; color: olive;\">)</span><span style=\"border: 0px; color: gray;\">;\n      </span><span style=\"border: 0px; color: rgb(0, 85, 170);\">test</span><span style=\"border: 0px; color: gray;\">.</span><span style=\"border: 0px; color: rgb(0, 85, 170);\">pupAge</span><span style=\"border: 0px; color: olive;\">(</span><span style=\"border: 0px; color: olive;\">)</span><span style=\"border: 0px; color: gray;\">;\n   </span><span style=\"border: 0px; color: olive;\">}</span><span style=\"border: 0px; color: gray;\">\n</span><span style=\"border: 0px; color: olive;\">}</span><p style=\"border: 0px; margin-top: 0px; margin-bottom: 0px; line-height: 2em; overflow-wrap: break-word; word-break: break-all; font-size: 13px; font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; color: rgb(51, 51, 51); white-space: normal;\">以上实例编译运行结果如下:</p><pre style=\"border-left-width: 4px; border-color: rgb(221, 221, 221); margin: 15px auto; padding: 10px 15px; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; line-height: 20px; font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; background: url(&quot;/images/codecolorer_bg.gif&quot;) center top rgb(251, 251, 251);\"><span style=\"border: 0px; color: rgb(102, 0, 102);\">Test</span><span style=\"border: 0px; color: rgb(102, 102, 0);\">.</span><span style=\"border: 0px; color: rgb(0, 0, 0);\">java</span><span style=\"border: 0px; color: rgb(102, 102, 0);\">:</span><span style=\"border: 0px; color: rgb(0, 102, 102);\">4</span><span style=\"border: 0px; color: rgb(102, 102, 0);\">:</span><span style=\"border: 0px; color: rgb(0, 0, 0);\">variable number might </span><span style=\"border: 0px; color: rgb(0, 0, 136);\">not</span><span style=\"border: 0px; color: rgb(0, 0, 0);\"> have been initialized\nage </span><span style=\"border: 0px; color: rgb(102, 102, 0);\">=</span><span style=\"border: 0px; color: rgb(0, 0, 0);\"> age </span><span style=\"border: 0px; color: rgb(102, 102, 0);\">+</span><span style=\"border: 0px; color: rgb(0, 0, 0);\"> </span><span style=\"border: 0px; color: rgb(0, 102, 102);\">7</span><span style=\"border: 0px; color: rgb(102, 102, 0);\">;</span><span style=\"border: 0px; color: rgb(0, 0, 0);\">\n         </span><span style=\"border: 0px; color: rgb(102, 102, 0);\">^</span><span style=\"border: 0px; color: rgb(0, 0, 0);\">\n</span><span style=\"border: 0px; color: rgb(0, 102, 102);\">1</span><span style=\"border: 0px; color: rgb(0, 0, 0);\"> error</span></pre><hr style=\"background-color: rgb(212, 212, 212); color: rgb(212, 212, 212); height: 1px; border-top: 0px; clear: both; font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; font-size: 12px; white-space: normal;\"/><h2 style=\"border: 0px; margin-top: 2px; margin-bottom: 2px; font-size: 1.8em; line-height: 1.8em; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; white-space: normal;\">实例变量</h2><ul style=\"border: 0px; margin-top: 1em; margin-bottom: 1em; margin-left: 0px; line-height: 16.8px; list-style-type: none; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; font-size: 12px; white-space: normal;\"><li style=\"border: 0px; margin-bottom: 1em; margin-left: 1em; padding-left: 1.5em; line-height: 1.5em; font-size: 13px; word-break: break-all; background-image: url(&quot;./assets/img/bullet.png&quot;); background-repeat: no-repeat; background-position: left 0.5em;\">实例变量声明在一个类中，但在方法、构造方法和语句块之外；</li><li style=\"border: 0px; margin-bottom: 1em; margin-left: 1em; padding-left: 1.5em; line-height: 1.5em; font-size: 13px; word-break: break-all; background-image: url(&quot;./assets/img/bullet.png&quot;); background-repeat: no-repeat; background-position: left 0.5em;\">当一个对象被实例化之后，每个实例变量的值就跟着确定；</li><li style=\"border: 0px; margin-bottom: 1em; margin-left: 1em; padding-left: 1.5em; line-height: 1.5em; font-size: 13px; word-break: break-all; background-image: url(&quot;./assets/img/bullet.png&quot;); background-repeat: no-repeat; background-position: left 0.5em;\">实例变量在对象创建的时候创建，在对象被销毁的时候销毁；</li><li style=\"border: 0px; margin-bottom: 1em; margin-left: 1em; padding-left: 1.5em; line-height: 1.5em; font-size: 13px; word-break: break-all; background-image: url(&quot;./assets/img/bullet.png&quot;); background-repeat: no-repeat; background-position: left 0.5em;\">实例变量的值应该至少被一个方法、构造方法或者语句块引用，使得外部能够通过这些方式获取实例变量信息；</li><li style=\"border: 0px; margin-bottom: 1em; margin-left: 1em; padding-left: 1.5em; line-height: 1.5em; font-size: 13px; word-break: break-all; background-image: url(&quot;./assets/img/bullet.png&quot;); background-repeat: no-repeat; background-position: left 0.5em;\">实例变量可以声明在使用前或者使用后；</li><li style=\"border: 0px; margin-bottom: 1em; margin-left: 1em; padding-left: 1.5em; line-height: 1.5em; font-size: 13px; word-break: break-all; background-image: url(&quot;./assets/img/bullet.png&quot;); background-repeat: no-repeat; background-position: left 0.5em;\">访问修饰符可以修饰实例变量；</li><li style=\"border: 0px; margin-bottom: 1em; margin-left: 1em; padding-left: 1.5em; line-height: 1.5em; font-size: 13px; word-break: break-all; background-image: url(&quot;./assets/img/bullet.png&quot;); background-repeat: no-repeat; background-position: left 0.5em;\">实例变量对于类中的方法、构造方法或者语句块是可见的。一般情况下应该把实例变量设为私有。通过使用访问修饰符可以使实例变量对子类可见；</li><li style=\"border: 0px; margin-bottom: 1em; margin-left: 1em; padding-left: 1.5em; line-height: 1.5em; font-size: 13px; word-break: break-all; background-image: url(&quot;./assets/img/bullet.png&quot;); background-repeat: no-repeat; background-position: left 0.5em;\">实例变量具有默认值。数值型变量的默认值是0，布尔型变量的默认值是false，引用类型变量的默认值是null。变量的值可以在声明时指定，也可以在构造方法中指定；</li><li style=\"border: 0px; margin-bottom: 1em; margin-left: 1em; padding-left: 1.5em; line-height: 1.5em; font-size: 13px; word-break: break-all; background-image: url(&quot;./assets/img/bullet.png&quot;); background-repeat: no-repeat; background-position: left 0.5em;\">实例变量可以直接通过变量名访问。但在静态方法以及其他类中，就应该使用完全限定名：ObjectReference.VariableName。</li></ul><h3 style=\"border: 0px; margin-top: 8px; margin-bottom: 8px; font-size: 1.4em; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; white-space: normal;\">实例</h3><div style=\"border: 1px solid rgb(212, 212, 212); margin-bottom: 5px; padding: 5px; width: 818.1px; background-color: rgb(229, 238, 204); background-image: linear-gradient(rgb(255, 255, 255), rgb(229, 238, 204) 100px); font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; font-size: 12px; white-space: normal;\"><h2 style=\"border: 0px; margin-top: 0px; margin-bottom: 2px; font-size: 14.4px; line-height: 1.8em; color: rgb(97, 127, 16); background-color: transparent;\">Employee.java 文件代码：</h2><div style=\"border: 1px solid rgb(212, 212, 212); padding: 5px; line-height: 1.4em; width: 801.737px; background-color: rgb(255, 255, 255); font-size: 13.2px; font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; word-break: break-all; overflow-wrap: break-word;\"><div style=\"border: 0px; white-space: pre-wrap; word-break: break-all; overflow-wrap: break-word;\"><span style=\"border: 0px; color: green;\">import</span><span style=\"border: 0px; color: gray;\"> </span><span style=\"border: 0px; color: rgb(0, 85, 170);\">java</span><span style=\"border: 0px; color: gray;\">.</span><span style=\"border: 0px; color: rgb(0, 85, 170);\">io</span><span style=\"border: 0px; color: gray;\">.*;\n</span><span style=\"border: 0px; color: green;\">public</span><span style=\"border: 0px; color: gray;\"> </span><span style=\"border: 0px; color: green;\">class</span><span style=\"border: 0px; color: gray;\"> </span><span style=\"border: 0px; color: rgb(0, 85, 170);\">Employee</span><span style=\"border: 0px; color: olive;\">{</span><span style=\"border: 0px; color: gray;\">\n   </span><span style=\"border: 0px; color: rgb(170, 85, 0);\">//</span><span style=\"border: 0px; color: rgb(170, 85, 0);\"> 这个实例变量对子类可见</span><span style=\"border: 0px; color: rgb(170, 85, 0);\"></span><span style=\"border: 0px; color: gray;\">\n   </span><span style=\"border: 0px; color: green;\">public</span><span style=\"border: 0px; color: gray;\"> </span><span style=\"border: 0px; color: rgb(0, 85, 170);\">String</span><span style=\"border: 0px; color: gray;\"> </span><span style=\"border: 0px; color: rgb(0, 85, 170);\">name</span><span style=\"border: 0px; color: gray;\">;\n   </span><span style=\"border: 0px; color: rgb(170, 85, 0);\">//</span><span style=\"border: 0px; color: rgb(170, 85, 0);\"> 私有变量，仅在该类可见</span><span style=\"border: 0px; color: rgb(170, 85, 0);\"></span><span style=\"border: 0px; color: gray;\">\n   </span><span style=\"border: 0px; color: green;\">private</span><span style=\"border: 0px; color: gray;\"> </span><span style=\"border: 0px;\">double</span><span style=\"border: 0px; color: gray;\"> </span><span style=\"border: 0px; color: rgb(0, 85, 170);\">salary</span><span style=\"border: 0px; color: gray;\">;\n   </span><span style=\"border: 0px; color: rgb(170, 85, 0);\">//</span><span style=\"border: 0px; color: rgb(170, 85, 0);\">在构造器中对name赋值</span><span style=\"border: 0px; color: rgb(170, 85, 0);\"></span><span style=\"border: 0px; color: gray;\">\n   </span><span style=\"border: 0px; color: green;\">public</span><span style=\"border: 0px; color: gray;\"> </span><span style=\"border: 0px; color: rgb(0, 85, 170);\">Employee</span><span style=\"border: 0px; color: gray;\"> </span><span style=\"border: 0px; color: olive;\">(</span><span style=\"border: 0px; color: rgb(0, 85, 170);\">String</span><span style=\"border: 0px; color: gray;\"> </span><span style=\"border: 0px; color: rgb(0, 85, 170);\">empName</span><span style=\"border: 0px; color: olive;\">)</span><span style=\"border: 0px; color: olive;\">{</span><span style=\"border: 0px; color: gray;\">\n      </span><span style=\"border: 0px; color: rgb(0, 85, 170);\">name</span><span style=\"border: 0px; color: gray;\"> = </span><span style=\"border: 0px; color: rgb(0, 85, 170);\">empName</span><span style=\"border: 0px; color: gray;\">;\n   </span><span style=\"border: 0px; color: olive;\">}</span><span style=\"border: 0px; color: gray;\">\n   </span><span style=\"border: 0px; color: rgb(170, 85, 0);\">//</span><span style=\"border: 0px; color: rgb(170, 85, 0);\">设定salary的值</span><span style=\"border: 0px; color: rgb(170, 85, 0);\"></span><span style=\"border: 0px; color: gray;\">\n   </span><span style=\"border: 0px; color: green;\">public</span><span style=\"border: 0px; color: gray;\"> </span><span style=\"border: 0px;\">void</span><span style=\"border: 0px; color: gray;\"> </span><span style=\"border: 0px; color: rgb(0, 85, 170);\">setSalary</span><span style=\"border: 0px; color: olive;\">(</span><span style=\"border: 0px;\">double</span><span style=\"border: 0px; color: gray;\"> </span><span style=\"border: 0px; color: rgb(0, 85, 170);\">empSal</span><span style=\"border: 0px; color: olive;\">)</span><span style=\"border: 0px; color: olive;\">{</span><span style=\"border: 0px; color: gray;\">\n      </span><span style=\"border: 0px; color: rgb(0, 85, 170);\">salary</span><span style=\"border: 0px; color: gray;\"> = </span><span style=\"border: 0px; color: rgb(0, 85, 170);\">empSal</span><span style=\"border: 0px; color: gray;\">;\n   </span><span style=\"border: 0px; color: olive;\">}</span><span style=\"border: 0px; color: gray;\">  \n   </span><span style=\"border: 0px; color: rgb(170, 85, 0);\">//</span><span style=\"border: 0px; color: rgb(170, 85, 0);\"> 打印信息</span><span style=\"border: 0px; color: rgb(170, 85, 0);\"></span><span style=\"border: 0px; color: gray;\">\n   </span><span style=\"border: 0px; color: green;\">public</span><span style=\"border: 0px; color: gray;\"> </span><span style=\"border: 0px;\">void</span><span style=\"border: 0px; color: gray;\"> </span><span style=\"border: 0px; color: rgb(0, 85, 170);\">printEmp</span><span style=\"border: 0px; color: olive;\">(</span><span style=\"border: 0px; color: olive;\">)</span><span style=\"border: 0px; color: olive;\">{</span><span style=\"border: 0px; color: gray;\">\n      </span><span style=\"border: 0px; color: rgb(0, 85, 170);\">System</span><span style=\"border: 0px; color: gray;\">.</span><span style=\"border: 0px; color: rgb(0, 85, 170);\">out</span><span style=\"border: 0px; color: gray;\">.</span><span style=\"border: 0px; color: rgb(0, 85, 170);\">println</span><span style=\"border: 0px; color: olive;\">(</span><span style=\"border: 0px; color: rgb(139, 0, 0);\">\"</span><span style=\"border: 0px; color: rgb(170, 17, 17);\">名字 : </span><span style=\"border: 0px; color: rgb(139, 0, 0);\">\"</span><span style=\"border: 0px; color: gray;\"> + </span><span style=\"border: 0px; color: rgb(0, 85, 170);\">name</span><span style=\"border: 0px; color: gray;\"> </span><span style=\"border: 0px; color: olive;\">)</span><span style=\"border: 0px; color: gray;\">;\n      </span><span style=\"border: 0px; color: rgb(0, 85, 170);\">System</span><span style=\"border: 0px; color: gray;\">.</span><span style=\"border: 0px; color: rgb(0, 85, 170);\">out</span><span style=\"border: 0px; color: gray;\">.</span><span style=\"border: 0px; color: rgb(0, 85, 170);\">println</span><span style=\"border: 0px; color: olive;\">(</span><span style=\"border: 0px; color: rgb(139, 0, 0);\">\"</span><span style=\"border: 0px; color: rgb(170, 17, 17);\">薪水 : </span><span style=\"border: 0px; color: rgb(139, 0, 0);\">\"</span><span style=\"border: 0px; color: gray;\"> + </span><span style=\"border: 0px; color: rgb(0, 85, 170);\">salary</span><span style=\"border: 0px; color: olive;\">)</span><span style=\"border: 0px; color: gray;\">;\n   </span><span style=\"border: 0px; color: olive;\">}</span><span style=\"border: 0px; color: gray;\">\n \n   </span><span style=\"border: 0px; color: green;\">public</span><span style=\"border: 0px; color: gray;\"> </span><span style=\"border: 0px;\">static</span><span style=\"border: 0px; color: gray;\"> </span><span style=\"border: 0px;\">void</span><span style=\"border: 0px; color: gray;\"> </span><span style=\"border: 0px; color: rgb(0, 85, 170);\">main</span><span style=\"border: 0px; color: olive;\">(</span><span style=\"border: 0px; color: rgb(0, 85, 170);\">String</span><span style=\"border: 0px; color: olive;\">[</span><span style=\"border: 0px; color: olive;\">]</span><span style=\"border: 0px; color: gray;\"> </span><span style=\"border: 0px; color: rgb(0, 85, 170);\">args</span><span style=\"border: 0px; color: olive;\">)</span><span style=\"border: 0px; color: olive;\">{</span><span style=\"border: 0px; color: gray;\">\n      </span><span style=\"border: 0px; color: rgb(0, 85, 170);\">Employee</span><span style=\"border: 0px; color: gray;\"> </span><span style=\"border: 0px; color: rgb(0, 85, 170);\">empOne</span><span style=\"border: 0px; color: gray;\"> = </span><span style=\"border: 0px; color: green;\">new</span><span style=\"border: 0px; color: gray;\"> </span><span style=\"border: 0px; color: rgb(0, 85, 170);\">Employee</span><span style=\"border: 0px; color: olive;\">(</span><span style=\"border: 0px; color: rgb(139, 0, 0);\">\"</span><span style=\"border: 0px; color: rgb(170, 17, 17);\">RUNOOB</span><span style=\"border: 0px; color: rgb(139, 0, 0);\">\"</span><span style=\"border: 0px; color: olive;\">)</span><span style=\"border: 0px; color: gray;\">;\n      </span><span style=\"border: 0px; color: rgb(0, 85, 170);\">empOne</span><span style=\"border: 0px; color: gray;\">.</span><span style=\"border: 0px; color: rgb(0, 85, 170);\">setSalary</span><span style=\"border: 0px; color: olive;\">(</span><span style=\"border: 0px; color: maroon;\">1000</span><span style=\"border: 0px; color: maroon;\">.0</span><span style=\"border: 0px; color: olive;\">)</span><span style=\"border: 0px; color: gray;\">;\n      </span><span style=\"border: 0px; color: rgb(0, 85, 170);\">empOne</span><span style=\"border: 0px; color: gray;\">.</span><span style=\"border: 0px; color: rgb(0, 85, 170);\">printEmp</span><span style=\"border: 0px; color: olive;\">(</span><span style=\"border: 0px; color: olive;\">)</span><span style=\"border: 0px; color: gray;\">;\n   </span><span style=\"border: 0px; color: olive;\">}</span><span style=\"border: 0px; color: gray;\">\n</span><span style=\"border: 0px; color: olive;\">}</span><p style=\"border: 0px; margin-top: 0px; margin-bottom: 0px; line-height: 2em; overflow-wrap: break-word; word-break: break-all; font-size: 13px; font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; color: rgb(51, 51, 51); white-space: normal;\">以上实例编译运行结果如下:</p><pre style=\"border-left-width: 4px; border-color: rgb(221, 221, 221); margin: 15px auto; padding: 10px 15px; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; line-height: 20px; font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; background: url(&quot;/images/codecolorer_bg.gif&quot;) center top rgb(251, 251, 251);\"><span style=\"border: 0px; color: rgb(0, 0, 0);\">$ javac </span><span style=\"border: 0px; color: rgb(102, 0, 102);\">Employee</span><span style=\"border: 0px; color: rgb(102, 102, 0);\">.</span><span style=\"border: 0px; color: rgb(0, 0, 0);\">java \n$ java </span><span style=\"border: 0px; color: rgb(102, 0, 102);\">Employee</span><span style=\"border: 0px; color: rgb(0, 0, 0);\">\n</span><span style=\"border: 0px; color: rgb(102, 102, 0);\">名字</span><span style=\"border: 0px; color: rgb(0, 0, 0);\"> </span><span style=\"border: 0px; color: rgb(102, 102, 0);\">:</span><span style=\"border: 0px; color: rgb(0, 0, 0);\"> RUNOOB\n</span><span style=\"border: 0px; color: rgb(102, 102, 0);\">薪水</span><span style=\"border: 0px; color: rgb(0, 0, 0);\"> </span><span style=\"border: 0px; color: rgb(102, 102, 0);\">:</span><span style=\"border: 0px; color: rgb(0, 0, 0);\"> </span><span style=\"border: 0px; color: rgb(0, 102, 102);\">1000.0</span></pre><hr style=\"background-color: rgb(212, 212, 212); color: rgb(212, 212, 212); height: 1px; border-top: 0px; clear: both; font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; font-size: 12px; white-space: normal;\"/><h2 style=\"border: 0px; margin-top: 2px; margin-bottom: 2px; font-size: 1.8em; line-height: 1.8em; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; white-space: normal;\">类变量（静态变量）</h2><ul style=\"border: 0px; margin-top: 1em; margin-bottom: 1em; margin-left: 0px; line-height: 16.8px; list-style-type: none; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; font-size: 12px; white-space: normal;\"><li style=\"border: 0px; margin-bottom: 1em; margin-left: 1em; padding-left: 1.5em; line-height: 1.5em; font-size: 13px; word-break: break-all; background-image: url(&quot;./assets/img/bullet.png&quot;); background-repeat: no-repeat; background-position: left 0.5em;\">类变量也称为静态变量，在类中以 static 关键字声明，但必须在方法之外。</li><li style=\"border: 0px; margin-bottom: 1em; margin-left: 1em; padding-left: 1.5em; line-height: 1.5em; font-size: 13px; word-break: break-all; background-image: url(&quot;./assets/img/bullet.png&quot;); background-repeat: no-repeat; background-position: left 0.5em;\">无论一个类创建了多少个对象，类只拥有类变量的一份拷贝。</li><li style=\"border: 0px; margin-bottom: 1em; margin-left: 1em; padding-left: 1.5em; line-height: 1.5em; font-size: 13px; word-break: break-all; background-image: url(&quot;./assets/img/bullet.png&quot;); background-repeat: no-repeat; background-position: left 0.5em;\">静态变量除了被声明为常量外很少使用，静态变量是指声明为 public/private，final 和 static 类型的变量。静态变量初始化后不可改变。</li><li style=\"border: 0px; margin-bottom: 1em; margin-left: 1em; padding-left: 1.5em; line-height: 1.5em; font-size: 13px; word-break: break-all; background-image: url(&quot;./assets/img/bullet.png&quot;); background-repeat: no-repeat; background-position: left 0.5em;\">静态变量储存在静态存储区。经常被声明为常量，很少单独使用 static 声明变量。</li><li style=\"border: 0px; margin-bottom: 1em; margin-left: 1em; padding-left: 1.5em; line-height: 1.5em; font-size: 13px; word-break: break-all; background-image: url(&quot;./assets/img/bullet.png&quot;); background-repeat: no-repeat; background-position: left 0.5em;\">静态变量在第一次被访问时创建，在程序结束时销毁。</li><li style=\"border: 0px; margin-bottom: 1em; margin-left: 1em; padding-left: 1.5em; line-height: 1.5em; font-size: 13px; word-break: break-all; background-image: url(&quot;./assets/img/bullet.png&quot;); background-repeat: no-repeat; background-position: left 0.5em;\">与实例变量具有相似的可见性。但为了对类的使用者可见，大多数静态变量声明为 public 类型。</li><li style=\"border: 0px; margin-bottom: 1em; margin-left: 1em; padding-left: 1.5em; line-height: 1.5em; font-size: 13px; word-break: break-all; background-image: url(&quot;./assets/img/bullet.png&quot;); background-repeat: no-repeat; background-position: left 0.5em;\">默认值和实例变量相似。数值型变量默认值是 0，布尔型默认值是 false，引用类型默认值是 null。变量的值可以在声明的时候指定，也可以在构造方法中指定。此外，静态变量还可以在静态语句块中初始化。</li><li style=\"border: 0px; margin-bottom: 1em; margin-left: 1em; padding-left: 1.5em; line-height: 1.5em; font-size: 13px; word-break: break-all; background-image: url(&quot;./assets/img/bullet.png&quot;); background-repeat: no-repeat; background-position: left 0.5em;\">静态变量可以通过：<em style=\"border: 0px;\">ClassName.VariableName</em>的方式访问。</li><li style=\"border: 0px; margin-bottom: 1em; margin-left: 1em; padding-left: 1.5em; line-height: 1.5em; font-size: 13px; word-break: break-all; background-image: url(&quot;./assets/img/bullet.png&quot;); background-repeat: no-repeat; background-position: left 0.5em;\">类变量被声明为 public static final 类型时，类变量名称一般建议使用大写字母。如果静态变量不是 public 和 final 类型，其命名方式与实例变量以及局部变量的命名方式一致。</li></ul><p style=\"border: 0px; margin-top: 0px; margin-bottom: 0px; line-height: 2em; overflow-wrap: break-word; word-break: break-all; font-size: 13px; font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; color: rgb(51, 51, 51); white-space: normal;\">实例：</p><div style=\"border: 1px solid rgb(212, 212, 212); margin-bottom: 5px; padding: 5px; width: 818.1px; background-color: rgb(229, 238, 204); background-image: linear-gradient(rgb(255, 255, 255), rgb(229, 238, 204) 100px); font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; font-size: 12px; white-space: normal;\"><h2 style=\"border: 0px; margin-top: 0px; margin-bottom: 2px; font-size: 14.4px; line-height: 1.8em; color: rgb(97, 127, 16); background-color: transparent;\">Employee.java 文件代码：</h2><div style=\"border: 1px solid rgb(212, 212, 212); padding: 5px; line-height: 1.4em; width: 801.737px; background-color: rgb(255, 255, 255); font-size: 13.2px; font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; word-break: break-all; overflow-wrap: break-word;\"><div style=\"border: 0px; white-space: pre-wrap; word-break: break-all; overflow-wrap: break-word;\"><span style=\"border: 0px; color: green;\">import</span><span style=\"border: 0px; color: gray;\"> </span><span style=\"border: 0px; color: rgb(0, 85, 170);\">java</span><span style=\"border: 0px; color: gray;\">.</span><span style=\"border: 0px; color: rgb(0, 85, 170);\">io</span><span style=\"border: 0px; color: gray;\">.*;\n \n</span><span style=\"border: 0px; color: green;\">public</span><span style=\"border: 0px; color: gray;\"> </span><span style=\"border: 0px; color: green;\">class</span><span style=\"border: 0px; color: gray;\"> </span><span style=\"border: 0px; color: rgb(0, 85, 170);\">Employee</span><span style=\"border: 0px; color: gray;\"> </span><span style=\"border: 0px; color: olive;\">{</span><span style=\"border: 0px; color: gray;\">\n    </span><span style=\"border: 0px; color: rgb(170, 85, 0);\">//</span><span style=\"border: 0px; color: rgb(170, 85, 0);\">salary是静态的私有变量</span><span style=\"border: 0px; color: rgb(170, 85, 0);\"></span><span style=\"border: 0px; color: gray;\">\n    </span><span style=\"border: 0px; color: green;\">private</span><span style=\"border: 0px; color: gray;\"> </span><span style=\"border: 0px;\">static</span><span style=\"border: 0px; color: gray;\"> </span><span style=\"border: 0px;\">double</span><span style=\"border: 0px; color: gray;\"> </span><span style=\"border: 0px; color: rgb(0, 85, 170);\">salary</span><span style=\"border: 0px; color: gray;\">;\n    </span><span style=\"border: 0px; color: rgb(170, 85, 0);\">//</span><span style=\"border: 0px; color: rgb(170, 85, 0);\"> DEPARTMENT是一个常量</span><span style=\"border: 0px; color: rgb(170, 85, 0);\"></span><span style=\"border: 0px; color: gray;\">\n    </span><span style=\"border: 0px; color: green;\">public</span><span style=\"border: 0px; color: gray;\"> </span><span style=\"border: 0px;\">static</span><span style=\"border: 0px; color: gray;\"> </span><span style=\"border: 0px;\">final</span><span style=\"border: 0px; color: gray;\"> </span><span style=\"border: 0px; color: rgb(0, 85, 170);\">String</span><span style=\"border: 0px; color: gray;\"> </span><span style=\"border: 0px; color: rgb(0, 85, 170);\">DEPARTMENT</span><span style=\"border: 0px; color: gray;\"> = </span><span style=\"border: 0px; color: rgb(139, 0, 0);\">\"</span><span style=\"border: 0px; color: rgb(170, 17, 17);\">开发人员</span><span style=\"border: 0px; color: rgb(139, 0, 0);\">\"</span><span style=\"border: 0px; color: gray;\">;\n    </span><span style=\"border: 0px; color: green;\">public</span><span style=\"border: 0px; color: gray;\"> </span><span style=\"border: 0px;\">static</span><span style=\"border: 0px; color: gray;\"> </span><span style=\"border: 0px;\">void</span><span style=\"border: 0px; color: gray;\"> </span><span style=\"border: 0px; color: rgb(0, 85, 170);\">main</span><span style=\"border: 0px; color: olive;\">(</span><span style=\"border: 0px; color: rgb(0, 85, 170);\">String</span><span style=\"border: 0px; color: olive;\">[</span><span style=\"border: 0px; color: olive;\">]</span><span style=\"border: 0px; color: gray;\"> </span><span style=\"border: 0px; color: rgb(0, 85, 170);\">args</span><span style=\"border: 0px; color: olive;\">)</span><span style=\"border: 0px; color: olive;\">{</span><span style=\"border: 0px; color: gray;\">\n    </span><span style=\"border: 0px; color: rgb(0, 85, 170);\">salary</span><span style=\"border: 0px; color: gray;\"> = </span><span style=\"border: 0px; color: maroon;\">10000</span><span style=\"border: 0px; color: gray;\">;\n        </span><span style=\"border: 0px; color: rgb(0, 85, 170);\">System</span><span style=\"border: 0px; color: gray;\">.</span><span style=\"border: 0px; color: rgb(0, 85, 170);\">out</span><span style=\"border: 0px; color: gray;\">.</span><span style=\"border: 0px; color: rgb(0, 85, 170);\">println</span><span style=\"border: 0px; color: olive;\">(</span><span style=\"border: 0px; color: rgb(0, 85, 170);\">DEPARTMENT</span><span style=\"border: 0px; color: gray;\">+</span><span style=\"border: 0px; color: rgb(139, 0, 0);\">\"</span><span style=\"border: 0px; color: rgb(170, 17, 17);\">平均工资:</span><span style=\"border: 0px; color: rgb(139, 0, 0);\">\"</span><span style=\"border: 0px; color: gray;\">+</span><span style=\"border: 0px; color: rgb(0, 85, 170);\">salary</span><span style=\"border: 0px; color: olive;\">)</span><span style=\"border: 0px; color: gray;\">;\n    </span><span style=\"border: 0px; color: olive;\">}</span><span style=\"border: 0px; color: gray;\">\n</span><span style=\"border: 0px; color: olive;\">}</span><p style=\"border: 0px; margin-top: 0px; margin-bottom: 0px; line-height: 2em; overflow-wrap: break-word; word-break: break-all; font-size: 13px; font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; color: rgb(51, 51, 51); white-space: normal;\">以上实例编译运行结果如下:</p><pre style=\"border-left-width: 4px; border-color: rgb(221, 221, 221); margin: 15px auto; padding: 10px 15px; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; line-height: 20px; font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; background: url(&quot;/images/codecolorer_bg.gif&quot;) center top rgb(251, 251, 251);\"><span style=\"border: 0px; color: rgb(102, 102, 0);\">开发人员平均工资:</span><span style=\"border: 0px; color: rgb(0, 102, 102);\">10000.0</span></pre></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div>', 'Java 变量类型', 0, '', '0', '2', 0, '1', 11, '2022-07-18 03:54:40', NULL, NULL, 0);
INSERT INTO `my_article` VALUES (22, '面向对象基础', '<h1 style=\"position: relative; margin-top: 1em; margin-bottom: 16px; line-height: 1.4; font-size: 2.2em; padding-top: 0.6em; color: rgb(8, 8, 8); font-family: Helvetica, Arial, freesans, sans-serif;\">面向对象基础</h1><h2 style=\"position: relative; margin-top: 1em; margin-bottom: 16px; line-height: 1.2; font-size: 1.8em; padding-top: 0.6em; color: rgb(8, 8, 8); font-family: Helvetica, Arial, freesans, sans-serif;\">1.面向对象思想</h2><p style=\"margin-top: 16px; margin-bottom: 16px; color: rgb(8, 8, 8); font-family: Helvetica, Arial, freesans, sans-serif; font-size: 14px;\">&nbsp;面向对象的思想其实就是让我们<strong>去指挥别人</strong>或者是<strong>使用工具</strong>帮我们去把要做的事情完成。</p><h2 style=\"position: relative; margin-top: 1em; margin-bottom: 16px; line-height: 1.2; font-size: 1.8em; padding-top: 0.6em; color: rgb(8, 8, 8); font-family: Helvetica, Arial, freesans, sans-serif;\">2.类和对象</h2><h3 style=\"position: relative; margin-top: 1em; margin-bottom: 16px; line-height: 1; font-size: 1.3em; padding-top: 0.6em; color: rgb(8, 8, 8); font-family: Helvetica, Arial, freesans, sans-serif;\">2.1 概念</h3><p style=\"margin-top: 16px; margin-bottom: 16px; color: rgb(8, 8, 8); font-family: Helvetica, Arial, freesans, sans-serif; font-size: 14px;\">类：对一类事物共同点的&nbsp;描述</p><p style=\"margin-top: 16px; margin-bottom: 16px; color: rgb(8, 8, 8); font-family: Helvetica, Arial, freesans, sans-serif; font-size: 14px;\">对象：对象是某类事物的一个&nbsp;个体</p><blockquote style=\"margin-top: 16px; margin-bottom: 16px; padding-top: 10px; padding-bottom: 10px; padding-left: 16px; border-left-width: 2px; border-left-color: rgba(36, 112, 179, 0.4); border-radius: 0px 3px 3px 0px; color: rgb(8, 8, 8); background-color: rgba(212, 222, 231, 0.247); font-family: Helvetica, Arial, freesans, sans-serif; font-size: 14px;\"><p style=\"margin-top: 0px;\">类仅仅只是描述，我们要指挥事物指挥的肯定是某类事物中的一个个体。我们去指挥或者使用事物的时候肯定是使用其中的具体的个体也就是对象。</p></blockquote><h3 style=\"position: relative; margin-top: 1em; margin-bottom: 16px; line-height: 1; font-size: 1.3em; padding-top: 0.6em; color: rgb(8, 8, 8); font-family: Helvetica, Arial, freesans, sans-serif;\">2.2 类的定义</h3><p style=\"margin-top: 16px; margin-bottom: 16px; color: rgb(8, 8, 8); font-family: Helvetica, Arial, freesans, sans-serif; font-size: 14px;\">我们去描述一类事物的共同点可以分成两种，一种是属性，一种是行为(技能)。</p><p style=\"margin-top: 16px; margin-bottom: 16px; color: rgb(8, 8, 8); font-family: Helvetica, Arial, freesans, sans-serif; font-size: 14px;\">属性：具有具体的值的共同点就是属性(例如：姓名，年龄，血量)，我们用成员变量表示</p><p style=\"margin-top: 16px; margin-bottom: 16px; color: rgb(8, 8, 8); font-family: Helvetica, Arial, freesans, sans-serif; font-size: 14px;\">行为(技能)：&nbsp;具体的技能或功能这些都是包含了一系列的动作。这些共同点就是行为，我们用成员方法表示。（例如：吃饭，睡觉）</p><p style=\"margin-top: 16px; margin-bottom: 16px; color: rgb(8, 8, 8); font-family: Helvetica, Arial, freesans, sans-serif; font-size: 14px;\">成员变量：定义在类中方法外的变量就是成员变量。</p><p style=\"margin-top: 16px; margin-bottom: 16px; color: rgb(8, 8, 8); font-family: Helvetica, Arial, freesans, sans-serif; font-size: 14px;\">成员方法：没有static修饰的方法就是成员方法。</p><pre style=\"margin-top: 16px; margin-bottom: 16px; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 0.85em; line-height: 1.45; font-family: &quot;JetBrains Mono&quot;, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; padding: 16px; overflow: auto; border-radius: 3px; color: rgb(8, 8, 8); background-color: rgba(212, 222, 231, 0.247);\"><code style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 11.9px; line-height: inherit; font-family: &quot;JetBrains Mono&quot;, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; padding: 0px; margin-right: 0px; margin-left: 0px; color: rgb(8, 8, 8); background: transparent; word-break: normal; white-space: pre; display: inline; max-width: initial; overflow: initial; overflow-wrap: normal;\"><span style=\"color: rgb(0, 51, 179);\">public</span> <span style=\"color: rgb(0, 51, 179);\">class</span> Phone {\n\n    <span style=\"color: rgb(140, 140, 140);\">// 成员变量</span>\n    String brand; <span style=\"color: rgb(140, 140, 140);\">// 品牌</span>\n    <span style=\"color: rgb(0, 51, 179);\">double</span> price; <span style=\"color: rgb(140, 140, 140);\">// 价格</span>\n    String color; <span style=\"color: rgb(140, 140, 140);\">// 颜色</span>\n\n    <span style=\"color: rgb(140, 140, 140);\">// 成员方法</span>\n    <span style=\"color: rgb(0, 51, 179);\">public</span> <span style=\"color: rgb(0, 51, 179);\">void</span> call() {\n        System.out.println(<span style=\"color: rgb(6, 125, 23);\">\"打00009999888866663333333325474425477747*##36363#打电话\"</span>);\n    }\n\n    <span style=\"color: rgb(0, 51, 179);\">public</span> <span style=\"color: rgb(0, 51, 179);\">void</span> sendMessage() {\n        System.out.println(<span style=\"color: rgb(6, 125, 23);\">\"群发短信\"</span>);\n    }\n\n	\n}\n</code></pre><h3 style=\"position: relative; margin-top: 1em; margin-bottom: 16px; line-height: 1; font-size: 1.3em; padding-top: 0.6em; color: rgb(8, 8, 8); font-family: Helvetica, Arial, freesans, sans-serif;\">2.3 对象的创建和使用</h3><h4 style=\"position: relative; margin-top: 1em; margin-bottom: 16px; line-height: 1.4; font-size: 14px; color: rgb(8, 8, 8); font-family: Helvetica, Arial, freesans, sans-serif;\">2.3.1 创建对象格式</h4><p style=\"margin-top: 16px; margin-bottom: 16px; color: rgb(8, 8, 8); font-family: Helvetica, Arial, freesans, sans-serif; font-size: 14px;\">&nbsp;<strong>类名 对象名 = new 类名();</strong></p><pre style=\"margin-top: 16px; margin-bottom: 16px; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 0.85em; line-height: 1.45; font-family: &quot;JetBrains Mono&quot;, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; padding: 16px; overflow: auto; border-radius: 3px; color: rgb(8, 8, 8); background-color: rgba(212, 222, 231, 0.247);\"><code style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 11.9px; line-height: inherit; font-family: &quot;JetBrains Mono&quot;, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; padding: 0px; margin-right: 0px; margin-left: 0px; color: rgb(8, 8, 8); background: transparent; word-break: normal; white-space: pre; display: inline; max-width: initial; overflow: initial; overflow-wrap: normal;\">Phone phone = <span style=\"color: rgb(0, 51, 179);\">new</span> Phone();\nStudent stu = <span style=\"color: rgb(0, 51, 179);\">new</span> Student();\n</code></pre><h4 style=\"position: relative; margin-top: 1em; margin-bottom: 16px; line-height: 1.4; font-size: 14px; color: rgb(8, 8, 8); font-family: Helvetica, Arial, freesans, sans-serif;\">2.3.2 成员变量的使用格式</h4><p style=\"margin-top: 16px; margin-bottom: 16px; color: rgb(8, 8, 8); font-family: Helvetica, Arial, freesans, sans-serif; font-size: 14px;\">&nbsp;<strong>对象名.成员变量名</strong></p><p style=\"margin-top: 16px; margin-bottom: 16px; color: rgb(8, 8, 8); font-family: Helvetica, Arial, freesans, sans-serif; font-size: 14px;\">注意:在定义的类中使用本类中的成员变量的时候&nbsp;<strong>对象名.</strong>&nbsp;可以省略&nbsp;可以直接写&nbsp;<strong>成员变量名</strong></p><pre style=\"margin-top: 16px; margin-bottom: 16px; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 0.85em; line-height: 1.45; font-family: &quot;JetBrains Mono&quot;, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; padding: 16px; overflow: auto; border-radius: 3px; color: rgb(8, 8, 8); background-color: rgba(212, 222, 231, 0.247);\"><code style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 11.9px; line-height: inherit; font-family: &quot;JetBrains Mono&quot;, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; padding: 0px; margin-right: 0px; margin-left: 0px; color: rgb(8, 8, 8); background: transparent; word-break: normal; white-space: pre; display: inline; max-width: initial; overflow: initial; overflow-wrap: normal;\">Phone phone = <span style=\"color: rgb(0, 51, 179);\">new</span> Phone();\n<span style=\"color: rgb(140, 140, 140);\">//设置phone的brand属性</span>\nphone.brand = <span style=\"color: rgb(6, 125, 23);\">\"华为\"</span>;\n<span style=\"color: rgb(140, 140, 140);\">//打印phone的brand属性</span>\nSystem.out.println(phone.brand);\n</code></pre><h4 style=\"position: relative; margin-top: 1em; margin-bottom: 16px; line-height: 1.4; font-size: 14px; color: rgb(8, 8, 8); font-family: Helvetica, Arial, freesans, sans-serif;\">2.3.3 成员方法的调用格式</h4><p style=\"margin-top: 16px; margin-bottom: 16px; color: rgb(8, 8, 8); font-family: Helvetica, Arial, freesans, sans-serif; font-size: 14px;\">&nbsp;<strong>对象名.方法名(参数)</strong></p><p style=\"margin-top: 16px; margin-bottom: 16px; color: rgb(8, 8, 8); font-family: Helvetica, Arial, freesans, sans-serif; font-size: 14px;\">注意:在定义的类中使用本类中的成员方法的时候&nbsp;<strong>对象名.</strong>&nbsp;可以省略&nbsp;可以直接写&nbsp;<strong>方法名(参数)</strong></p><pre style=\"margin-top: 16px; margin-bottom: 16px; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 0.85em; line-height: 1.45; font-family: &quot;JetBrains Mono&quot;, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; padding: 16px; overflow: auto; border-radius: 3px; color: rgb(8, 8, 8); background-color: rgba(212, 222, 231, 0.247);\"><code style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 11.9px; line-height: inherit; font-family: &quot;JetBrains Mono&quot;, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; padding: 0px; margin-right: 0px; margin-left: 0px; color: rgb(8, 8, 8); background: transparent; word-break: normal; white-space: pre; display: inline; max-width: initial; overflow: initial; overflow-wrap: normal;\">Phone phone = <span style=\"color: rgb(0, 51, 179);\">new</span> Phone();\n<span style=\"color: rgb(140, 140, 140);\">//使用phone的sendMessage方法</span>\nphone.sendMessage();\n</code></pre><h2 style=\"position: relative; margin-top: 1em; margin-bottom: 16px; line-height: 1.2; font-size: 1.8em; padding-top: 0.6em; color: rgb(8, 8, 8); font-family: Helvetica, Arial, freesans, sans-serif;\">3. 构造方法</h2><h3 style=\"position: relative; margin-top: 1em; margin-bottom: 16px; line-height: 1; font-size: 1.3em; padding-top: 0.6em; color: rgb(8, 8, 8); font-family: Helvetica, Arial, freesans, sans-serif;\">3.1 定义格式</h3><p style=\"margin-top: 16px; margin-bottom: 16px; color: rgb(8, 8, 8); font-family: Helvetica, Arial, freesans, sans-serif; font-size: 14px;\">构造方法的定义格式就是在普通成员方法定义格式的基础上加上了两个强制的要求。</p><p style=\"margin-top: 16px; margin-bottom: 16px; color: rgb(8, 8, 8); font-family: Helvetica, Arial, freesans, sans-serif; font-size: 14px;\">要求：①没有返回值类型,连void都不能写&nbsp;②方法名和类名必须相同</p><p style=\"margin-top: 16px; margin-bottom: 16px; color: rgb(8, 8, 8); font-family: Helvetica, Arial, freesans, sans-serif; font-size: 14px;\">例如：</p><pre style=\"margin-top: 16px; margin-bottom: 16px; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 0.85em; line-height: 1.45; font-family: &quot;JetBrains Mono&quot;, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; padding: 16px; overflow: auto; border-radius: 3px; color: rgb(8, 8, 8); background-color: rgba(212, 222, 231, 0.247);\"><code style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 11.9px; line-height: inherit; font-family: &quot;JetBrains Mono&quot;, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; padding: 0px; margin-right: 0px; margin-left: 0px; color: rgb(8, 8, 8); background: transparent; word-break: normal; white-space: pre; display: inline; max-width: initial; overflow: initial; overflow-wrap: normal;\"><span style=\"color: rgb(0, 51, 179);\">public</span> <span style=\"color: rgb(0, 51, 179);\">class</span> Phone {\n	<span style=\"color: rgb(140, 140, 140);\">// 成员变量</span>\n    String brand; <span style=\"color: rgb(140, 140, 140);\">// 品牌</span>\n    <span style=\"color: rgb(0, 51, 179);\">double</span> price; <span style=\"color: rgb(140, 140, 140);\">// 价格</span>\n    String color; <span style=\"color: rgb(140, 140, 140);\">// 颜色</span>\n	<span style=\"color: rgb(0, 51, 179);\">public</span> Phone(){\n        <span style=\"color: rgb(140, 140, 140);\">//这是一个无参构造</span>\n    }\n    <span style=\"color: rgb(0, 51, 179);\">public</span> Phone(String color,<span style=\"color: rgb(0, 51, 179);\">double</span> price,String brand){\n        <span style=\"color: rgb(140, 140, 140);\">//这是一个有参构造</span>\n        <span style=\"color: rgb(0, 51, 179);\">this</span>.color = color;\n        <span style=\"color: rgb(0, 51, 179);\">this</span>.price = price;\n        <span style=\"color: rgb(0, 51, 179);\">this</span>.brand = brand;\n    }\n}\n</code></pre><h3 style=\"position: relative; margin-top: 1em; margin-bottom: 16px; line-height: 1; font-size: 1.3em; padding-top: 0.6em; color: rgb(8, 8, 8); font-family: Helvetica, Arial, freesans, sans-serif;\">3.2 调用格式</h3><p style=\"margin-top: 16px; margin-bottom: 16px; color: rgb(8, 8, 8); font-family: Helvetica, Arial, freesans, sans-serif; font-size: 14px;\">&nbsp;<strong>new 类名(参数);</strong></p><p style=\"margin-top: 16px; margin-bottom: 16px; color: rgb(8, 8, 8); font-family: Helvetica, Arial, freesans, sans-serif; font-size: 14px;\">例如：</p><pre style=\"margin-top: 16px; margin-bottom: 16px; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 0.85em; line-height: 1.45; font-family: &quot;JetBrains Mono&quot;, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; padding: 16px; overflow: auto; border-radius: 3px; color: rgb(8, 8, 8); background-color: rgba(212, 222, 231, 0.247);\"><code style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 11.9px; line-height: inherit; font-family: &quot;JetBrains Mono&quot;, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; padding: 0px; margin-right: 0px; margin-left: 0px; color: rgb(8, 8, 8); background: transparent; word-break: normal; white-space: pre; display: inline; max-width: initial; overflow: initial; overflow-wrap: normal;\">Phone p = <span style=\"color: rgb(0, 51, 179);\">new</span> Phone();\nPhone p2 = <span style=\"color: rgb(0, 51, 179);\">new</span> Phone(<span style=\"color: rgb(6, 125, 23);\">\"原谅绿\"</span>,<span style=\"color: rgb(23, 80, 235);\">2999.9</span>,<span style=\"color: rgb(6, 125, 23);\">\"华为\"</span>);\n</code></pre><h3 style=\"position: relative; margin-top: 1em; margin-bottom: 16px; line-height: 1; font-size: 1.3em; padding-top: 0.6em; color: rgb(8, 8, 8); font-family: Helvetica, Arial, freesans, sans-serif;\">3.3 构造方法的作用</h3><ul style=\"padding-left: 2em; margin-top: 16px; margin-bottom: 16px; color: rgb(8, 8, 8); font-family: Helvetica, Arial, freesans, sans-serif; font-size: 14px;\"><li>创建对象</li><li>在创建对象的时候更便捷的对成员变量进行赋值</li><li>对类中的成员变量进行<strong>默认初始化</strong></li></ul><h3 style=\"position: relative; margin-top: 1em; margin-bottom: 16px; line-height: 1; font-size: 1.3em; padding-top: 0.6em; color: rgb(8, 8, 8); font-family: Helvetica, Arial, freesans, sans-serif;\">3.4 注意事项</h3><p style=\"margin-top: 16px; margin-bottom: 16px; color: rgb(8, 8, 8); font-family: Helvetica, Arial, freesans, sans-serif; font-size: 14px;\">&nbsp;<strong>如果一个类中没有写构造方法，编译器会默认送我们一个无参构造方法，但是如果自己写了，编译器就不会送了。这种情况下建议自己再加一个无参构造</strong></p>', '1.面向对象思想', 1, '/upload/11/11be1d74faa3a9479495c6952252bf006d.jpg', '0', '2', 1, '1', 11, '2022-07-18 03:57:02', NULL, NULL, 0);

-- ----------------------------
-- Table structure for my_category
-- ----------------------------
DROP TABLE IF EXISTS `my_category`;
CREATE TABLE `my_category`  (
  `id` bigint NOT NULL AUTO_INCREMENT,
  `name` varchar(128) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '分类名',
  `pid` bigint NULL DEFAULT -1 COMMENT '父分类id，如果没有父分类为-1',
  `description` varchar(512) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '描述',
  `status` char(1) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT '0' COMMENT '状态0:正常,1禁用',
  `create_by` bigint NULL DEFAULT NULL,
  `create_time` datetime NULL DEFAULT NULL,
  `update_by` bigint NULL DEFAULT NULL,
  `update_time` datetime NULL DEFAULT NULL,
  `del_flag` int NULL DEFAULT 0 COMMENT '删除标志（0代表未删除，1代表已删除）',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 16 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci COMMENT = '分类表' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of my_category
-- ----------------------------
INSERT INTO `my_category` VALUES (0, '未分类', -1, NULL, '0', NULL, NULL, NULL, NULL, 0);
INSERT INTO `my_category` VALUES (1, 'java', -1, 'wsd', '0', NULL, NULL, NULL, NULL, 0);
INSERT INTO `my_category` VALUES (2, 'PHP', -1, 'wsd', '0', NULL, NULL, NULL, NULL, 0);

-- ----------------------------
-- Table structure for my_comment
-- ----------------------------
DROP TABLE IF EXISTS `my_comment`;
CREATE TABLE `my_comment`  (
  `id` bigint NOT NULL AUTO_INCREMENT,
  `type` char(1) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT '0' COMMENT '评论类型（0代表文章评论，1代表友链评论）',
  `article_id` bigint NULL DEFAULT NULL COMMENT '文章id',
  `root_id` bigint NULL DEFAULT -1 COMMENT '根评论id',
  `content` varchar(512) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '评论内容',
  `to_comment_user_id` bigint NULL DEFAULT -1 COMMENT '所回复的目标评论的userid',
  `to_comment_id` bigint NULL DEFAULT -1 COMMENT '回复目标评论id',
  `create_by` bigint NULL DEFAULT NULL,
  `create_time` datetime NULL DEFAULT NULL,
  `update_by` bigint NULL DEFAULT NULL,
  `update_time` datetime NULL DEFAULT NULL,
  `del_flag` int NULL DEFAULT 0 COMMENT '删除标志（0代表未删除，1代表已删除）',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 75 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci COMMENT = '评论表' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of my_comment
-- ----------------------------
INSERT INTO `my_comment` VALUES (57, '0', 1, -1, '33333', -1, -1, 1, '2022-05-23 15:19:08', NULL, NULL, 0);
INSERT INTO `my_comment` VALUES (58, '0', 1, 57, '777', 1, 57, 1, '2022-05-23 15:19:24', NULL, NULL, 0);
INSERT INTO `my_comment` VALUES (59, '0', 3, -1, '草泥马', -1, -1, 1, '2022-07-15 14:43:58', NULL, NULL, 0);
INSERT INTO `my_comment` VALUES (60, '0', 3, 59, '牛尼玛', 1, 59, 3, '2022-07-15 14:44:29', NULL, NULL, 0);
INSERT INTO `my_comment` VALUES (61, '0', 3, -1, '666', -1, -1, 3, '2022-07-15 14:44:50', NULL, NULL, 0);
INSERT INTO `my_comment` VALUES (62, '0', 3, 61, '999', 3, 61, 1, '2022-07-15 14:45:01', NULL, NULL, 0);
INSERT INTO `my_comment` VALUES (63, '0', 1, -1, '对方是否', -1, -1, 3, '2022-07-17 01:39:54', NULL, NULL, 0);
INSERT INTO `my_comment` VALUES (64, '0', 1, 63, 'niunima', 3, 63, 1, '2022-07-17 01:43:42', NULL, NULL, 0);
INSERT INTO `my_comment` VALUES (65, '0', 1, 63, 'uuuu', 3, 63, 3, '2022-07-17 01:44:49', NULL, NULL, 0);
INSERT INTO `my_comment` VALUES (66, '0', 13, -1, 'juhyuuu', -1, -1, 1, '2022-07-17 01:53:15', NULL, NULL, 0);
INSERT INTO `my_comment` VALUES (67, '0', 16, -1, '666', -1, -1, 11, '2022-07-17 02:01:37', NULL, NULL, 0);
INSERT INTO `my_comment` VALUES (68, '0', 16, 67, '999', 11, 67, 11, '2022-07-17 02:01:45', NULL, NULL, 0);
INSERT INTO `my_comment` VALUES (69, '0', 1, -1, 'ukv', -1, -1, 14787164048675, '2022-07-17 05:12:15', NULL, NULL, 0);
INSERT INTO `my_comment` VALUES (70, '0', 11, -1, '5dhfh\nrth', -1, -1, 14787164048675, '2022-07-17 07:15:24', NULL, NULL, 0);
INSERT INTO `my_comment` VALUES (71, '0', 11, -1, 'thrwh', -1, -1, 14787164048675, '2022-07-17 07:15:33', NULL, NULL, 0);
INSERT INTO `my_comment` VALUES (72, '0', 9, -1, '66666666', -1, -1, 1, '2022-07-18 00:27:27', NULL, NULL, 0);
INSERT INTO `my_comment` VALUES (73, '0', 9, 72, 'nnm', 1, 72, 1, '2022-07-18 00:27:42', NULL, NULL, 0);
INSERT INTO `my_comment` VALUES (74, '0', 1, 69, 'zui', 14787164048675, 69, 11, '2022-07-18 03:40:56', NULL, NULL, 0);
INSERT INTO `my_comment` VALUES (75, '0', 1, 57, '你也不行啊', 1, 57, 11, '2022-07-18 03:41:19', NULL, NULL, 0);

-- ----------------------------
-- Table structure for my_link
-- ----------------------------
DROP TABLE IF EXISTS `my_link`;
CREATE TABLE `my_link`  (
  `id` bigint NOT NULL AUTO_INCREMENT,
  `name` varchar(256) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL,
  `logo` varchar(256) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL,
  `description` varchar(512) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL,
  `address` varchar(128) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '网站地址',
  `status` char(1) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT '2' COMMENT '审核状态 (0代表审核通过，1代表审核未通过，2代表未审核)',
  `create_by` bigint NULL DEFAULT NULL,
  `create_time` datetime NULL DEFAULT NULL,
  `update_by` bigint NULL DEFAULT NULL,
  `update_time` datetime NULL DEFAULT NULL,
  `del_flag` int NULL DEFAULT 0 COMMENT '删除标志（0代表未删除，1代表已删除）',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 3 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci COMMENT = '友链' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of my_link
-- ----------------------------
INSERT INTO `my_link` VALUES (1, 'sda', 'https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fn1.itc.cn%2Fimg8%2Fwb%2Frecom%2F2016%2F05%2F10%2F146286696706220328.PNG&refer=http%3A%2F%2Fn1.itc.cn&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=jpeg?sec=1646205529&t=f942665181eb9b0685db7a6f59d59975', 'sda', 'https://www.baidu.com', '1', NULL, '2022-01-13 08:25:47', NULL, '2022-01-13 08:36:14', 0);
INSERT INTO `my_link` VALUES (2, 'sda', 'https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fn1.itc.cn%2Fimg8%2Fwb%2Frecom%2F2016%2F05%2F10%2F146286696706220328.PNG&refer=http%3A%2F%2Fn1.itc.cn&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=jpeg?sec=1646205529&t=f942665181eb9b0685db7a6f59d59975', 'dada', 'https://www.qq.com', '1', NULL, '2022-01-13 09:06:10', NULL, '2022-01-13 09:07:09', 0);
INSERT INTO `my_link` VALUES (3, 'sa', 'https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fn1.itc.cn%2Fimg8%2Fwb%2Frecom%2F2016%2F05%2F10%2F146286696706220328.PNG&refer=http%3A%2F%2Fn1.itc.cn&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=jpeg?sec=1646205529&t=f942665181eb9b0685db7a6f59d59975', 'da', 'https://www.taobao.com', '1', NULL, '2022-01-13 09:23:01', NULL, '2022-01-13 09:23:01', 0);

-- ----------------------------
-- Table structure for sys_menu
-- ----------------------------
DROP TABLE IF EXISTS `sys_menu`;
CREATE TABLE `sys_menu`  (
  `id` bigint NOT NULL AUTO_INCREMENT,
  `menu_name` varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL DEFAULT 'NULL' COMMENT '菜单名',
  `path` varchar(200) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '路由地址',
  `component` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '组件路径',
  `visible` char(1) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT '0' COMMENT '菜单状态（0显示 1隐藏）',
  `status` char(1) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT '0' COMMENT '菜单状态（0正常 1停用）',
  `perms` varchar(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '权限标识',
  `icon` varchar(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT '#' COMMENT '菜单图标',
  `create_by` bigint NULL DEFAULT NULL,
  `create_time` datetime NULL DEFAULT NULL,
  `update_by` bigint NULL DEFAULT NULL,
  `update_time` datetime NULL DEFAULT NULL,
  `del_flag` int NULL DEFAULT 0 COMMENT '是否删除（0未删除 1已删除）',
  `remark` varchar(500) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '备注',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 8 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci COMMENT = '菜单表' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of sys_menu
-- ----------------------------
INSERT INTO `sys_menu` VALUES (1, '查看博文详情', NULL, NULL, '0', '0', 'user_article', '#', NULL, NULL, NULL, NULL, 0, NULL);
INSERT INTO `sys_menu` VALUES (2, '进入后台', '/admin/', NULL, '0', '0', 'admin_basic', '#', NULL, NULL, NULL, NULL, 0, NULL);
INSERT INTO `sys_menu` VALUES (3, '后台按钮页面', '/ui_buttons', NULL, '0', '0', 'admin_buttons', '#', NULL, NULL, NULL, NULL, 0, NULL);
INSERT INTO `sys_menu` VALUES (4, '角色和权限页面', '/admin/', NULL, '0', '0', 'admin_roleAndMenu', '#', NULL, NULL, NULL, NULL, 0, NULL);
INSERT INTO `sys_menu` VALUES (5, '进入管理员管理页面', '/admin/management', NULL, '0', '0', 'admin_managerement', '#', NULL, NULL, NULL, NULL, 0, '');
INSERT INTO `sys_menu` VALUES (6, '进去后台', '/admin/back', NULL, '0', '1', 'back', '#', NULL, NULL, NULL, NULL, 0, '');
INSERT INTO `sys_menu` VALUES (7, '进入后台00000', '/admin/back', NULL, '0', '0', 'back', '#', NULL, NULL, NULL, NULL, 1, '');

-- ----------------------------
-- Table structure for sys_role
-- ----------------------------
DROP TABLE IF EXISTS `sys_role`;
CREATE TABLE `sys_role`  (
  `id` bigint NOT NULL AUTO_INCREMENT,
  `name` varchar(128) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL,
  `role_key` varchar(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '角色权限字符串',
  `status` char(1) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT '0' COMMENT '角色状态（0正常 1停用）',
  `del_flag` int NULL DEFAULT 0 COMMENT 'del_flag',
  `create_by` bigint NULL DEFAULT NULL,
  `create_time` datetime NULL DEFAULT NULL,
  `update_by` bigint NULL DEFAULT NULL,
  `update_time` datetime NULL DEFAULT NULL,
  `remark` varchar(500) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '备注',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 18 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci COMMENT = '角色表' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of sys_role
-- ----------------------------
INSERT INTO `sys_role` VALUES (1, '管理员', 'admin', '0', 0, NULL, '2022-04-14 20:39:43', 1, NULL, NULL);
INSERT INTO `sys_role` VALUES (2, '用户', 'user', '0', 0, NULL, NULL, 1, NULL, NULL);
INSERT INTO `sys_role` VALUES (3, '数据库管理员', 'dataMaster', '1', 0, NULL, NULL, 1, NULL, '');
INSERT INTO `sys_role` VALUES (4, 'vip0', 'vip0', '0', 0, NULL, NULL, 1, NULL, NULL);
INSERT INTO `sys_role` VALUES (5, 'vip1', 'vip1', '0', 0, NULL, NULL, 1, NULL, NULL);
INSERT INTO `sys_role` VALUES (6, 'vip2', 'vip2', '0', 0, NULL, NULL, 1, NULL, NULL);
INSERT INTO `sys_role` VALUES (7, 'vip3', 'vip3', '0', 0, NULL, NULL, 1, NULL, NULL);
INSERT INTO `sys_role` VALUES (8, 'vip4', 'vip4', '0', 0, NULL, NULL, 1, NULL, NULL);
INSERT INTO `sys_role` VALUES (9, 'vip5', 'vip5', '0', 0, NULL, NULL, 1, NULL, NULL);
INSERT INTO `sys_role` VALUES (10, 'vip6', 'vip6', '0', 0, NULL, NULL, 1, NULL, NULL);
INSERT INTO `sys_role` VALUES (11, 'vip7', 'vip7', '0', 0, NULL, NULL, 1, NULL, NULL);
INSERT INTO `sys_role` VALUES (13, 'vip8', 'vip8', '1', 0, NULL, NULL, 1, NULL, '');
INSERT INTO `sys_role` VALUES (15, 'vip9', 'vip9', '0', 0, NULL, NULL, NULL, NULL, '');
INSERT INTO `sys_role` VALUES (16, 'bbb', 'bbbb', '0', 1, NULL, NULL, NULL, NULL, '');

-- ----------------------------
-- Table structure for sys_role_menu
-- ----------------------------
DROP TABLE IF EXISTS `sys_role_menu`;
CREATE TABLE `sys_role_menu`  (
  `role_id` bigint NOT NULL AUTO_INCREMENT COMMENT '角色ID',
  `menu_id` bigint NOT NULL DEFAULT 0 COMMENT '菜单id',
  PRIMARY KEY (`role_id`, `menu_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 3 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of sys_role_menu
-- ----------------------------
INSERT INTO `sys_role_menu` VALUES (1, 1);
INSERT INTO `sys_role_menu` VALUES (1, 2);
INSERT INTO `sys_role_menu` VALUES (1, 3);
INSERT INTO `sys_role_menu` VALUES (1, 4);
INSERT INTO `sys_role_menu` VALUES (1, 5);
INSERT INTO `sys_role_menu` VALUES (2, 1);

-- ----------------------------
-- Table structure for sys_user
-- ----------------------------
DROP TABLE IF EXISTS `sys_user`;
CREATE TABLE `sys_user`  (
  `id` bigint NOT NULL AUTO_INCREMENT COMMENT '主键',
  `user_name` varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL DEFAULT 'NULL' COMMENT '用户名',
  `nick_name` varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL DEFAULT 'NULL' COMMENT '昵称',
  `password` varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL DEFAULT '$2a$10$4.8r77FW8p6fHCjinUzfVOigibYZMYBOd8TrszLXxEXU/ndrRiyAS' COMMENT '密码',
  `type` char(1) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT '0' COMMENT '用户类型：0代表普通用户，1代表管理员',
  `status` char(1) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT '0' COMMENT '账号状态（0正常 1停用）',
  `email` varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '邮箱',
  `phonenumber` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '手机号',
  `sex` char(1) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '用户性别（0男，1女，2未知）',
  `avatar` varchar(128) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '头像',
  `create_by` bigint NULL DEFAULT NULL COMMENT '创建人的用户id',
  `create_time` datetime NULL DEFAULT NULL COMMENT '创建时间',
  `update_by` bigint NULL DEFAULT NULL COMMENT '更新人',
  `update_time` datetime NULL DEFAULT NULL COMMENT '更新时间',
  `del_flag` int NULL DEFAULT 0 COMMENT '删除标志（0代表未删除，1代表已删除）',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 14787164048676 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci COMMENT = '用户表' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of sys_user
-- ----------------------------
INSERT INTO `sys_user` VALUES (1, 'ccx', '暴富第一高手', '$2a$10$uLtSldtGkHffAaD.LZide.R/TBMtj3TR1p4q6H/Lh8Jyp/C8POKyC', '1', '0', '553378997@qq.com', '18888888888', '0', '/upload/1/1f48823bb60d74234b1efc51099ec9473.png', NULL, '2022-01-05 09:01:56', 1, '2022-01-30 15:37:03', 0);
INSERT INTO `sys_user` VALUES (3, 'hejie', 'weqe', '$2a$10$4.8r77FW8p6fHCjinUzfVOigibYZMYBOd8TrszLXxEXU/ndrRiyAS', '1', '0', NULL, NULL, '0', '/upload/3/37149e90b878d426fb28b982a430ec389.png', NULL, '2022-01-05 13:28:43', NULL, '2022-01-05 13:28:43', 0);
INSERT INTO `sys_user` VALUES (4, 'hejie2', 'dsadd', '$2a$10$4.8r77FW8p6fHCjinUzfVOigibYZMYBOd8TrszLXxEXU/ndrRiyAS', '1', '0', '23412332@qq.com', '19098790742', '0', NULL, NULL, NULL, NULL, NULL, 0);
INSERT INTO `sys_user` VALUES (6, 'sangeng', 'sangeng', '$2a$10$4.8r77FW8p6fHCjinUzfVOigibYZMYBOd8TrszLXxEXU/ndrRiyAS', '1', '0', '2312321', '17777777777', '0', NULL, NULL, '2022-01-16 06:54:26', NULL, '2022-01-16 07:06:34', 0);
INSERT INTO `sys_user` VALUES (7, 'weixin', 'weixin', '$2a$10$4.8r77FW8p6fHCjinUzfVOigibYZMYBOd8TrszLXxEXU/ndrRiyAS', '0', '0', 'weixin@qq.com', NULL, NULL, NULL, -1, '2022-01-30 17:18:44', -1, '2022-01-30 17:18:44', 0);
INSERT INTO `sys_user` VALUES (8, '33333333', '小老弟', '$2a$10$4.8r77FW8p6fHCjinUzfVOigibYZMYBOd8TrszLXxEXU/ndrRiyAS', '0', '0', '57@qq.com', NULL, NULL, NULL, NULL, '2022-03-24 13:37:24', NULL, '2022-03-24 13:37:24', 0);
INSERT INTO `sys_user` VALUES (9, '174', '小老弟', '$2a$10$4.8r77FW8p6fHCjinUzfVOigibYZMYBOd8TrszLXxEXU/ndrRiyAS', '0', '0', '578997@qq.com', NULL, NULL, NULL, NULL, '2022-03-24 14:09:59', NULL, '2022-03-24 14:09:59', 0);
INSERT INTO `sys_user` VALUES (10, '7766', '不爱吃屎的传福', '$2a$10$4.8r77FW8p6fHCjinUzfVOigibYZMYBOd8TrszLXxEXU/ndrRiyAS', '1', '0', '578997@qq.com', '152548766955', NULL, NULL, NULL, NULL, NULL, NULL, 0);
INSERT INTO `sys_user` VALUES (11, 'admin', '小老弟', '$2a$10$FBxJepwER7MOmb7S3Lcr7uKQxLoyziqXsI3d/tGZM5LTBPfS0qWDm', '0', '0', '55337785@qq.com', NULL, NULL, '/upload/11/11a97e133c1425481a8eed4ed60ace15b1.png', NULL, '2022-07-15 13:54:04', NULL, '2022-07-15 13:54:04', 0);
INSERT INTO `sys_user` VALUES (14787164048675, 'ssj', '小老弟', '$2a$10$blPVAm4xqFerPY0MMjWbN.JCf4LLq3nSkQ62hBTT/DUNk4S/WXdsi', '0', '0', '', NULL, NULL, NULL, NULL, '2022-07-17 05:05:34', NULL, '2022-07-17 05:05:34', 0);

-- ----------------------------
-- Table structure for sys_user_role
-- ----------------------------
DROP TABLE IF EXISTS `sys_user_role`;
CREATE TABLE `sys_user_role`  (
  `user_id` bigint NOT NULL AUTO_INCREMENT COMMENT '用户id',
  `role_id` bigint NOT NULL DEFAULT 0 COMMENT '角色id',
  PRIMARY KEY (`user_id`, `role_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 12 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of sys_user_role
-- ----------------------------
INSERT INTO `sys_user_role` VALUES (1, 1);
INSERT INTO `sys_user_role` VALUES (1, 2);
INSERT INTO `sys_user_role` VALUES (1, 4);
INSERT INTO `sys_user_role` VALUES (1, 5);
INSERT INTO `sys_user_role` VALUES (1, 6);
INSERT INTO `sys_user_role` VALUES (3, 2);
INSERT INTO `sys_user_role` VALUES (7, 2);
INSERT INTO `sys_user_role` VALUES (7, 3);
INSERT INTO `sys_user_role` VALUES (7, 4);
INSERT INTO `sys_user_role` VALUES (8, 6);
INSERT INTO `sys_user_role` VALUES (8, 7);
INSERT INTO `sys_user_role` VALUES (9, 2);
INSERT INTO `sys_user_role` VALUES (9, 3);
INSERT INTO `sys_user_role` VALUES (11, 1);
INSERT INTO `sys_user_role` VALUES (11, 2);

SET FOREIGN_KEY_CHECKS = 1;
